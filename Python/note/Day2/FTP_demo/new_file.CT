<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="29">
  <CheatEntries>
    <CheatEntry>
      <ID>18349</ID>
      <Description>"Activate Table"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(idallocs,$2000)
idallocs:
  label(weaponid)
  registersymbol(weaponid)
    weaponid:
    dq 0
  label(moveid)
  registersymbol(moveid)
    moveid:
    dq 0
  label(styleid)
  registersymbol(styleid)
    styleid:
    dq 0
  label(gunid)
  registersymbol(gunid)
    gunid:
    dq 0
  label(inputpressed)
  registersymbol(inputpressed)
    inputpressed:
    dq 0
  label(dbid)
  registersymbol(dbid)
    dbid:
    dq 0
  label(turbospeed)
  registersymbol(turbospeed)
    turbospeed:
    dq (float)1.2

  label(groundedmem)
  registersymbol(groundedmem)
    groundedmem:
    dq 0
  label(lockonmem)
  registersymbol(lockonmem)
    lockonmem:
    dq 0

//define(charmem,["DevilMayCry5.exe"+07A7AEE8]+B0)

//aobscanmodule(CurrentWeaponAlloc,DevilMayCry5.exe,44 89 BF B0 18 00 00) // should be unique
define(CurrentWeaponAlloc,"DevilMayCry5.exe"+B1FBA3)
alloc(newmem1,$1000,CurrentWeaponAlloc)
label(code1)
label(return1)

newmem1:

code1:
  mov [rdi+000018B0],r15d
  mov [weaponid],r15d
  jmp return1

CurrentWeaponAlloc:
  jmp newmem1
  nop
  nop
return1:
registersymbol(CurrentWeaponAlloc)

//aobscanmodule(CurrentGunAlloc,DevilMayCry5.exe,44 89 B7 D4 18 00 00) // should be unique
define(CurrentGunAlloc,"DevilMayCry5.exe"+B21CA7)
alloc(newmem2,$1000,CurrentGunAlloc)
label(code2)
label(return2)

newmem2:

code2:
  mov [rdi+000018D4],r14d
  mov [gunid],r14d
  jmp return2

CurrentGunAlloc:
  jmp newmem2
  nop
  nop
return2:
registersymbol(CurrentGunAlloc)

//aobscanmodule(MoveIdDeep,DevilMayCry5.exe,02 32 C0 48 8B 7C 24 48) // should be unique
define(MoveIdDeep,"DevilMayCry5.exe"+27405C0)
alloc(newmem3,$1000,MoveIdDeep)
label(neromoveid)
label(dantemoveid)
label(vmoveid)
label(moveidwrite)
label(return3)

newmem3:
  mov rdi,[rsp+48]

/////

  push rax
  mov rax, ["DevilMayCry5.exe"+07A7AEE8]
  mov rax, [rax+B0]
  cmp rax, 0
  je neromoveid
  cmp rax, 1
  je dantemoveid
  cmp rax, 2
  je vmoveid
  jmp exit3

/////

neromoveid:
  cmp byte ptr [rsi+180],03 //Nero, haven't checked
  je moveidwrite
  cmp byte ptr [rsi+2B8],'Mov' //Nero Online as Player 2 Tested with Garuda
  je moveidwrite
  jmp exit3

/////

dantemoveid:
  cmp [rsi+50],#16
  je moveidwrite
  cmp byte ptr [rsi+100],C
  je moveidwrite
  jmp exit3

/////

vmoveid:
  cmp byte ptr [rsi+100],08 //V
  je moveidwrite
  jmp exit3

/////

moveidwrite:
  pop rax
  push rbp
  mov ebp, [rsi+2C]
  mov dword ptr [moveid],ebp
  mov ebp,[rsi+34]
  mov dword ptr [moveid+2],ebp
  pop rbp
  jmp return3

exit3:
  pop rax
  jmp return3

MoveIdDeep: //+03
  jmp newmem3

return3:
registersymbol(MoveIdDeep)

//aobscanmodule(INJECT,DevilMayCry5.exe,A9 07 00 00 48 8B 88 B0 03 00 00) //+04
define(groundstatealloc,"DevilMayCry5.exe"+233B27F)
alloc(groundstatenewmem,2048,groundstatealloc)
label(groundstatereturnhere)
label(groundstateoriginalcode)
label(groundstateexit)

groundstatenewmem:

mov rcx,[rax+000003B0]
lea rcx, [rcx+10]
mov [groundedmem], rcx

groundstateoriginalcode:
mov rcx,[rax+000003B0]

groundstateexit:
jmp groundstatereturnhere

groundstatealloc:
jmp groundstatenewmem
nop
nop
groundstatereturnhere:
registersymbol(groundstatealloc)

//aobscanmodule(CurrentStyleAlloc,DevilMayCry5.exe,89 87 88 18 00 00)
define(CurrentStyleAlloc,"DevilMayCry5.exe"+B416C8)
alloc(newmem4,$1000,CurrentStyleAlloc)
label(code4)
label(return4)

newmem4:

code4:
  mov [rdi+00001888],eax
  mov [styleid],eax
  jmp return4

CurrentStyleAlloc:
  jmp newmem4
  nop
return4:
registersymbol(CurrentStyleAlloc)

//aobscanmodule(INJECT,DevilMayCry5.exe,23 C2 3B C2 0F 94 C0 84 C0 74 2F)
define(inputalloc,"DevilMayCry5.exe"+7EFE1E)
alloc(inputnewmem,2048,inputalloc)
label(inputreturnhere)
label(inputoriginalcode)
label(inputexit)

inputnewmem:

inputoriginalcode:
mov eax,[rax+3C]
mov [inputpressed], eax
mov rcx,rbx

inputexit:
jmp inputreturnhere

inputalloc:
jmp inputnewmem
nop

inputreturnhere:
registersymbol(inputalloc)

//aobscanmodule(devilbreakeridstore,DevilMayCry5.exe,89 87 D4 17 00 00) // should be unique
define(devilbreakeridstore,DevilMayCry5.exe+FAF307)
alloc(newmem6,$100,devilbreakeridstore)
label(code6)
label(return6)

newmem6:
  mov [dbid],eax
code6:
  mov [rdi+000017D4],eax
  jmp return6

devilbreakeridstore:
  jmp newmem6
  nop
return6:
registersymbol(devilbreakeridstore)

//aobscanmodule(lockonalloc,DevilMayCry5.exe,88 87 D0 0E 00 00) // should be unique
define(lockonalloc,DevilMayCry5.exe+7DC78C)
alloc(newmem10,$1000,lockonalloc)
label(code10)
label(return10)

newmem10:
  mov [lockonmem],al

code10:
  mov [rdi+00000ED0],al
  jmp return10

lockonalloc:
  jmp newmem10
  nop
return10:
registersymbol(lockonalloc)

[DISABLE]
{$lua}
function disableChilds(memRecord)
   childCount = memRecord.Count
   if memRecord.active then memRecord.active=false end
   for i=0, childCount-1 do
      disableChilds(memRecord.Child[i])
   end
end
disableChilds(getAddressList().getMemoryRecordByDescription("Activate Table"))

{$asm}
dealloc(idallocs)
unregistersymbol(idallocs)
unregistersymbol(weaponid)
unregistersymbol(moveid)
unregistersymbol(styleid)
unregistersymbol(gunid)
unregistersymbol(inputpressed)
unregistersymbol(dbid)
unregistersymbol(turbospeed)
unregistersymbol(lockonmem)
unregistersymbol(groundedmem)

CurrentWeaponAlloc:
  db 44 89 BF B0 18 00 00
unregistersymbol(CurrentWeaponAlloc)
dealloc(newmem1)

CurrentGunAlloc:
  db 44 89 B7 D4 18 00 00
unregistersymbol(CurrentGunAlloc)
dealloc(newmem2)

MoveIdDeep: //+03
  db 48 8B 7C 24 48
unregistersymbol(MoveIdDeep)
dealloc(newmem3)

CurrentStyleAlloc:
  db 89 87 88 18 00 00
unregistersymbol(CurrentStyleAlloc)
dealloc(newmem4)

inputalloc:
mov eax,[rax+3C]
mov rcx,rbx
//Alt: db 8B 40 3C 48 8B CB
unregistersymbol(inputalloc)
dealloc(inputnewmem)

devilbreakeridstore:
  db 89 87 D4 17 00 00
unregistersymbol(devilbreakeridstore)
dealloc(newmem6)

groundstatealloc:
mov rcx,[rax+000003B0]
//Alt: db 48 8B 88 B0 03 00 00
unregistersymbol(groundstatealloc)
dealloc(groundstatenewmem)

lockonalloc:
  db 88 87 D0 0E 00 00
unregistersymbol(lockonalloc)
dealloc(newmem10)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>18293</ID>
          <Description>"Main Table"</Description>
          <Options moDeactivateChildrenAsWell="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
[DISABLE]
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>18294</ID>
              <Description>"Common Changes"</Description>
              <Options moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
[DISABLE]
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>12603</ID>
                  <Description>"Deep Turbo"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>//cheburrat0r
//Mstislav Capusta
//socks
[ENABLE]
//aobscanmodule(gamespeedmult,DevilMayCry5.exe,89 46 68 44 89 6E 6C)
define(gamespeedmult,DevilMayCry5.exe+1722540)
alloc(newmem,$100,gamespeedmult)
alloc(state,8)
alloc(timevars,8)
registersymbol(state)
registersymbol(defscale)
registersymbol(gamespeedmult)
label(defscale)
label(returnhere)
label(originalcode)
label(exit)
timevars:
defscale:
db 00 00 80 3F

newmem:

originalcode:
mov [rsi+68], eax
mov [state], rax
mov [rsi+6C],r13d

exit:
jmp returnhere

gamespeedmult:
jmp newmem
nop
nop
returnhere:

//aobscanmodule(gamespeedmult2,DevilMayCry5.exe,F3 0F 10 80 80 03 00 00 48)
define(gamespeedmult2,DevilMayCry5.exe+FEEF1E)
alloc(newmem2,$1000,gamespeedmult2)
registersymbol(gamespeedmult2)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2:
xor byte ptr [state], 0
jnz originalcode2
mov [turbospeed],(float)1.2
push ebx
mov ebx, [turbospeed]
mov [rax+00000380], ebx
movss xmm0,[rax+00000380]
pop ebx
jmp returnhere2

originalcode2:
push ebx
mov ebx, [defscale]
mov [rax+00000380], ebx
movss xmm0,[rax+00000380]
pop ebx

exit2:
jmp returnhere2

gamespeedmult2:
jmp newmem2
nop
nop
nop
returnhere2:

[DISABLE]
gamespeedmult:
 db 89 46 68 44 89 6E 6C
gamespeedmult2:
 db F3 0F 10 80 80 03 00 00
dealloc(newmem)
dealloc(newmem2)
dealloc(state)
dealloc(timevars)
unregistersymbol(state)
unregistersymbol(defscale)
unregistersymbol(gamespeedmult)
unregistersymbol(gamespeedmult2)
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>18441</ID>
                      <Description>"check/uncheck to toggle deep turbo off after toggling the above option off"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>//cheburrat0r
//Mstislav Capusta
//socks
[ENABLE]
//aobscanmodule(gamespeedmult,DevilMayCry5.exe,89 46 68 44 89 6E 6C)
define(gamespeedmult,DevilMayCry5.exe+1722540)
alloc(newmem,$100,gamespeedmult)
alloc(state,8)
alloc(timevars,8)
registersymbol(state)
registersymbol(defscale)
registersymbol(gamespeedmult)
label(defscale)
label(returnhere)
label(originalcode)
label(exit)
timevars:
defscale:
db 00 00 80 3F

newmem:

originalcode:
mov [rsi+68], eax
mov [state], rax
mov [rsi+6C],r13d

exit:
jmp returnhere

gamespeedmult:
jmp newmem
nop
nop
returnhere:

//aobscanmodule(gamespeedmult2,DevilMayCry5.exe,F3 0F 10 80 80 03 00 00 48)
define(gamespeedmult2,DevilMayCry5.exe+FEEF1E)
alloc(newmem2,$1000,gamespeedmult2)
registersymbol(gamespeedmult2)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2:
xor byte ptr [state], 0
jnz originalcode2
mov [turbospeed],(float)1
push ebx
mov ebx, [turbospeed]
mov [rax+00000380], ebx
movss xmm0,[rax+00000380]
pop ebx
jmp returnhere2

originalcode2:
push ebx
mov ebx, [defscale]
mov [rax+00000380], ebx
movss xmm0,[rax+00000380]
pop ebx

exit2:
jmp returnhere2

gamespeedmult2:
jmp newmem2
nop
nop
nop
returnhere2:

[DISABLE]
gamespeedmult:
 db 89 46 68 44 89 6E 6C
gamespeedmult2:
 db F3 0F 10 80 80 03 00 00
dealloc(newmem)
dealloc(newmem2)
dealloc(state)
dealloc(timevars)
unregistersymbol(state)
unregistersymbol(defscale)
unregistersymbol(gamespeedmult)
unregistersymbol(gamespeedmult2)
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>12441</ID>
                      <Description>"CE Speedhack (backup) (speeds up cutscenes too)"</Description>
                      <Options moHideChildren="1"/>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
[ENABLE]
speedhack_setSpeed(1.2)
[DISABLE]
speedhack_setSpeed(1)
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>18295</ID>
                  <Description>"Buffered Reversals"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : DevilMayCry5.exe
  Version:
  Date   : 2019-08-15
  Author : Nekupaska/socks/SSSiyan
}
[ENABLE]
//aobscanmodule(bufferedreversalnocav,DevilMayCry5.exe,48 89 87 38 17 00 00)
define(bufferedreversalnocav,DevilMayCry5.exe+7DCF9F)
alloc(newmem,$100,bufferedreversalnocav)
label(reversals)
label(code)
label(return)

newmem:

reversals:
  add [rdi+00001738],rax
  jmp return

code:
  mov [rdi+00001738],rax
  jmp return

bufferedreversalnocav:
  jmp newmem
  nop
  nop
return:
registersymbol(bufferedreversalnocav)

[DISABLE]
bufferedreversalnocav:
  db 48 89 87 38 17 00 00
unregistersymbol(bufferedreversalnocav)
dealloc(newmem)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>18296</ID>
                  <Description>"No Screen Shake"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : DevilMayCry5.exe
  Version: 
  Date   : 2020-02-08
  Author : sssiy
}

[ENABLE]
//aobscanmodule(NoScreenShake,DevilMayCry5.exe,5E C3 CC CC CC CC CC CC CC CC 48 89 5C 24 18 56) // should be unique
define(NoScreenShake,"DevilMayCry5.exe"+1F583D0)
alloc(newmem,$1000,NoScreenShake)
label(code)
label(return)

newmem:

code:
  ret
  //mov [rsp+18],rbx
  jmp return

NoScreenShake: //+0A
  jmp newmem
return:
registersymbol(NoScreenShake)

[DISABLE]
NoScreenShake: //+0A
  db 48 89 5C 24 18
unregistersymbol(NoScreenShake)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "DevilMayCry5.exe"+1F583D0

"DevilMayCry5.exe"+1F583C6: 5E                             -  pop rsi
"DevilMayCry5.exe"+1F583C7: C3                             -  ret 
"DevilMayCry5.exe"+1F583C8: CC                             -  int 3 
"DevilMayCry5.exe"+1F583C9: CC                             -  int 3 
"DevilMayCry5.exe"+1F583CA: CC                             -  int 3 
"DevilMayCry5.exe"+1F583CB: CC                             -  int 3 
"DevilMayCry5.exe"+1F583CC: CC                             -  int 3 
"DevilMayCry5.exe"+1F583CD: CC                             -  int 3 
"DevilMayCry5.exe"+1F583CE: CC                             -  int 3 
"DevilMayCry5.exe"+1F583CF: CC                             -  int 3 
// ---------- INJECTING HERE ----------
"DevilMayCry5.exe"+1F583D0: 48 89 5C 24 18                 -  mov [rsp+18],rbx
// ---------- DONE INJECTING  ----------
"DevilMayCry5.exe"+1F583D5: 56                             -  push rsi
"DevilMayCry5.exe"+1F583D6: 57                             -  push rdi
"DevilMayCry5.exe"+1F583D7: 41 57                          -  push r15
"DevilMayCry5.exe"+1F583D9: 48 83 EC 60                    -  sub rsp,60
"DevilMayCry5.exe"+1F583DD: 48 8B 84 24 A8 00 00 00        -  mov rax,[rsp+000000A8]
"DevilMayCry5.exe"+1F583E5: 49 8B D8                       -  mov rbx,r8
"DevilMayCry5.exe"+1F583E8: 0F 29 74 24 50                 -  movaps [rsp+50],xmm6
"DevilMayCry5.exe"+1F583ED: 48 8B F2                       -  mov rsi,rdx
"DevilMayCry5.exe"+1F583F0: 0F 29 7C 24 40                 -  movaps [rsp+40],xmm7
"DevilMayCry5.exe"+1F583F5: 45 33 C0                       -  xor r8d,r8d
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>18297</ID>
                  <Description>"No JC Cooldown"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : DevilMayCry5.exe
  Version:
  Date   : 2019-09-08
  Author : Nekupaska/SSSiyan
}

[ENABLE]
//aobscanmodule(JCTimer,DevilMayCry5.exe,89 87 34 13 00 00 48 8B 43 50 48 39 70 18 0F 85 F6)
define(JCTimer,DevilMayCry5.exe+7EC5D5)
alloc(newmem,$100,JCTimer)
label(code)
label(return)

newmem:

code:
  //mov [rdi+00001334],eax
  mov [rdi+00001334],(float)0
  jmp return

JCTimer:
  jmp newmem
  nop
return:
registersymbol(JCTimer)

[DISABLE]
JCTimer:
  db 89 87 34 13 00 00
unregistersymbol(JCTimer)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "DevilMayCry5.exe"+C4155F5

"DevilMayCry5.exe"+C4155CD: FF D0                 -  call rax
"DevilMayCry5.exe"+C4155CF: 48 8B 4B 50           -  mov rcx,[rbx+50]
"DevilMayCry5.exe"+C4155D3: 48 39 71 18           -  cmp [rcx+18],rsi
"DevilMayCry5.exe"+C4155D7: 48 0F 45 C6           -  cmovne rax,rsi
"DevilMayCry5.exe"+C4155DB: 48 8B 4B 50           -  mov rcx,[rbx+50]
"DevilMayCry5.exe"+C4155DF: 48 39 71 18           -  cmp [rcx+18],rsi
"DevilMayCry5.exe"+C4155E3: 0F 85 16 01 00 00     -  jne DevilMayCry5.exe+C4156FF
"DevilMayCry5.exe"+C4155E9: 48 85 C0              -  test rax,rax
"DevilMayCry5.exe"+C4155EC: 0F 84 82 00 00 00     -  je DevilMayCry5.exe+C415674
"DevilMayCry5.exe"+C4155F2: 8B 40 28              -  mov eax,[rax+28]
// ---------- INJECTING HERE ----------
"DevilMayCry5.exe"+C4155F5: 89 87 34 13 00 00     -  mov [rdi+00001334],eax
// ---------- DONE INJECTING  ----------
"DevilMayCry5.exe"+C4155FB: 48 8B 43 50           -  mov rax,[rbx+50]
"DevilMayCry5.exe"+C4155FF: 48 39 70 18           -  cmp [rax+18],rsi
"DevilMayCry5.exe"+C415603: 0F 85 F6 00 00 00     -  jne DevilMayCry5.exe+C4156FF
"DevilMayCry5.exe"+C415609: 48 8B 07              -  mov rax,[rdi]
"DevilMayCry5.exe"+C41560C: 48 89 FA              -  mov rdx,rdi
"DevilMayCry5.exe"+C41560F: 48 8B 48 F0           -  mov rcx,[rax-10]
"DevilMayCry5.exe"+C415613: 48 8B 81 E8 07 00 00  -  mov rax,[rcx+000007E8]
"DevilMayCry5.exe"+C41561A: 48 89 D9              -  mov rcx,rbx
"DevilMayCry5.exe"+C41561D: FF D0                 -  call rax
"DevilMayCry5.exe"+C41561F: 48 8B 4B 50           -  mov rcx,[rbx+50]
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>136</ID>
                  <Description>"Enemy Step Inertia"</Description>
                  <Options moHideChildren="1"/>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>//ProfessorFrog
//cheburrat0r
//socks
[ENABLE]
//aobscanmodule(inertiaES,DevilMayCry5.exe,F3 0F 11 83 40 11 00 00 F3 0F 11 8B 44 11 00 00 F3 0F 11 93 48 11 00 00 48 8B 47 50 48 83 78 18 00 0F 85 62 03 00 00)
define(inertiaES,DevilMayCry5.exe+7C8CF1)
alloc(newmem,$1000,inertiaES)
alloc(float1, 8)
label(jump)
label(return)
label(exit)
label(scaleXZ)
label(scaleY)
float1:
 scaleY:
 dd (float)0.5
 scaleXZ:
 dd (float)0.5
registersymbol(scaleXZ)
registersymbol(scaleY)
registersymbol(inertiaES)

newmem:
   cmp [rbx+00001150], 0
   je jump
   mulss xmm0, dword ptr [scaleXZ]
   movss [rbx+00001140],xmm0
  jump:
   mulss xmm1, dword ptr [scaleY]
   movss [rbx+00001144],xmm1
   cmp [rbx+00001158], 0
   je return
   mulss xmm2, dword ptr [scaleXZ]
   movss [rbx+00001148],xmm2

exit:
  jmp return

inertiaES:
jmp newmem
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop

return:

[DISABLE]

inertiaES:
movss [rbx+00001140],xmm0
movss [rbx+00001144],xmm1
movss [rbx+00001148],xmm2

unregistersymbol(inertiaES)
dealloc(newmem)
dealloc(float1)
unregistersymbol(scaleXZ)
unregistersymbol(scaleY)
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>115</ID>
                      <Description>"scale for xz plane"</Description>
                      <VariableType>Float</VariableType>
                      <Address>scaleXZ</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>117</ID>
                      <Description>"scale for y axis"</Description>
                      <VariableType>Float</VariableType>
                      <Address>scaleY</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>18298</ID>
                  <Description>"Siyan's Camera Fix 1.0"</Description>
                  <Options moDeactivateChildrenAsWell="1"/>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : DevilMayCry5.exe
  Version:
  Date   : 2019-06-09
  Author : SSSiyan
}

[ENABLE]
//aobscanmodule(camerafix3,DevilMayCry5.exe,48 83 78 18 00 0F 85 18 01 00 00 C6 82)
define(camerafix3,DevilMayCry5.exe+1FF7BDB)
registersymbol(camerafix3)
camerafix3:
  nop
  nop
  nop
  nop
  nop

[DISABLE]
camerafix3:
  db 48 83 78 18 00
unregistersymbol(camerafix3)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>18299</ID>
                  <Description>"Moving Target Switch"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : DevilMayCry5.exe
  Version: 
  Date   : 2019-06-14
  Author : SSSiyan
}

[ENABLE]
{$lua}
--getAddressList().getMemoryRecordByDescription("Moving Target Switch").active=false
getAddressList().getMemoryRecordByDescription("No Target Switch").active=false
{$asm}
//aobscanmodule(MovingTargetSwitch,DevilMayCry5.exe,0F 83 B0 01 00 00 48 83)
define(MovingTargetSwitch,DevilMayCry5.exe+7DDC6F)
registersymbol(MovingTargetSwitch)
MovingTargetSwitch:
  nop
  nop
  nop
  nop
  nop
  nop

[DISABLE]
MovingTargetSwitch:
jae DevilMayCry5.exe+7DDE25
unregistersymbol(MovingTargetSwitch)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>18300</ID>
                  <Description>"Freeze BP Timer"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>//SSSiyan
//socks
[ENABLE]
//aobscanmodule(freezetimer,DevilMayCry5.exe,F2 0F 5C C8 66 0F 5A C9 F3 0F 11 4B 10)
define(freezetimer,DevilMayCry5.exe+6F08FD)
freezetimer:
  db 90 90 90 90
registersymbol(freezetimer)

[DISABLE]
freezetimer:
  db F2 0F 5C C8
unregistersymbol(freezetimer)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>12407</ID>
                  <Description>"Allow Keyboard Camera Movement While Locked On"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : DevilMayCry5.exe
  Version: 
  Date   : 2019-09-22
  Author : SSSiyan
}

[ENABLE]
//aobscanmodule(keyboardlockoncam,DevilMayCry5.exe,74 17 89 8B 98 02 00 00) // should be unique
define(keyboardlockoncam,DevilMayCry5.exe+1FBDEA3)

keyboardlockoncam:
  db EB 17
return:
registersymbol(keyboardlockoncam)

[DISABLE]
keyboardlockoncam:
  db 74 17
unregistersymbol(keyboardlockoncam)

{
// ORIGINAL CODE - INJECTION POINT: "DevilMayCry5.exe"+16D91203

"DevilMayCry5.exe"+16D911DF: 48 89 D3                 -  mov rbx,rdx
"DevilMayCry5.exe"+16D911E2: 0F 28 F2                 -  movaps xmm6,xmm2
"DevilMayCry5.exe"+16D911E5: 48 89 CF                 -  mov rdi,rcx
"DevilMayCry5.exe"+16D911E8: E8 F3 D9 21 EB           -  call DevilMayCry5.exe+1FAEBE0
"DevilMayCry5.exe"+16D911ED: 0F B6 D0                 -  movzx edx,al
"DevilMayCry5.exe"+16D911F0: 48 8B 47 50              -  mov rax,[rdi+50]
"DevilMayCry5.exe"+16D911F4: 48 8B 48 18              -  mov rcx,[rax+18]
"DevilMayCry5.exe"+16D911F8: 48 85 C9                 -  test rcx,rcx
"DevilMayCry5.exe"+16D911FB: 0F 85 EF 01 00 00        -  jne DevilMayCry5.exe+16D913F0
"DevilMayCry5.exe"+16D91201: 85 D2                    -  test edx,edx
// ---------- INJECTING HERE ----------
"DevilMayCry5.exe"+16D91203: 74 17                    -  je DevilMayCry5.exe+16D9121C
"DevilMayCry5.exe"+16D91205: 89 8B 98 02 00 00        -  mov [rbx+00000298],ecx
// ---------- DONE INJECTING  ----------
"DevilMayCry5.exe"+16D9120B: 48 8B 47 50              -  mov rax,[rdi+50]
"DevilMayCry5.exe"+16D9120F: 48 8B 48 18              -  mov rcx,[rax+18]
"DevilMayCry5.exe"+16D91213: 48 85 C9                 -  test rcx,rcx
"DevilMayCry5.exe"+16D91216: 0F 85 D4 01 00 00        -  jne DevilMayCry5.exe+16D913F0
"DevilMayCry5.exe"+16D9121C: 48 85 C9                 -  test rcx,rcx
"DevilMayCry5.exe"+16D9121F: 0F 85 CB 01 00 00        -  jne DevilMayCry5.exe+16D913F0
"DevilMayCry5.exe"+16D91225: F3 0F 10 83 98 02 00 00  -  movss xmm0,[rbx+00000298]
"DevilMayCry5.exe"+16D9122D: F3 0F 10 8B B0 00 00 00  -  movss xmm1,[rbx+000000B0]
"DevilMayCry5.exe"+16D91235: F2 0F 10 15 43 23 70 ED  -  movsd xmm2,[DevilMayCry5.exe+4493580]
"DevilMayCry5.exe"+16D9123D: 0F 5A C0                 -  cvtps2pd xmm0,xmm0
}
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>18304</ID>
                      <Description>"Force Walking On Keyboard"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{ Game   : DevilMayCry5.exe
  Version: 
  Date   : 2019-09-22
  Author : SSSiyan
}

[ENABLE]
//aobscanmodule(keyboardwalk,DevilMayCry5.exe,F3 41 0F 11 46 30 48 8B 46) // should be unique
define(keyboardwalk,DevilMayCry5.exe+84C51A)
alloc(newmem2,$1000,keyboardwalk)
label(code2)
label(return2)
alloc(halffloat,4)
halffloat:
dd (float)2

newmem2:
  cmp [lockonmem],1
  je code2
  divss xmm0,[halffloat]

code2:
  movss [r14+30],xmm0
  jmp return2

keyboardwalk:
  jmp newmem2
  nop
return2:
registersymbol(keyboardwalk)

[DISABLE]
keyboardwalk:
  db F3 41 0F 11 46 30
unregistersymbol(keyboardwalk)
dealloc(newmem2)

dealloc(halffloat)

{
// ORIGINAL CODE - INJECTION POINT: "DevilMayCry5.exe"+C3E381C

"DevilMayCry5.exe"+C3E37FB: EB 0B                             -  jmp DevilMayCry5.exe+C3E3808
"DevilMayCry5.exe"+C3E37FD: 8B 41 3C                          -  mov eax,[rcx+3C]
"DevilMayCry5.exe"+C3E3800: C1 E8 04                          -  shr eax,04
"DevilMayCry5.exe"+C3E3803: 24 01                             -  and al,01
"DevilMayCry5.exe"+C3E3805: 0F 95 D1                          -  setne cl
"DevilMayCry5.exe"+C3E3808: 48 8B 43 50                       -  mov rax,[rbx+50]
"DevilMayCry5.exe"+C3E380C: 48 83 78 18 00                    -  cmp qword ptr [rax+18],00
"DevilMayCry5.exe"+C3E3811: 0F 85 94 00 00 00                 -  jne DevilMayCry5.exe+C3E38AB
"DevilMayCry5.exe"+C3E3817: 84 C9                             -  test cl,cl
"DevilMayCry5.exe"+C3E3819: 0F 95 D0                          -  setne al
// ---------- INJECTING HERE ----------
"DevilMayCry5.exe"+C3E381C: 88 87 D0 0E 00 00                 -  mov [rdi+00000ED0],al
// ---------- DONE INJECTING  ----------
"DevilMayCry5.exe"+C3E3822: 48 8B 43 50                       -  mov rax,[rbx+50]
"DevilMayCry5.exe"+C3E3826: 48 83 78 18 00                    -  cmp qword ptr [rax+18],00
"DevilMayCry5.exe"+C3E382B: 75 7E                             -  jne DevilMayCry5.exe+C3E38AB
"DevilMayCry5.exe"+C3E382D: 48 8B 87 F0 0E 00 00              -  mov rax,[rdi+00000EF0]
"DevilMayCry5.exe"+C3E3834: 48 85 C0                          -  test rax,rax
"DevilMayCry5.exe"+C3E3837: 75 12                             -  jne DevilMayCry5.exe+C3E384B
"DevilMayCry5.exe"+C3E3839: 45 31 C0                          -  xor r8d,r8d
"DevilMayCry5.exe"+C3E383C: 8D 50 38                          -  lea edx,[rax+38]
"DevilMayCry5.exe"+C3E383F: 48 89 D9                          -  mov rcx,rbx
"DevilMayCry5.exe"+C3E3842: E8 49 37 00 F6                    -  call DevilMayCry5.exe+23E6F90
}
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>18314</ID>
              <Description>"Nero Specific"</Description>
              <Options moDeactivateChildrenAsWell="1"/>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
[DISABLE]
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>18315</ID>
                  <Description>"Infinite Devil Breakers"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : DevilMayCry5.exe
  Version: 
  Date   : 2019-09-15
  Author : Mstislav Capusta
}
[ENABLE]
{$lua}
--getAddressList().getMemoryRecordByDescription("Infinite Devil Breakers").active=false
getAddressList().getMemoryRecordByDescription("Infinite Devil Breakers with no break animation").active=false
getAddressList().getMemoryRecordByDescription("Devil Breaker Switcher (V0.81 - Gamepad/Keyboard)").active=false
{$asm}
//aobscanmodule(infbreakers1,DevilMayCry5.exe,FF 41 8B 44 12 04)
define(infbreakers1,DevilMayCry5.exe+F98552)
alloc(variables,2048,infbreakers1) //+1
label(returnhere)
variables:
breaker01:
  dd 0
breaker02:
  dd 0
breaker03:
  dd 0
breaker04:
  dd 0
breaker05:
  dd 0
breaker06:
  dd 0
breaker07:
  dd 0
breaker08:
  dd 0

newmem:
  cmp r9d, 01
  je lab04
  cmp r9d,[breaker06] { (6) }
  je lab01
  jmp lab02

lab04:
  mov eax,[r10+rdx]
  mov [breaker05],eax { (5) }
  mov eax,[rdx+1C]
  dec eax
  mov [breaker06],eax { (6) }
  jmp lab02

lab01:
  mov eax,[r10+rdx+04]
  push rax
  mov eax,[breaker05] { (5) }
  mov [r10+rdx+04],eax
  pop rax
  jmp lab03

lab02:
  mov eax,[r10+rdx+04]

lab03:
  jmp returnhere

registersymbol(infbreakers1)
registersymbol(infbreakers2)
registersymbol(variables)

//aobscanmodule(infbreakers2,DevilMayCry5.exe,8B 86 CC 17 00 00 85)
define(infbreakers2,DevilMayCry5.exe+FAA2FB)
label(returnhere2)

newmem2:
  mov rax,[rsi+00001790]
  mov eax,[rax+1C]
  mov [rsi+000017CC],eax
  jmp returnhere2


infbreakers1+01:
  jmp newmem
returnhere:

infbreakers2:
  jmp newmem2
  nop
returnhere2:

[DISABLE]
infbreakers1: //+01
  db 41 8B 44 12 04
unregistersymbol(infbreakers1)
dealloc(variables)
unregistersymbol(variables)

infbreakers2:
  db 8B 86 CC 17 00 00
unregistersymbol(infbreakers2)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>18513</ID>
                  <Description>"Infinite Devil Breakers with no break animation"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : DevilMayCry5.exe
  Version: 
  Date   : 2019-09-15
  Author : Mstislav Capusta
}
[ENABLE]
{$lua}
getAddressList().getMemoryRecordByDescription("Infinite Devil Breakers").active=false
--getAddressList().getMemoryRecordByDescription("Infinite Devil Breakers with no break animation").active=false
getAddressList().getMemoryRecordByDescription("Devil Breaker Switcher (V0.81 - Gamepad/Keyboard)").active=false
{$asm}
DevilMayCry5.exe+FB2615:
nop
nop
nop
nop
nop

//aobscanmodule(infbreakers1,DevilMayCry5.exe,FF 41 8B 44 12 04)
define(infbreakers1,DevilMayCry5.exe+F98552)
alloc(variables,2048,infbreakers1) //+1
label(returnhere)
variables:
breaker01:
  dd 0
breaker02:
  dd 0
breaker03:
  dd 0
breaker04:
  dd 0
breaker05:
  dd 0
breaker06:
  dd 0
breaker07:
  dd 0
breaker08:
  dd 0

newmem:
  cmp r9d, 01
  je lab04
  cmp r9d,[breaker06] { (6) }
  je lab01
  jmp lab02

lab04:
  mov eax,[r10+rdx]
  mov [breaker05],eax { (5) }
  mov eax,[rdx+1C]
  dec eax
  mov [breaker06],eax { (6) }
  jmp lab02

lab01:
  mov eax,[r10+rdx+04]
  push rax
  mov eax,[breaker05] { (5) }
  mov [r10+rdx+04],eax
  pop rax
  jmp lab03

lab02:
  mov eax,[r10+rdx+04]

lab03:
  jmp returnhere

registersymbol(infbreakers1)
registersymbol(infbreakers2)
registersymbol(variables)

//aobscanmodule(infbreakers2,DevilMayCry5.exe,8B 86 CC 17 00 00 85)
define(infbreakers2,DevilMayCry5.exe+FAA2FB)
label(returnhere2)

newmem2:
  mov rax,[rsi+00001790]
  mov eax,[rax+1C]
  mov [rsi+000017CC],eax
  jmp returnhere2


infbreakers1+01:
  jmp newmem
returnhere:

infbreakers2:
  jmp newmem2
  nop
returnhere2:

[DISABLE]
DevilMayCry5.exe+FB2615:
cmp qword ptr [rax+18],00

infbreakers1: //+01
  db 41 8B 44 12 04
unregistersymbol(infbreakers1)
dealloc(variables)
unregistersymbol(variables)

infbreakers2:
  db 8B 86 CC 17 00 00
unregistersymbol(infbreakers2)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>11047</ID>
                  <Description>"Devil Breaker Switcher (V0.81 - Gamepad/Keyboard)"</Description>
                  <Options moHideChildren="1"/>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>//nino
//SSSiyan
{$lua}
getAddressList().getMemoryRecordByDescription("Infinite Devil Breakers").active=false
getAddressList().getMemoryRecordByDescription("Infinite Devil Breakers with no break animation").active=false
--getAddressList().getMemoryRecordByDescription("Devil Breaker Switcher (V0.81 - Gamepad/Keyboard)").active=false
--[[
    ----------------------DB SWITCHER CONFIGURATION PART 1/3 (LINE 49 TO LINE 60)----------------------
                             CONFIGURE YOUR DEVIL BREAKER SWITCHER SET
    devilBreakerX = "Devil Breaker Name"

    Devil Breaker Names:
    Overture
    Ragtime
    Helter Skelter
    Gerbera
    Punchline
    Buster Arm
    Rawhide
    Tomboy
    Mega Buster
    Gerbera GP01
    Pasta Breaker
    Sweet Surrender
    Monkey Business

    --GAMEPAD--
    devilBreaker1: UP
    devilBreaker2: DOWN
    devilBreaker3: LEFT
    devilBreaker4: RIGHT
    devilBreaker5: UP+LEFT
    devilBreaker6: UP+RIGHT
    devilBreaker7: DOWN+LEFT
    devilBreaker8: DOWN+RIGHT

    --KEYBOARD--
    devilBreaker1:  KEY 1
    devilBreaker2:  KEY 2
    devilBreaker3:  KEY 3
    devilBreaker4:  KEY 4
    devilBreaker5:  KEY 5
    devilBreaker6:  KEY 6
    devilBreaker7:  KEY 7
    devilBreaker8:  KEY 8
    devilBreaker9:  KEY 9
    devilBreaker10: KEY 10
    devilBreaker11: KEY 11
    devilBreaker12: KEY 12
--]]
--MODIFICATIONS HERE--
devilBreaker1  = "Gerbera GP01"
devilBreaker2  = "Helter Skelter"
devilBreaker3  = "Overture"
devilBreaker4  = "Punchline"
devilBreaker5  = "Rawhide"
devilBreaker6  = "Tomboy"
devilBreaker7  = "Mega Buster"
devilBreaker8  = "Ragtime"
devilBreaker9  = "Gerbera"
devilBreaker10 = "Buster Arm"
devilBreaker11 = "Pasta Breaker"
devilBreaker12 = "Sweet Surrender"
--[[
    ---------------------------------------(!!KEYBOARD USER ONLY!!)--------------------------------------
                           DB SWITCHER CONFIGURATION PART 2/3 (LINE 68 TO LINE 79)
                      CONFIGURE WHAT KEY YOU SHOULD PRESS TO SWAP YOUR DEVIL BREAKER
           (key name/code can be found here: http://www.kbdedit.com/manual/low_level_vk_list.html)
--]]
--MODIFICATIONS HERE--
devilBreaker1Key  = VK_F1
devilBreaker2Key  = VK_F2
devilBreaker3Key  = VK_F3
devilBreaker4Key  = VK_F4
devilBreaker5Key  = VK_F5
devilBreaker6Key  = VK_F6
devilBreaker7Key  = VK_F7
devilBreaker8Key  = VK_F8
devilBreaker9Key  = VK_F9
devilBreaker10Key = VK_F10
devilBreaker11Key = VK_F11
devilBreaker12Key = VK_F12
--[[
    ----------------------DB SWITCHER CONFIGURATION PART 3/3 (LINE 98)----------------------
    CONFIGURE WHAT MOVE YOU SHOULD HOLD TO ENABLE BREAK AWAY ANIMATION ("Devil Breaker Move" by default)

    "Break Away (1)"
    "Break Away (2)"
    "Break Away (3)"
    "Break Away (4)"
    "Melee"
    "Jump"
    "Devil Trigger"
    "Devil Breaker Move"
    "Shot"
    "Exceed"
    "Lock"
    "Devil Bringer"
]]--
--MODIFICATIONS HERE--
enableBreakAwayAnimation = "Devil Breaker Move"

--[[
    ---------------------------------------DB SWITCHER INIT CODE--------------------------------------------
--]]
--VARS ADDRESS + VALUES (CODE INJECTION)--
addressActivateBreakAwayMove                = "DevilMayCry5.exe+0xFB249C" --tu4 DevilMayCry5.exe+0xE949EAC
--[[
// ORIGINAL CODE - INJECTION POINT: "DevilMayCry5.exe"+E949EAC

"DevilMayCry5.exe"+E949E8A: 48 89 D9                          -  mov rcx,rbx
"DevilMayCry5.exe"+E949E8D: 41 8D 50 38                       -  lea edx,[r8+38]
"DevilMayCry5.exe"+E949E91: E8 FA D0 A9 F3                    -  call DevilMayCry5.exe+23E6F90
"DevilMayCry5.exe"+E949E96: 30 C0                             -  xor al,al
"DevilMayCry5.exe"+E949E98: 48 8B 9C 24 88 00 00 00           -  mov rbx,[rsp+00000088]
"DevilMayCry5.exe"+E949EA0: 48 83 C4 60                       -  add rsp,60
"DevilMayCry5.exe"+E949EA4: 5F                                -  pop rdi
"DevilMayCry5.exe"+E949EA5: C3                                -  ret
"DevilMayCry5.exe"+E949EA6: 0F B6 41 4A                       -  movzx eax,byte ptr [rcx+4A]
"DevilMayCry5.exe"+E949EAA: 24 01                             -  and al,01
// ---------- INJECTING HERE ----------
"DevilMayCry5.exe"+E949EAC: 74 E8                             -  je DevilMayCry5.exe+E949E96
"DevilMayCry5.exe"+E949EAE: 48 89 D9                          -  mov rcx,rbx
// ---------- DONE INJECTING  ----------
"DevilMayCry5.exe"+E949EB1: E8 EA E4 CE F1                    -  call DevilMayCry5.exe+6383A0
"DevilMayCry5.exe"+E949EB6: 0F B6 C8                          -  movzx ecx,al
"DevilMayCry5.exe"+E949EB9: 48 8B 43 50                       -  mov rax,[rbx+50]
"DevilMayCry5.exe"+E949EBD: 48 83 78 18 00                    -  cmp qword ptr [rax+18],00
"DevilMayCry5.exe"+E949EC2: 75 D2                             -  jne DevilMayCry5.exe+E949E96
"DevilMayCry5.exe"+E949EC4: 85 C9                             -  test ecx,ecx
"DevilMayCry5.exe"+E949EC6: 75 CE                             -  jne DevilMayCry5.exe+E949E96
"DevilMayCry5.exe"+E949EC8: 48 8B 87 E0 17 00 00              -  mov rax,[rdi+000017E0]
"DevilMayCry5.exe"+E949ECF: 48 85 C0                          -  test rax,rax
"DevilMayCry5.exe"+E949ED2: 74 B3                             -  je DevilMayCry5.exe+E949E87
--]]
addressActivateBreakAwayMoveDisableValue    = 0x74 --je
addressActivateBreakAwayMoveEnableValue     = 0x75 --jne
addressDisableBreakAwayMove                 = "DevilMayCry5.exe+0xFB25F3+0x4" --tu4 DevilMayCry5.exe+0xE94A003+0x4
--[[
// ORIGINAL CODE - INJECTION POINT: "DevilMayCry5.exe"+E94A003

"DevilMayCry5.exe"+E949FD7: 30 C0                          -  xor al,al
"DevilMayCry5.exe"+E949FD9: E9 D7 01 00 00                 -  jmp DevilMayCry5.exe+E94A1B5
"DevilMayCry5.exe"+E949FDE: 83 78 18 00                    -  cmp dword ptr [rax+18],00
"DevilMayCry5.exe"+E949FE2: 48 89 6C 24 78                 -  mov [rsp+78],rbp
"DevilMayCry5.exe"+E949FE7: 0F 8F D2 02 00 00              -  jg DevilMayCry5.exe+E94A2BF
"DevilMayCry5.exe"+E949FED: 48 8B 97 F8 19 00 00           -  mov rdx,[rdi+000019F8]
"DevilMayCry5.exe"+E949FF4: 45 31 C0                       -  xor r8d,r8d
"DevilMayCry5.exe"+E949FF7: E8 A4 C2 21 F2                 -  call DevilMayCry5.exe+B662A0
"DevilMayCry5.exe"+E949FFC: 0F B6 C8                       -  movzx ecx,al
"DevilMayCry5.exe"+E949FFF: 48 8B 43 50                    -  mov rax,[rbx+50]
// ---------- INJECTING HERE ----------
"DevilMayCry5.exe"+E94A003: 48 83 78 18 00                 -  cmp qword ptr [rax+18],00
// ---------- DONE INJECTING  ----------
"DevilMayCry5.exe"+E94A008: 0F 85 A0 01 00 00              -  jne DevilMayCry5.exe+E94A1AE
"DevilMayCry5.exe"+E94A00E: 85 C9                          -  test ecx,ecx
"DevilMayCry5.exe"+E94A010: 0F 85 60 01 00 00              -  jne DevilMayCry5.exe+E94A176
"DevilMayCry5.exe"+E94A016: 48 89 FA                       -  mov rdx,rdi
"DevilMayCry5.exe"+E94A019: 48 89 D9                       -  mov rcx,rbx
"DevilMayCry5.exe"+E94A01C: E8 EF 79 7A F2                 -  call DevilMayCry5.exe+10F1A10
"DevilMayCry5.exe"+E94A021: 48 8B 43 50                    -  mov rax,[rbx+50]
"DevilMayCry5.exe"+E94A025: 48 83 78 18 00                 -  cmp qword ptr [rax+18],00
"DevilMayCry5.exe"+E94A02A: 0F 85 7E 01 00 00              -  jne DevilMayCry5.exe+E94A1AE
"DevilMayCry5.exe"+E94A030: 48 B8 00 00 00 00 01 00 00 00  -  mov rax,0000000100000000
--]]
addressDisableBreakAwayMoveDisableValue     = 0x0  --cmp qword ptr [rax+18],00
addressDisableBreakAwayMoveEnableValue      = 0x1  --cmp qword ptr [rax+18],01
addressRemoveBreakAwayAnimation             = "DevilMayCry5.exe+0xFB2615+0x4" --tu4 "DevilMayCry5.exe+0xE94A025+0x4"
--[[
// ORIGINAL CODE - INJECTION POINT: "DevilMayCry5.exe"+E94A025

"DevilMayCry5.exe"+E949FFC: 0F B6 C8                       -  movzx ecx,al
"DevilMayCry5.exe"+E949FFF: 48 8B 43 50                    -  mov rax,[rbx+50]
"DevilMayCry5.exe"+E94A003: 48 83 78 18 00                 -  cmp qword ptr [rax+18],00
"DevilMayCry5.exe"+E94A008: 0F 85 A0 01 00 00              -  jne DevilMayCry5.exe+E94A1AE
"DevilMayCry5.exe"+E94A00E: 85 C9                          -  test ecx,ecx
"DevilMayCry5.exe"+E94A010: 0F 85 60 01 00 00              -  jne DevilMayCry5.exe+E94A176
"DevilMayCry5.exe"+E94A016: 48 89 FA                       -  mov rdx,rdi
"DevilMayCry5.exe"+E94A019: 48 89 D9                       -  mov rcx,rbx
"DevilMayCry5.exe"+E94A01C: E8 EF 79 7A F2                 -  call DevilMayCry5.exe+10F1A10
"DevilMayCry5.exe"+E94A021: 48 8B 43 50                    -  mov rax,[rbx+50]
// ---------- INJECTING HERE ----------
"DevilMayCry5.exe"+E94A025: 48 83 78 18 00                 -  cmp qword ptr [rax+18],00
// ---------- DONE INJECTING  ----------
"DevilMayCry5.exe"+E94A02A: 0F 85 7E 01 00 00              -  jne DevilMayCry5.exe+E94A1AE
"DevilMayCry5.exe"+E94A030: 48 B8 00 00 00 00 01 00 00 00  -  mov rax,0000000100000000
"DevilMayCry5.exe"+E94A03A: 48 09 87 40 14 00 00           -  or [rdi+00001440],rax
"DevilMayCry5.exe"+E94A041: 48 8B 43 50                    -  mov rax,[rbx+50]
"DevilMayCry5.exe"+E94A045: 48 83 78 18 00                 -  cmp qword ptr [rax+18],00
"DevilMayCry5.exe"+E94A04A: 0F 85 5E 01 00 00              -  jne DevilMayCry5.exe+E94A1AE
"DevilMayCry5.exe"+E94A050: 48 8B B7 78 17 00 00           -  mov rsi,[rdi+00001778]
"DevilMayCry5.exe"+E94A057: 45 31 C0                       -  xor r8d,r8d
"DevilMayCry5.exe"+E94A05A: 48 89 D9                       -  mov rcx,rbx
"DevilMayCry5.exe"+E94A05D: 48 85 F6                       -  test rsi,rsi
--]]
addressRemoveBreakAwayAnimationDisableValue = 0x0  --cmp qword ptr [rax+18],00
addressRemoveBreakAwayAnimationEnableValue  = 0x1  --cmp qword ptr [rax+18],01

--VARS ADDRESS (POINTERS)--
baseAddressDB       = "DevilMayCry5.exe+07A7BBF8"
addressDBCount      = "[["   .. baseAddressDB .. "]+70]+17CC"
addressDBCurrentId  = "[["   .. baseAddressDB .. "]+70]+17D4"
addressDBNextDBBase = "[[["  .. baseAddressDB .. "]+70]+1790]+0"
addressDBNextId     = "[[["  .. baseAddressDB .. "]+70]+1790]+20"
addressInputPress   = "[[DevilMayCry5.exe+07A9B5D8]+60]+98"

--VARS DB SWITCH--
isSwapingDb = false

--VARS INPUT--
neroInputList = {}
table.insert(neroInputList, #neroInputList + 1, {"Break Away (1)", 1})
table.insert(neroInputList, #neroInputList + 1, {"Break Away (2)", 2})
table.insert(neroInputList, #neroInputList + 1, {"Break Away (3)", 4})
table.insert(neroInputList, #neroInputList + 1, {"Break Away (4)", 8})
table.insert(neroInputList, #neroInputList + 1, {"Melee", 16})
table.insert(neroInputList, #neroInputList + 1, {"Jump", 32})
table.insert(neroInputList, #neroInputList + 1, {"Devil Trigger", 64})
table.insert(neroInputList, #neroInputList + 1, {"Devil Breaker Move", 128})
table.insert(neroInputList, #neroInputList + 1, {"Shot", 256})
table.insert(neroInputList, #neroInputList + 1, {"Exceed", 512})
table.insert(neroInputList, #neroInputList + 1, {"Lock", 1024})
table.insert(neroInputList, #neroInputList + 1, {"Devil Bringer", 2048})
neroInputListValue = {}
for key,value in pairs(neroInputList) do
   table.insert(neroInputListValue, #neroInputListValue + 1, value[2])
end
keyboardInputList =
{
   keyboardBreakAwaySwitch1  = { key = devilBreaker1Key,  oldKeyboardPressed = false},
   keyboardBreakAwaySwitch2  = { key = devilBreaker2Key,  oldKeyboardPressed = false},
   keyboardBreakAwaySwitch3  = { key = devilBreaker3Key,  oldKeyboardPressed = false},
   keyboardBreakAwaySwitch4  = { key = devilBreaker4Key,  oldKeyboardPressed = false},
   keyboardBreakAwaySwitch5  = { key = devilBreaker5Key,  oldKeyboardPressed = false},
   keyboardBreakAwaySwitch6  = { key = devilBreaker6Key,  oldKeyboardPressed = false},
   keyboardBreakAwaySwitch7  = { key = devilBreaker7Key,  oldKeyboardPressed = false},
   keyboardBreakAwaySwitch8  = { key = devilBreaker8Key,  oldKeyboardPressed = false},
   keyboardBreakAwaySwitch9  = { key = devilBreaker9Key,  oldKeyboardPressed = false},
   keyboardBreakAwaySwitch10 = { key = devilBreaker10Key, oldKeyboardPressed = false},
   keyboardBreakAwaySwitch11 = { key = devilBreaker11Key, oldKeyboardPressed = false},
   keyboardBreakAwaySwitch12 = { key = devilBreaker12Key, oldKeyboardPressed = false},
}

--FUNCTIONS INIT BREAK AWAY BEHAVIOR SCRIPT--
function ScriptChangeBreakAwayBehavior(address, value)
  writeBytes(address, value)
end

--FUNCTIONS INPUT--
function IntToBin(n) --from pgimeno (http://love2d.org)
  local result = ''
  if n ~= nil then
    while n ~= 0 do
      if n % 2 == 0 then
        result = '0' .. result
      else
        result = '1' .. result
      end
      n = math.floor(n / 2)
    end
  end
  return result
end
function IsItemActive(testItem, listItem, number)
  stringBits = IntToBin(number)
  for i = 0, string.len(stringBits) - 1 do
     if stringBits:sub(string.len(stringBits) - i, string.len(stringBits) - i) == "1" then
        j = -1
        for key,value in pairs(listItem) do
           j = j + 1
           if j == i and value == testItem then
              return true
           end
        end
     end
  end
  return false
end
function InputWasPressed(input)
  return IsItemActive(input, neroInputListValue, inputPressed) == true and IsItemActive(input, neroInputListValue, oldInputPressed) == false
end
function InputIsPressed(input)
  return IsItemActive(input, neroInputListValue, inputPressed) == true
end
function KeyboardWasPressed(key, oldKeyboardPressed)
  return isKeyPressed(key) and oldKeyboardPressed == false
end
function KeyboardIsPressed(key)
  return isKeyPressed(key)
end

--FUNCTIONS DEVIL BREAKER SWAP--
function GetDevilBreakerIdFromName(dbName)
  dbId = 0
  if dbName == "Overture" then
    dbId = 0
  elseif dbName == "Ragtime" then
    dbId = 1
  elseif dbName == "Helter Skelter" then
    dbId = 2
  elseif dbName == "Gerbera" then
    dbId = 3
  elseif dbName == "Punchline" then
    dbId = 4
  elseif dbName == "Buster Arm" then
    dbId = 5
  elseif dbName == "Rawhide" then
    dbId = 6
  elseif dbName == "Tomboy" then
    dbId = 7
  elseif dbName == "Mega Buster" then
    dbId = 8
  elseif dbName == "Gerbera GP01" then
    dbId = 9
  elseif dbName == "Pasta Breaker" then
    dbId = 10
  elseif dbName == "Sweet Surrender" then
    dbId = 11
  elseif dbName == "Monkey Business" then
    dbId = 12
  end
  return dbId
end
function GetMoveInputIdFromName(moveName)
   moveId = 128
   if moveName == "Break Away (1)" then
      moveId = 1
   elseif moveName == "Break Away (2)" then
      moveId = 2
   elseif moveName == "Break Away (3)" then
      moveId = 4
   elseif moveName == "Break Away (4)" then
      moveId = 8
   elseif moveName == "Melee" then
      moveId = 16
   elseif moveName == "Jump" then
      moveId = 32
   elseif moveName == "Devil Trigger" then
      moveId = 64
   elseif moveName == "Devil Breaker Move" then
      moveId = 128
   elseif moveName == "Shot" then
      moveId = 256
   elseif moveName == "Exceed" then
      moveId = 512
   elseif moveName == "Lock" then
      moveId = 1024
   elseif moveName == "Devil Bringer" then
      moveId = 2048
   end
   return moveId
end
function SwapDevilBreaker(dbId)
  if dbId ~= readInteger(addressDBNextId) or readInteger(addressDBNextId) ~= readInteger(addressDBCurrentId) then
    writeInteger(addressDBNextId, dbId)

    ScriptChangeBreakAwayBehavior(addressActivateBreakAwayMove,    addressActivateBreakAwayMoveEnableValue)
    ScriptChangeBreakAwayBehavior(addressDisableBreakAwayMove, addressDisableBreakAwayMoveDisableValue)
    sleep(20)
    ScriptChangeBreakAwayBehavior(addressDisableBreakAwayMove, addressDisableBreakAwayMoveEnableValue)
    ScriptChangeBreakAwayBehavior(addressActivateBreakAwayMove,    addressActivateBreakAwayMoveDisableValue)

    sleep(50)
  end

  inputPressed = readInteger(addressInputPress)
  oldInputPressed = inputPressed
  isSwapingDb = false
end
function IsNeroPlayable()
  if (readInteger(baseAddressDB) == nil) then
     return false
  end

  return true
end

--[[
    ---------------------------------------DB SWITCHER ENABLE CODE--------------------------------------------
--]]
[ENABLE]
--FUNCTIONS INIT BREAK AWAY BEHAVIOR SCRIPT--
function ScriptChangeBreakAwayBehavior(address, value)
  writeBytes(address, value)
end

--ENABLE CUSTOM BREAK AWAY BEHAVIOR SCRIPTS--
ScriptChangeBreakAwayBehavior(addressDisableBreakAwayMove,     addressDisableBreakAwayMoveEnableValue)
ScriptChangeBreakAwayBehavior(addressRemoveBreakAwayAnimation, addressRemoveBreakAwayAnimationEnableValue)

--UPDATE MAIN--
updateDBSwitcher = createThread(function(thread)
  while not thread.Terminated do
    --prevent the auto db addition in bp--
    if readPointer(addressDBNextDBBase) == nil then
      sleep(3000)
    end

    --if is playing with nero
    if IsNeroPlayable() then
      --read data--
      inputPressed = readInteger(addressInputPress)

      --set db count to 1--
      if readInteger(addressDBCount) ~= 1 then
         writeInteger(addressDBCount, 1)
      end

      --enable break away animation--
      if InputIsPressed(GetMoveInputIdFromName(enableBreakAwayAnimation)) then
        ScriptChangeBreakAwayBehavior(addressRemoveBreakAwayAnimation, addressRemoveBreakAwayAnimationDisableValue)
      else
        ScriptChangeBreakAwayBehavior(addressRemoveBreakAwayAnimation, addressRemoveBreakAwayAnimationEnableValue)
      end

      --db swaps--
      GamepadSwapV1()  --D-Pad + Diagonals For 8 DB
      KeyboardSwapV1() --12 Keys For 12 DB

      --input update--
      oldInputPressed = inputPressed
      for key,value in pairs(keyboardInputList) do
        value.oldKeyboardPressed = isKeyPressed(value.key)
      end
      oldInputPressed = inputPressed
    end
    sleep(10)
  end
end)

function GamepadSwapV1()
  if InputWasPressed(1) and isSwapingDb == false then --UP
    isSwapingDb = true
    nextDevilBreaker = devilBreaker1
    sleep(50)
    inputPressed = readInteger(addressInputPress)
    if InputIsPressed(4) then --+LEFT
      nextDevilBreaker = devilBreaker5
    elseif InputIsPressed(8) then --+RIGHT
      nextDevilBreaker = devilBreaker6
    end
    SwapDevilBreaker(GetDevilBreakerIdFromName(nextDevilBreaker))
  end
  if InputWasPressed(2) and isSwapingDb == false then --DOWN
    isSwapingDb = true
    nextDevilBreaker = devilBreaker2
    sleep(50)
    inputPressed = readInteger(addressInputPress)
    if InputIsPressed(4) then --+LEFT
      nextDevilBreaker = devilBreaker7
    elseif InputIsPressed(8) then --+RIGHT
      nextDevilBreaker = devilBreaker8
    end
    SwapDevilBreaker(GetDevilBreakerIdFromName(nextDevilBreaker))
  end
  if InputWasPressed(4) and isSwapingDb == false then --LEFT
    isSwapingDb = true
    nextDevilBreaker = devilBreaker3
    sleep(50)
    inputPressed = readInteger(addressInputPress)
    if InputIsPressed(1) then --+UP
      nextDevilBreaker = devilBreaker5
    elseif InputIsPressed(2) then --+DOWN
      nextDevilBreaker = devilBreaker7
    end
    SwapDevilBreaker(GetDevilBreakerIdFromName(nextDevilBreaker))
  end
  if InputWasPressed(8) and isSwapingDb == false then --RIGHT
    isSwapingDb = true
    nextDevilBreaker = devilBreaker4
    sleep(50)
    inputPressed = readInteger(addressInputPress)
    if InputIsPressed(1) then --+UP
      nextDevilBreaker = devilBreaker6
    elseif InputIsPressed(2) then --+DOWN
      nextDevilBreaker = devilBreaker8
    end
    SwapDevilBreaker(GetDevilBreakerIdFromName(nextDevilBreaker))
  end
end

function KeyboardSwapV1()
  if KeyboardWasPressed(keyboardInputList.keyboardBreakAwaySwitch1.key, keyboardInputList.keyboardBreakAwaySwitch1.oldKeyboardPressed) and isSwapingDb == false then
    isSwapingDb = true
    nextDevilBreaker = devilBreaker1
    SwapDevilBreaker(GetDevilBreakerIdFromName(nextDevilBreaker))
  end
  if KeyboardWasPressed(keyboardInputList.keyboardBreakAwaySwitch2.key, keyboardInputList.keyboardBreakAwaySwitch2.oldKeyboardPressed) and isSwapingDb == false then
    isSwapingDb = true
    nextDevilBreaker = devilBreaker2
    SwapDevilBreaker(GetDevilBreakerIdFromName(nextDevilBreaker))
  end
  if KeyboardWasPressed(keyboardInputList.keyboardBreakAwaySwitch3.key, keyboardInputList.keyboardBreakAwaySwitch3.oldKeyboardPressed) and isSwapingDb == false then
    isSwapingDb = true
    nextDevilBreaker = devilBreaker3
    SwapDevilBreaker(GetDevilBreakerIdFromName(nextDevilBreaker))
  end
  if KeyboardWasPressed(keyboardInputList.keyboardBreakAwaySwitch4.key, keyboardInputList.keyboardBreakAwaySwitch4.oldKeyboardPressed) and isSwapingDb == false then
    isSwapingDb = true
    nextDevilBreaker = devilBreaker4
    SwapDevilBreaker(GetDevilBreakerIdFromName(nextDevilBreaker))
  end
  if KeyboardWasPressed(keyboardInputList.keyboardBreakAwaySwitch5.key, keyboardInputList.keyboardBreakAwaySwitch5.oldKeyboardPressed) and isSwapingDb == false then
    isSwapingDb = true
    nextDevilBreaker = devilBreaker5
    SwapDevilBreaker(GetDevilBreakerIdFromName(nextDevilBreaker))
  end
  if KeyboardWasPressed(keyboardInputList.keyboardBreakAwaySwitch6.key, keyboardInputList.keyboardBreakAwaySwitch6.oldKeyboardPressed) and isSwapingDb == false then
    isSwapingDb = true
    nextDevilBreaker = devilBreaker6
    SwapDevilBreaker(GetDevilBreakerIdFromName(nextDevilBreaker))
  end
  if KeyboardWasPressed(keyboardInputList.keyboardBreakAwaySwitch7.key, keyboardInputList.keyboardBreakAwaySwitch7.oldKeyboardPressed) and isSwapingDb == false then
    isSwapingDb = true
    nextDevilBreaker = devilBreaker7
    SwapDevilBreaker(GetDevilBreakerIdFromName(nextDevilBreaker))
  end
  if KeyboardWasPressed(keyboardInputList.keyboardBreakAwaySwitch8.key, keyboardInputList.keyboardBreakAwaySwitch8.oldKeyboardPressed) and isSwapingDb == false then
    isSwapingDb = true
    nextDevilBreaker = devilBreaker8
    SwapDevilBreaker(GetDevilBreakerIdFromName(nextDevilBreaker))
  end
  if KeyboardWasPressed(keyboardInputList.keyboardBreakAwaySwitch9.key, keyboardInputList.keyboardBreakAwaySwitch9.oldKeyboardPressed) and isSwapingDb == false then
    isSwapingDb = true
    nextDevilBreaker = devilBreaker9
    SwapDevilBreaker(GetDevilBreakerIdFromName(nextDevilBreaker))
  end
  if KeyboardWasPressed(keyboardInputList.keyboardBreakAwaySwitch10.key, keyboardInputList.keyboardBreakAwaySwitch10.oldKeyboardPressed) and isSwapingDb == false then
    isSwapingDb = true
    nextDevilBreaker = devilBreaker10
    SwapDevilBreaker(GetDevilBreakerIdFromName(nextDevilBreaker))
  end
  if KeyboardWasPressed(keyboardInputList.keyboardBreakAwaySwitch11.key, keyboardInputList.keyboardBreakAwaySwitch11.oldKeyboardPressed) and isSwapingDb == false then
    isSwapingDb = true
    nextDevilBreaker = devilBreaker11
    SwapDevilBreaker(GetDevilBreakerIdFromName(nextDevilBreaker))
  end
  if KeyboardWasPressed(keyboardInputList.keyboardBreakAwaySwitch12.key, keyboardInputList.keyboardBreakAwaySwitch12.oldKeyboardPressed) and isSwapingDb == false then
    isSwapingDb = true
    nextDevilBreaker = devilBreaker12
    SwapDevilBreaker(GetDevilBreakerIdFromName(nextDevilBreaker))
  end
end

--[[
    --------------------------------------DB SWITCHER DISABLE CODE--------------------------------------------
--]]
[DISABLE]
--TERMINATE UPDATES THREAD(S)--
if updateDBSwitcher then
  updateDBSwitcher.terminate()
  updateDBSwitcher = nil
end

--DISABLE CUSTOM BREAK AWAY BEHAVIOR SCRIPTS--
ScriptChangeBreakAwayBehavior(addressActivateBreakAwayMove,    addressActivateBreakAwayMoveDisableValue)
ScriptChangeBreakAwayBehavior(addressDisableBreakAwayMove,     addressDisableBreakAwayMoveDisableValue)
ScriptChangeBreakAwayBehavior(addressRemoveBreakAwayAnimation, addressRemoveBreakAwayAnimationDisableValue)
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>11048</ID>
                      <Description>"(Debug)"</Description>
                      <Options moHideChildren="1" moManualExpandCollapse="1"/>
                      <LastState Value="" RealAddress="00000000"/>
                      <GroupHeader>1</GroupHeader>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>11049</ID>
                          <Description>"DB - Count"</Description>
                          <VariableType>4 Bytes</VariableType>
                          <Address>"DevilMayCry5.exe"+07A98340</Address>
                          <Offsets>
                            <Offset>17CC</Offset>
                            <Offset>70</Offset>
                          </Offsets>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>11050</ID>
                          <Description>"DB - Current Id (?)"</Description>
                          <VariableType>4 Bytes</VariableType>
                          <Address>"DevilMayCry5.exe"+07A9A858</Address>
                          <Offsets>
                            <Offset>17D4</Offset>
                            <Offset>70</Offset>
                          </Offsets>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>11051</ID>
                          <Description>"DB - Next Id"</Description>
                          <VariableType>4 Bytes</VariableType>
                          <Address>"DevilMayCry5.exe"+07A7BBF8</Address>
                          <Offsets>
                            <Offset>20</Offset>
                            <Offset>1790</Offset>
                            <Offset>70</Offset>
                          </Offsets>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>11052</ID>
                          <Description>"Input Press"</Description>
                          <VariableType>4 Bytes</VariableType>
                          <Address>"DevilMayCry5.exe"+07A9B5D8</Address>
                          <Offsets>
                            <Offset>98</Offset>
                            <Offset>60</Offset>
                          </Offsets>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>18365</ID>
                  <Description>"Disable Wiresnatch 1.0"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>//~SSSiyan
//~socks

[ENABLE]
{$lua}
--getAddressList().getMemoryRecordByDescription("Disable Wiresnatch 1.0").active=false
getAddressList().getMemoryRecordByDescription("Disable Wiresnatch No Exceptions").active=false
{$asm}
//aobscanmodule(disablewiresn,DevilMayCry5.exe,75 21 48 8B 92 00 18 00 00 48 85 D2 74 CE)
define(disablewiresn,DevilMayCry5.exe+FB9A54)
alloc(newmem,$1000,disablewiresn)
label(unchangeddb)
label(removedwiresnatch)
label(return)

newmem:
cmp [rdx+17D4],6
je unchangeddb
cmp [rdx+17D4],7
je unchangeddb
jmp removedwiresnatch

unchangeddb:
  cmp byte ptr [rdx+00000ED0],00
  jne DevilMayCry5.exe+FB9A77

removedwiresnatch:
  mov rdx,[rdx+00001800]
  jmp return

disablewiresn:
  jmp newmem
  nop
  nop
  nop
  nop
return:
registersymbol(disablewiresn)

[DISABLE]
disablewiresn:
  db 75 21 48 8B 92 00 18 00 00
unregistersymbol(disablewiresn)
dealloc(newmem)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>18366</ID>
                  <Description>"Disable Wiresnatch No Exceptions"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>//~SSSiyan
//~socks

[ENABLE]
{$lua}
getAddressList().getMemoryRecordByDescription("Disable Wiresnatch 1.0").active=false
--getAddressList().getMemoryRecordByDescription("Disable Wiresnatch No Exceptions").active=false
{$asm}
//aobscanmodule(disablewiresn,DevilMayCry5.exe,75 21 48 8B 92 00 18 00 00 48 85 D2 74 CE)
define(disablewiresn,DevilMayCry5.exe+FB9A54)
alloc(newmem,$1000,disablewiresn)
label(return)

newmem:
  mov rdx,[rdx+00001800]
  jmp return

disablewiresn:
  jmp newmem
  nop
  nop
  nop
  nop
return:
registersymbol(disablewiresn)

[DISABLE]
disablewiresn:
  db 75 21 48 8B 92 00 18 00 00
unregistersymbol(disablewiresn)
dealloc(newmem)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>18512</ID>
                  <Description>"Lock On With Tomboy"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
DevilMayCry5.exe+1103EA5:
nop
nop

[DISABLE]
DevilMayCry5.exe+1103EA5:
jne DevilMayCry5.exe+1103EBC
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>18316</ID>
                  <Description>"Replace BP Gerbera with GP01"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : DevilMayCry5.exe
  Version:
  Date   : 2019-06-09
  Author : SSSiyan
}
[ENABLE]
//aobscanmodule(PickupGerberaTo01,DevilMayCry5.exe,44 89 59 20 41 B9 01 00 00 00)
define(PickupGerberaTo01,DevilMayCry5.exe+F9727D)
alloc(newmem,$100,PickupGerberaTo01)
label(code)
label(return)

newmem:
cmp r11d,3
jne code
mov [rcx+20],9
mov r9d,00000001
jmp return

code:
  mov [rcx+20],r11d
  mov r9d,00000001
  jmp return

PickupGerberaTo01:
  jmp newmem
  nop
  nop
  nop
  nop
  nop
return:
registersymbol(PickupGerberaTo01)

[DISABLE]
PickupGerberaTo01:
  db 44 89 59 20 41 B9 01 00 00 00
unregistersymbol(PickupGerberaTo01)
dealloc(newmem)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>18</ID>
                  <Description>"Inf Punchline Duration"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
//SSSiyan
//socks
//aobscanmodule(infpunchline,DevilMayCry5.exe,83 B8 B0 00 00 00 05 7D 3A 0F 5A C1 F3 0F 10 8F 28 01 00 00 66 0F 5A C0)
define(infpunchline,DevilMayCry5.exe+FB30BA)
infpunchline:
  db 90 90 90 90 90 90 90
registersymbol(infpunchline)

[DISABLE]
infpunchline:
  db 83 B8 B0 00 00 00 05
unregistersymbol(infpunchline)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>37</ID>
                  <Description>"Inf Blue Rose Ammo"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : DevilMayCry5.exe
  Version:
  Date   : 2019-03-08
  Author : Jessie Kazama
}
[ENABLE]
//aobscanmodule(infammo,DevilMayCry5.exe,89 87 20 03 00 00 E9)
define(infammo,DevilMayCry5.exe+16D7A9C)
alloc(newmem,$1000,infammo)
label(code)
label(return)

registersymbol(infammo)

newmem:

code:
  mov eax,[rdi+324]
  mov [rdi+320],eax
  jmp return

infammo:
  jmp newmem
  nop
return:

[DISABLE]
infammo:
  db 89 87 20 03 00 00
unregistersymbol(infammo)
dealloc(newmem
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>10022</ID>
                  <Description>"Nero Wings Only DT"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>//SSSiyan
//socks
[ENABLE]
//aobscanmodule(dtwingonly,DevilMayCry5.exe,48 83 78 18 00 0F 94 ?? 48 8B 6C 24 50 0F)
define(dtwingonly,DevilMayCry5.exe+803720)
dtwingonly:
  db 90 90 90 90 90
registersymbol(dtwingonly)

[DISABLE]
dtwingonly:
  db 48 83 78 18 00
unregistersymbol(dtwingonly)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>38</ID>
                  <Description>"Manual Rev Gives Max Exceed"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : DevilMayCry5.exe
  Version:
  Date   : 2019-03-08
  Author : Jessie Kazama
}
[ENABLE]
//aobscanmodule(instantex,DevilMayCry5.exe,F3 0F 11 4A 28 77)
define(instantex,DevilMayCry5.exe+F3A9D4)
alloc(newmem,$1000,instantex)
label(code)
label(return)
registersymbol(instantex)
//aobscanmodule(instantexceed,DevilMayCry5.exe,F3 0F 11 42 20 49)
define(instantexceed,DevilMayCry5.exe+F3AAB7)
alloc(newmem2,$1000,instantexceed)
label(code2)
label(return2)
registersymbol(instantexceed)

newmem:
  movss xmm1,[rdx+4C]

code:
  movss [rdx+28],xmm1
  jmp return

newmem2:
code2:
  fld [rdx+4C]
  fstp [rdx+20]
  jmp return2

instantex:
  jmp newmem
return:

instantexceed:
  jmp newmem2
return2:

[DISABLE]
instantex:
  db F3 0F 11 4A 28
unregistersymbol(instantex)
dealloc(newmem)
instantexceed:
  db F3 0F 11 42 20
unregistersymbol(instantexceed)
dealloc(newmem2)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>39</ID>
                  <Description>"Max Exceed"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : DevilMayCry5.exe
  Version:
  Date   : 2019-03-08
  Author : Jessie Kazama
}
[ENABLE]
//aobscanmodule(maxex,DevilMayCry5.exe,8B 49 18 48 8B 43 50 48 39 70 18 0F 85 29)
define(maxex,DevilMayCry5.exe+15ADFAA)
alloc(newmem,$1000,maxex)
label(code)
label(return)
registersymbol(maxex)

newmem:
  mov [rcx+18],3

code:
  mov ecx,[rcx+18]
  mov rax,[rbx+50]
  jmp return

maxex:
  jmp newmem
  nop
  nop
return:

[DISABLE]
maxex:
  db 8B 49 18 48 8B 43 50
unregistersymbol(maxex)
dealloc(newmem)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>10179</ID>
                  <Description>"No DT cooldown"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : DevilMayCry5.exe
  Version: 
  Date   : 2019-08-09
  Author : SSSiyan
}
[ENABLE]
//aobscanmodule(noDTcooldownNero,DevilMayCry5.exe,89 87 1C 11 00 00 48 8B 43 50 48 83)
define(noDTcooldownNero,DevilMayCry5.exe+803600)
noDTcooldownNero:
  nop
  nop
  nop
  nop
  nop
  nop
registersymbol(noDTcooldownNero)

[DISABLE]
noDTcooldownNero:
  db 89 87 1C 11 00 00
unregistersymbol(noDTcooldownNero)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>10240</ID>
                  <Description>"Instant Level 3 Charge Shot"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : DevilMayCry5.exe
  Version:
  Date   : 2019-08-10
  Author : SSSiyan
}
[ENABLE]
//aobscanmodule(instantlevel3CS,DevilMayCry5.exe,0F 87 77 01 00 00 89 73)
define(instantlevel3CS,DevilMayCry5.exe+E02D54)
instantlevel3CS:
  db 90 90 90 90 90 90
registersymbol(instantlevel3CS)

[DISABLE]
instantlevel3CS:
  db 0F 87 77 01 00 00
unregistersymbol(instantlevel3CS)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>18317</ID>
                  <Description>"Faster Charge Shot"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : DevilMayCry5.exe
  Version: 
  Date   : 2019-08-10
  Author : SSSiyan
}
[ENABLE]
//aobscanmodule(fasternerocharge,DevilMayCry5.exe,89 73 5C 48 8B 47 50 48 39 70 18 0F)
define(fasternerocharge,DevilMayCry5.exe+E02D5A)
alloc(newmem,$1000,fasternerocharge)
label(code)
label(return)

newmem:

code:
  mov [rbx+5C],(float)50
  mov rax,[rdi+50]
  jmp return

fasternerocharge:
  jmp newmem
  nop
  nop
return:
registersymbol(fasternerocharge)

[DISABLE]
fasternerocharge:
  db 89 73 5C 48 8B 47 50
unregistersymbol(fasternerocharge)
dealloc(newmem)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>18318</ID>
                  <Description>"Skip Charge Shot 2"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : DevilMayCry5.exe
  Version: 
  Date   : 2019-08-10
  Author : SSSiyan
}
[ENABLE]
//aobscanmodule(skipCS2,DevilMayCry5.exe,FF 43 58 48 8B 47 50)
define(skipCS2,DevilMayCry5.exe+E02D6B)
alloc(newmem,$1000,skipCS2)
label(code)
label(return)

newmem:
cmp [rbx+58],3
jne code
mov [rbx+58],5
mov rax,[rdi+50]
jmp return

code:
  inc [rbx+58]
  mov rax,[rdi+50]
  jmp return

skipCS2:
  jmp newmem
  nop
  nop
return:
registersymbol(skipCS2)

[DISABLE]
skipCS2:
  db FF 43 58 48 8B 47 50
unregistersymbol(skipCS2)
dealloc(newmem)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>10242</ID>
                  <Description>"Nothing Cancels Bubble"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : DevilMayCry5.exe
  Version: 
  Date   : 2019-08-10
  Author : SSSiyan
}
[ENABLE]
//aobscanmodule(NothingCancelsBubble,DevilMayCry5.exe,48 8B 41 50 4D 89 C7 48 89 D3 49)
//aobscanmodule(NothingCancelsBubble,DevilMayCry5.exe,48 8B 41 50 4D 8B F8 48 8B DA 4C) tu5
define(NothingCancelsBubble,"DevilMayCry5.exe"+1A05C2A)
NothingCancelsBubble:
  db 90 90 90 90
registersymbol(NothingCancelsBubble)

[DISABLE]
NothingCancelsBubble:
  db 48 8B 41 50
unregistersymbol(NothingCancelsBubble)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>11951</ID>
                  <Description>"Fast Slow World"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : DevilMayCry5.exe
  Version: 
  Date   : 2019-08-25
  Author : SSSiyan
}
[ENABLE]
{$lua}
--getAddressList().getMemoryRecordByDescription("Fast Slow World").active=false
getAddressList().getMemoryRecordByDescription("Fast Charge All Breakers").active=false
{$asm}
//aobscanmodule(zawarudocharge,DevilMayCry5.exe,44 89 42 5C 48 8B 41 50) // should be unique
define(zawarudocharge,DevilMayCry5.exe+E04478)
alloc(newmem,$1000,zawarudocharge)
label(code)
label(return)
label(dbcheck)
label(offsetcheck)
label(fastercharge)

newmem:
offsetcheck:

  cmp [rdx+48],1000
  je dbcheck
  jmp code

dbcheck:
  cmp [dbid],1
  je fastercharge
  jmp code

fastercharge:
  mov [rdx+5C],(float)100
  mov rax,[rcx+50]
  jmp return

code:
  mov [rdx+5C],r8d
  mov rax,[rcx+50]
  jmp return

zawarudocharge:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(zawarudocharge)

[DISABLE]
zawarudocharge:
  db 44 89 42 5C 48 8B 41 50
unregistersymbol(zawarudocharge)
dealloc(newmem)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>18522</ID>
                  <Description>"Fast Charge All Breakers"</Description>
                  <Options moHideChildren="1"/>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : DevilMayCry5.exe
  Version: 
  Date   : 2020-02-13
  Author : sssiy
}

[ENABLE]
{$lua}
getAddressList().getMemoryRecordByDescription("Fast Slow World").active=false
--getAddressList().getMemoryRecordByDescription("Fast Charge All Breakers").active=false
{$asm}
aobscanmodule(fastcharge1,DevilMayCry5.exe,0F 5A C8 66 0F 2F D1 0F 87 77) // should be unique
alloc(newmem1,$1000,"DevilMayCry5.exe"+E02D4D)
label(code1)
label(return1)

alloc(chargetime,8)
registersymbol(chargetime)
chargetime:
dq (double)25

newmem1:

code1:
  cvtps2pd xmm1,xmm0
  movsd xmm2,[chargetime]
  comisd xmm2,xmm1
  jmp return1

fastcharge1:
  jmp newmem1
  nop
  nop
return1:
registersymbol(fastcharge1)

aobscanmodule(fastcharge2,DevilMayCry5.exe,FF 43 58 48 8B 47 50) // should be unique
alloc(newmem2,$1000,"DevilMayCry5.exe"+E02D6B)
label(code2)
label(return2)

newmem2:

code2:
  mov eax,[rbx+1C]
  cmp eax,7FFFFFFF
  je morecode

  mov [rbx+58],eax
  mov rax,[rdi+50]
  jmp return2

morecode:
  inc [rbx+58]
  mov rax,[rdi+50]
  jmp return2

fastcharge2:
  jmp newmem2
  nop
  nop
return2:
registersymbol(fastcharge2)

[DISABLE]
fastcharge1:
  db 0F 5A C8 66 0F 2F D1
unregistersymbol(fastcharge1)
dealloc(newmem1)

dealloc(chargetime)
unregistersymbol(chargetime)

fastcharge2:
  db FF 43 58 48 8B 47 50
unregistersymbol(fastcharge2)
dealloc(newmem2)

{
// ORIGINAL CODE - INJECTION POINT: "DevilMayCry5.exe"+E02D4D

"DevilMayCry5.exe"+E02D26: 48 8B D3              -  mov rdx,rbx
"DevilMayCry5.exe"+E02D29: 48 8B CF              -  mov rcx,rdi
"DevilMayCry5.exe"+E02D2C: 0F 5A F2              -  cvtps2pd xmm6,xmm2
"DevilMayCry5.exe"+E02D2F: E8 1C 56 FF FF        -  call DevilMayCry5.exe+DF8350
"DevilMayCry5.exe"+E02D34: 48 8B 47 50           -  mov rax,[rdi+50]
"DevilMayCry5.exe"+E02D38: 0F 57 D2              -  xorps xmm2,xmm2
"DevilMayCry5.exe"+E02D3B: F3 0F 5A D0           -  cvtss2sd xmm2,xmm0
"DevilMayCry5.exe"+E02D3F: 48 39 70 18           -  cmp [rax+18],rsi
"DevilMayCry5.exe"+E02D43: 0F 85 88 01 00 00     -  jne DevilMayCry5.exe+E02ED1
"DevilMayCry5.exe"+E02D49: 66 0F 5A C6           -  cvtpd2ps xmm0,xmm6
// ---------- INJECTING HERE ----------
"DevilMayCry5.exe"+E02D4D: 0F 5A C8              -  cvtps2pd xmm1,xmm0
"DevilMayCry5.exe"+E02D50: 66 0F 2F D1           -  comisd xmm2,xmm1
// ---------- DONE INJECTING  ----------
"DevilMayCry5.exe"+E02D54: 0F 87 77 01 00 00     -  ja DevilMayCry5.exe+E02ED1
"DevilMayCry5.exe"+E02D5A: 89 73 5C              -  mov [rbx+5C],esi
"DevilMayCry5.exe"+E02D5D: 48 8B 47 50           -  mov rax,[rdi+50]
"DevilMayCry5.exe"+E02D61: 48 39 70 18           -  cmp [rax+18],rsi
"DevilMayCry5.exe"+E02D65: 0F 85 66 01 00 00     -  jne DevilMayCry5.exe+E02ED1
"DevilMayCry5.exe"+E02D6B: FF 43 58              -  inc [rbx+58]
"DevilMayCry5.exe"+E02D6E: 48 8B 47 50           -  mov rax,[rdi+50]
"DevilMayCry5.exe"+E02D72: 48 39 70 18           -  cmp [rax+18],rsi
"DevilMayCry5.exe"+E02D76: 0F 85 55 01 00 00     -  jne DevilMayCry5.exe+E02ED1
"DevilMayCry5.exe"+E02D7C: C6 43 66 01           -  mov byte ptr [rbx+66],01
}
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>18523</ID>
                      <Description>"Charge Time"</Description>
                      <VariableType>Double</VariableType>
                      <Address>chargetime</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>12952</ID>
                  <Description>"Showdown Outside of DT"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : DevilMayCry5.exe
  Version: 
  Date   : 2019-10-26
  Author : SSSiyan
}

[ENABLE]
//aobscanmodule(showdownnodt,DevilMayCry5.exe,83 BA B0 09 00 00 01 0F 85 17) // should be unique
define(showdownnodt,DevilMayCry5.exe+FC25AE)
alloc(newmem,$1000,showdownnodt)
label(code)
label(return)

newmem:

code:
  //cmp dword ptr [rdx+000009B0],01
  jmp return

showdownnodt:
  jmp newmem
  nop
  nop
return:
registersymbol(showdownnodt)

[DISABLE]
showdownnodt:
  db 83 BA B0 09 00 00 01
unregistersymbol(showdownnodt)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "DevilMayCry5.exe"+E9742CE

"DevilMayCry5.exe"+E9742A7: 0F 85 45 FF FF FF     -  jne DevilMayCry5.exe+E9741F2
"DevilMayCry5.exe"+E9742AD: 48 8B 74 24 68        -  mov rsi,[rsp+68]
"DevilMayCry5.exe"+E9742B2: 85 C9                 -  test ecx,ecx
"DevilMayCry5.exe"+E9742B4: 0F 95 D0              -  setne al
"DevilMayCry5.exe"+E9742B7: 48 8B 5C 24 70        -  mov rbx,[rsp+70]
"DevilMayCry5.exe"+E9742BC: 48 83 C4 50           -  add rsp,50
"DevilMayCry5.exe"+E9742C0: 5F                    -  pop rdi
"DevilMayCry5.exe"+E9742C1: C3                    -  ret 
"DevilMayCry5.exe"+E9742C2: 48 3D 00 40 00 00     -  cmp rax,00004000
"DevilMayCry5.exe"+E9742C8: 0F 85 3D 01 00 00     -  jne DevilMayCry5.exe+E97440B
// ---------- INJECTING HERE ----------
"DevilMayCry5.exe"+E9742CE: 83 BA B0 09 00 00 01  -  cmp dword ptr [rdx+000009B0],01
// ---------- DONE INJECTING  ----------
"DevilMayCry5.exe"+E9742D5: 0F 85 17 FF FF FF     -  jne DevilMayCry5.exe+E9741F2
"DevilMayCry5.exe"+E9742DB: 48 8B 82 B0 18 00 00  -  mov rax,[rdx+000018B0]
"DevilMayCry5.exe"+E9742E2: 48 85 C0              -  test rax,rax
"DevilMayCry5.exe"+E9742E5: 0F 84 FB FE FF FF     -  je DevilMayCry5.exe+E9741E6
"DevilMayCry5.exe"+E9742EB: 80 78 4E 00           -  cmp byte ptr [rax+4E],00
"DevilMayCry5.exe"+E9742EF: 0F 84 FD FE FF FF     -  je DevilMayCry5.exe+E9741F2
"DevilMayCry5.exe"+E9742F5: 48 8B 02              -  mov rax,[rdx]
"DevilMayCry5.exe"+E9742F8: 48 8B 48 F0           -  mov rcx,[rax-10]
"DevilMayCry5.exe"+E9742FC: 48 8B 81 A8 04 00 00  -  mov rax,[rcx+000004A8]
"DevilMayCry5.exe"+E974303: 48 89 D9              -  mov rcx,rbx
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>12953</ID>
                  <Description>"Maximum Bet Outside of DT"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : DevilMayCry5.exe
  Version: 
  Date   : 2019-10-26
  Author : sssiy

  This script does blah blah blah
}

[ENABLE]
//aobscanmodule(maxbetnodt,DevilMayCry5.exe,83 BA B0 09 00 00 01 0F 85 CE) // should be unique
define(maxbetnodt,DevilMayCry5.exe+FC26F7)
alloc(newmem,$1000,maxbetnodt)
label(code)
label(return)

newmem:

code:
  //cmp dword ptr [rdx+000009B0],01
  jmp return

maxbetnodt:
  jmp newmem
  nop
  nop
return:
registersymbol(maxbetnodt)

[DISABLE]
maxbetnodt:
  db 83 BA B0 09 00 00 01
unregistersymbol(maxbetnodt)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "DevilMayCry5.exe"+E974417

"DevilMayCry5.exe"+E9743F0: 48 8B 43 50           -  mov rax,[rbx+50]
"DevilMayCry5.exe"+E9743F4: 48 39 70 18           -  cmp [rax+18],rsi
"DevilMayCry5.exe"+E9743F8: 48 8B 74 24 68        -  mov rsi,[rsp+68]
"DevilMayCry5.exe"+E9743FD: 0F 94 D0              -  sete al
"DevilMayCry5.exe"+E974400: 48 8B 5C 24 70        -  mov rbx,[rsp+70]
"DevilMayCry5.exe"+E974405: 48 83 C4 50           -  add rsp,50
"DevilMayCry5.exe"+E974409: 5F                    -  pop rdi
"DevilMayCry5.exe"+E97440A: C3                    -  ret 
"DevilMayCry5.exe"+E97440B: 48 3D 00 80 00 00     -  cmp rax,00008000
"DevilMayCry5.exe"+E974411: 0F 85 DB FD FF FF     -  jne DevilMayCry5.exe+E9741F2
// ---------- INJECTING HERE ----------
"DevilMayCry5.exe"+E974417: 83 BA B0 09 00 00 01  -  cmp dword ptr [rdx+000009B0],01
// ---------- DONE INJECTING  ----------
"DevilMayCry5.exe"+E97441E: 0F 85 CE FD FF FF     -  jne DevilMayCry5.exe+E9741F2
"DevilMayCry5.exe"+E974424: 48 8B 82 B0 18 00 00  -  mov rax,[rdx+000018B0]
"DevilMayCry5.exe"+E97442B: 48 85 C0              -  test rax,rax
"DevilMayCry5.exe"+E97442E: 0F 84 B2 FD FF FF     -  je DevilMayCry5.exe+E9741E6
"DevilMayCry5.exe"+E974434: 80 78 4F 00           -  cmp byte ptr [rax+4F],00
"DevilMayCry5.exe"+E974438: 0F 84 B4 FD FF FF     -  je DevilMayCry5.exe+E9741F2
"DevilMayCry5.exe"+E97443E: 48 8B 02              -  mov rax,[rdx]
"DevilMayCry5.exe"+E974441: 48 8B 48 F0           -  mov rcx,[rax-10]
"DevilMayCry5.exe"+E974445: 48 8B 81 A8 04 00 00  -  mov rax,[rcx+000004A8]
"DevilMayCry5.exe"+E97444C: 48 89 D9              -  mov rcx,rbx
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>18514</ID>
                  <Description>"Cancel Out Of Nero's DT Activation With jump"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : DevilMayCry5.exe
  Version: 
  Date   : 2019-08-13
  Author : SSSiyan
}
[ENABLE]
//aobscanmodule(cancelcertainthings,DevilMayCry5.exe,66 C7 47 58 00 00)
define(cancelcertainthings,DevilMayCry5.exe+18DDFC0)
alloc(newmem,$1000,cancelcertainthings)
label(cancellable)
label(uncancellable)
label(return)

newmem:
  cmp [moveid],A //Nero Ground DT
  je cancellable
  cmp [moveid],64000A //Nero Air DT
  je cancellable
  jmp uncancellable

uncancellable:
  mov word ptr [rdi+58],0000
  jmp return

cancellable:
  mov word ptr [rdi+58],0100
  jmp return

cancelcertainthings:
  jmp newmem
  nop
return:
registersymbol(cancelcertainthings)

[DISABLE]
cancelcertainthings:
  db 66 C7 47 58 00 00
unregistersymbol(cancelcertainthings)
dealloc(newmem)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>18516</ID>
                  <Description>"Faster Snatch"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : DevilMayCry5.exe
  Version: 
  Date   : 2019-09-08
  Author : SSSiyan
}
[ENABLE]
define(playerspeedmult,DevilMayCry5.exe+1F60B44)
alloc(newmem,$1000,playerspeedmult)
registersymbol(playerspeedmult)
label(code)
label(return)

label(snatchcheck)
label(snatchp1)
label(snatchp2)

alloc(playerspeed,$1000)
registersymbol(snatchspeed)
registersymbol(snatchpullspeed)
playerspeed:
snatchspeed:
dd (float)1.5
snatchpullspeed:
dd (float)2

newmem:
cmp byte ptr [rcx-40],'play'
je snatchcheck
jmp code

snatchcheck:
cmp [moveid],1F410064 //Ground Snatch (Mid)
je snatchp1
cmp [moveid],1F450064 //Ground Snatch (Low)
je snatchp1
cmp [moveid],1F460064 //Ground Snatch (High)
je snatchp1
cmp [moveid],0BB80046 //Air Snatch (Mid)
je snatchp1
cmp [moveid],0BBA0046 //Air Snatch (Low)
je snatchp1
cmp [moveid],0BB90046 //Air Snatch (High)
je snatchp1

cmp [moveid],0BC20046 //Air Pull (Mid)
je snatchp2
cmp [moveid],0BC40046 //Air Pull (Low)
je snatchp2
cmp [moveid],0BC30046 //Air Pull (High)
je snatchp2
cmp [moveid],07DA0046 //Ground Pull (Mid)
je snatchp2
cmp [moveid],07DC0046 //Ground Pull (Low)
je snatchp2
cmp [moveid],07DB0046 //Ground Pull (High)
je snatchp2
jmp code

snatchp1:
mulss xmm0,[snatchspeed]
jmp code

snatchp2:
mulss xmm0,[snatchpullspeed]
jmp code

code:
  movss [rcx+4C],xmm0
  jmp return

playerspeedmult:
  jmp newmem
return:

[DISABLE]
playerspeedmult:
  db F3 0F 11 41 4C
unregistersymbol(playerspeedmult)
dealloc(newmem)

dealloc(playerspeed)
unregistersymbol(snatchspeed)
unregistersymbol(snatchpullspeed)
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>18307</ID>
              <Description>"Dante Specific"</Description>
              <Options moDeactivateChildrenAsWell="1"/>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
[DISABLE]
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>18306</ID>
                  <Description>"Bypass Cavliere R Restriction (BP)"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>//nino
//socks

[ENABLE]
//aobscanmodule(bpcavr,DevilMayCry5.exe,3B 70 1C 72 11 45 ?? ?? 48 ?? ?? ?? 8D 50 37 E8 ?? ?? ?? ?? EB ?? ?? 89 0C)
define(bpcavr,DevilMayCry5.exe+1AC70E7)
bpcavr:
  db EB 2C 90 90
registersymbol(bpcavr)

[DISABLE]
bpcavr:
  //mov [r14+rax],ecx
  db 41 89 0C 06
unregistersymbol(bpcavr)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>12103</ID>
                  <Description>"Balrog Passive Switch (V1.0 - Darkslayer Style)"</Description>
                  <Options moHideChildren="1"/>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>//nino
{$lua}
--[[
    ---------------------------------------BALROG PASSIVE SWITCH INIT CODE--------------------------------------------
--]]
--VARS ADDRESS (POINTERS)--
addressStyleMode  = "[[DevilMayCry5.exe+07A75E48]+60]+188C"
addressBalrogMode = "[[DevilMayCry5.exe+07A75E48]+60]+18CC"
addressInputPress = "[[DevilMayCry5.exe+07A9B5D8]+60]+98"

--VARS INPUT--
danteInputList = {}
table.insert(danteInputList, #danteInputList + 1, {"Trickster", 1})
table.insert(danteInputList, #danteInputList + 1, {"RoyalGuard", 2})
table.insert(danteInputList, #danteInputList + 1, {"GunSlinger", 4})
table.insert(danteInputList, #danteInputList + 1, {"SwordMaster", 8})
danteInputListValue = {}
for key,value in pairs(danteInputList) do
   table.insert(danteInputListValue, #danteInputListValue + 1, value[2])
end

--FUNCTIONS INPUT--
function IntToBin(n) --from pgimeno (http://love2d.org)
  local result = ''
  if n ~= nil then
    while n ~= 0 do
      if n % 2 == 0 then
        result = '0' .. result
      else
        result = '1' .. result
      end
      n = math.floor(n / 2)
    end
  end
  return result
end
function IsItemActive(testItem, listItem, number)
  stringBits = IntToBin(number)
  for i = 0, string.len(stringBits) - 1 do
     if stringBits:sub(string.len(stringBits) - i, string.len(stringBits) - i) == "1" then
        j = -1
        for key,value in pairs(listItem) do
           j = j + 1
           if j == i and value == testItem then
              return true
           end
        end
     end
  end
  return false
end
function InputWasPressed(input)
  return IsItemActive(input, danteInputListValue, inputPressed) == true and IsItemActive(input, danteInputListValue, oldInputPressed) == false
end
function InputIsPressed(input)
  return IsItemActive(input, danteInputListValue, inputPressed) == true
end

--GET DATA--
function getData()
  currentStyle = readInteger(addressStyleMode) --0 = ts, 1 = sm, 2 = gs, 3 = rg
  currentBalrogMode = readInteger(addressBalrogMode) --0 = fist, 1 = leg
  inputPressed = readInteger(addressInputPress) --0 = none, 1 = ts, 2 = rg, 4 = gs, 8 = sm, 32 = jump...
end
function IsDantePlayable()
  if (readInteger(addressStyleMode) == nil) then
     return false
  end

  return true
end

--[[
    ---------------------------------------BALROG PASSIVE SWITCH ENABLE CODE--------------------------------------------
--]]
[ENABLE]
--UPDATE MAIN--
updateBalrogSwitch = createThread(function(thread)
  while not thread.Terminated do
    --if is playing with dante
    if IsDantePlayable() then
      --read data--
      getData()

      --balrog switch--
      changeBalrogMode = false
      if InputWasPressed(1) and currentStyle == 0 and oldStyle == currentStyle then
        changeBalrogMode = true
      end
      if InputWasPressed(2) and currentStyle == 3 and oldStyle == currentStyle then
        changeBalrogMode = true
      end
      if InputWasPressed(4) and currentStyle == 2 and oldStyle == currentStyle then
        changeBalrogMode = true
      end
      if InputWasPressed(8) and currentStyle == 1 and oldStyle == currentStyle then
        changeBalrogMode = true
      end

      if changeBalrogMode then
        if currentBalrogMode == 0 then
          currentBalrogMode = 1
        elseif currentBalrogMode == 1 then
          currentBalrogMode = 0
        end
        writeInteger(addressBalrogMode, currentBalrogMode)
      end
      oldStyle = currentStyle

       --input update--
      oldInputPressed = inputPressed
    end
    sleep(10)
  end
end)

--[[
    --------------------------------------BALROG PASSIVE SWITCH DISABLE CODE--------------------------------------------
--]]
[DISABLE]
--TERMINATE UPDATES THREAD(S)--
if updateBalrogSwitch then
  updateBalrogSwitch.terminate()
  updateBalrogSwitch = nil
end
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>11071</ID>
                      <Description>"(Debug)"</Description>
                      <Options moHideChildren="1" moManualExpandCollapse="1"/>
                      <LastState Value="" RealAddress="00000000"/>
                      <GroupHeader>1</GroupHeader>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>12104</ID>
                          <Description>"Style Mode"</Description>
                          <VariableType>4 Bytes</VariableType>
                          <Address>"DevilMayCry5.exe"+07A75E48</Address>
                          <Offsets>
                            <Offset>188C</Offset>
                            <Offset>60</Offset>
                          </Offsets>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>12105</ID>
                          <Description>"Balrog Mode"</Description>
                          <VariableType>4 Bytes</VariableType>
                          <Address>"DevilMayCry5.exe"+07A75E48</Address>
                          <Offsets>
                            <Offset>18CC</Offset>
                            <Offset>60</Offset>
                          </Offsets>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>11075</ID>
                          <Description>"Input Press"</Description>
                          <VariableType>4 Bytes</VariableType>
                          <Address>"DevilMayCry5.exe"+07A9B5D8</Address>
                          <Offsets>
                            <Offset>98</Offset>
                            <Offset>60</Offset>
                          </Offsets>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>12111</ID>
                  <Description>"Balrog Passive Switch (V1.0 - Darkslayer Style) Balrog Selected Only"</Description>
                  <Options moHideChildren="1"/>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>//nino
{$lua}
--[[
    ---------------------------------------BALROG PASSIVE SWITCH INIT CODE--------------------------------------------
--]]
--VARS ADDRESS (POINTERS)--
addressStyleMode  = "[[DevilMayCry5.exe+07A75E48]+60]+188C"
addressBalrogMode = "[[DevilMayCry5.exe+07A75E48]+60]+18CC"
addressInputPress = "[[DevilMayCry5.exe+07A9B5D8]+60]+98"

--VARS INPUT--
danteInputList = {}
table.insert(danteInputList, #danteInputList + 1, {"Trickster", 1})
table.insert(danteInputList, #danteInputList + 1, {"RoyalGuard", 2})
table.insert(danteInputList, #danteInputList + 1, {"GunSlinger", 4})
table.insert(danteInputList, #danteInputList + 1, {"SwordMaster", 8})
danteInputListValue = {}
for key,value in pairs(danteInputList) do
   table.insert(danteInputListValue, #danteInputListValue + 1, value[2])
end

--FUNCTIONS INPUT--
function IntToBin(n) --from pgimeno (http://love2d.org)
  local result = ''
  if n ~= nil then
    while n ~= 0 do
      if n % 2 == 0 then
        result = '0' .. result
      else
        result = '1' .. result
      end
      n = math.floor(n / 2)
    end
  end
  return result
end
function IsItemActive(testItem, listItem, number)
  stringBits = IntToBin(number)
  for i = 0, string.len(stringBits) - 1 do
     if stringBits:sub(string.len(stringBits) - i, string.len(stringBits) - i) == "1" then
        j = -1
        for key,value in pairs(listItem) do
           j = j + 1
           if j == i and value == testItem then
              return true
           end
        end
     end
  end
  return false
end
function InputWasPressed(input)
  return IsItemActive(input, danteInputListValue, inputPressed) == true and IsItemActive(input, danteInputListValue, oldInputPressed) == false
end
function InputIsPressed(input)
  return IsItemActive(input, danteInputListValue, inputPressed) == true
end

--GET DATA--
function getData()
  currentStyle = readInteger(addressStyleMode) --0 = ts, 1 = sm, 2 = gs, 3 = rg
  currentBalrogMode = readInteger(addressBalrogMode) --0 = fist, 1 = leg
  inputPressed = readInteger(addressInputPress) --0 = none, 1 = ts, 2 = rg, 4 = gs, 8 = sm, 32 = jump...
  currentWeapon = readInteger("weaponid") --3 = Balrog
end
function IsDantePlayable()
  if (readInteger(addressStyleMode) == nil) then
     return false
  end

  return true
end

--[[
    ---------------------------------------BALROG PASSIVE SWITCH ENABLE CODE--------------------------------------------
--]]
[ENABLE]
--UPDATE MAIN--
updateBalrogSwitch = createThread(function(thread)
  while not thread.Terminated do
    --if is playing with dante
    if IsDantePlayable() then
      --read data--
      getData()

      --balrog switch--
      changeBalrogMode = false
      if InputWasPressed(1) and currentStyle == 0 and oldStyle == currentStyle and currentWeapon == 3 then
        changeBalrogMode = true
      end
      if InputWasPressed(2) and currentStyle == 3 and oldStyle == currentStyle and currentWeapon == 3 then
        changeBalrogMode = true
      end
      if InputWasPressed(4) and currentStyle == 2 and oldStyle == currentStyle and currentWeapon == 3 then
        changeBalrogMode = true
      end
      if InputWasPressed(8) and currentStyle == 1 and oldStyle == currentStyle and currentWeapon == 3 then
        changeBalrogMode = true
      end

      if changeBalrogMode then
        if currentBalrogMode == 0 then
          currentBalrogMode = 1
        elseif currentBalrogMode == 1 then
          currentBalrogMode = 0
        end
        writeInteger(addressBalrogMode, currentBalrogMode)
      end
      oldStyle = currentStyle

       --input update--
      oldInputPressed = inputPressed
    end
    sleep(10)
  end
end)

--[[
    --------------------------------------BALROG PASSIVE SWITCH DISABLE CODE--------------------------------------------
--]]
[DISABLE]
--TERMINATE UPDATES THREAD(S)--
if updateBalrogSwitch then
  updateBalrogSwitch.terminate()
  updateBalrogSwitch = nil
end
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>18424</ID>
                      <Description>"(Debug)"</Description>
                      <Options moHideChildren="1" moManualExpandCollapse="1"/>
                      <LastState Value="" RealAddress="00000000"/>
                      <GroupHeader>1</GroupHeader>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>18425</ID>
                          <Description>"Style Mode"</Description>
                          <VariableType>4 Bytes</VariableType>
                          <Address>"DevilMayCry5.exe"+07A75E48</Address>
                          <Offsets>
                            <Offset>188C</Offset>
                            <Offset>60</Offset>
                          </Offsets>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>18426</ID>
                          <Description>"Balrog Mode"</Description>
                          <VariableType>4 Bytes</VariableType>
                          <Address>"DevilMayCry5.exe"+07A75E48</Address>
                          <Offsets>
                            <Offset>18CC</Offset>
                            <Offset>60</Offset>
                          </Offsets>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>18427</ID>
                          <Description>"Input Press"</Description>
                          <VariableType>4 Bytes</VariableType>
                          <Address>"DevilMayCry5.exe"+07A9B5D8</Address>
                          <Offsets>
                            <Offset>98</Offset>
                            <Offset>60</Offset>
                          </Offsets>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>18428</ID>
                          <Description>"Weapon ID"</Description>
                          <VariableType>4 Bytes</VariableType>
                          <Address>weaponid</Address>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>11953</ID>
                  <Description>"Infinite Ignition"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : DevilMayCry5.exe
  Version: 
  Date   : 2019-08-25
  Author : Flarejune
}
[ENABLE]
//aobscanmodule(InfIgnition2,DevilMayCry5.exe,F2 0F 5C C8 66 0F 5A D1 F3 0F 11 97 68 03 00 00 48 8B 43 50 48 39 68 18 0F 85 17)
define(InfIgnition2,DevilMayCry5.exe+15462A4)
alloc(newmem1,$1000,InfIgnition2)
label(code1)
label(return1)
newmem1:

code1:
  //subsd xmm1,xmm0
  cvtpd2ps xmm2,xmm1
  jmp return1

InfIgnition2:
  jmp newmem1
  nop
  nop
  nop
return1:
registersymbol(InfIgnition2)

//aobscanmodule(InfIgnition2p2,DevilMayCry5.exe,65 8B 83 74 03 00 00) // should be unique
define(InfIgnition2p2,DevilMayCry5.exe+153B0C3)
alloc(newmem,$1000,InfIgnition2p2)
label(code)
label(return)

newmem:

code:
  mov eax,[rbx+00000378]
  mov [rbx+00000374],eax
  jmp return

InfIgnition2p2: //+01
  jmp newmem
  nop
return:
registersymbol(InfIgnition2p2)

[DISABLE]
InfIgnition2:
  db F2 0F 5C C8 66 0F 5A D1
unregistersymbol(InfIgnition2)
dealloc(newmem1)

InfIgnition2p2: //+01
  db 8B 83 74 03 00 00
unregistersymbol(InfIgnition2p2)
dealloc(newmem)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>18308</ID>
                  <Description>"Always Quad4SDT"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>//SSSiyan
//socks

[ENABLE]
aobscanmodule(q4sdt,DevilMayCry5.exe,0F 85 50 FF FF FF 48 8B 87 08 1A 00) // should be unique
//define(q4sdt,DevilMayCry5.exe+D159675)
q4sdt:
  db 90 90 90 90 90 90
registersymbol(q4sdt)

[DISABLE]
q4sdt:
  db 0F 85 50 FF FF FF
unregistersymbol(q4sdt)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>18309</ID>
                  <Description>"Inf Q4SDT Exit Window"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
//SSSiyan
//socks
//aobscanmodule(infq4sdt,DevilMayCry5.exe,75 2E F3 0F 5A C0 F2 0F 5C F8 66 0F 5A CF F3 0F 11 8B)
define(infq4sdt,DevilMayCry5.exe+B03546)
infq4sdt:
  db EB 2E F3 0F 5A C0
registersymbol(infq4sdt)

[DISABLE]
infq4sdt:
  db 75 2E F3 0F 5A C0
unregistersymbol(infq4sdt)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>18311</ID>
                  <Description>"Max SDT"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
//SSSiyan
//socks
aobscanmodule(maxsindt,DevilMayCry5.exe,F3 0F 10 8F 14 1A 00 00 BA 02 00 00 00) // should be unique
//define(maxsindt,DevilMayCry5.exe+D1B328C)
alloc(newmem,$1000,maxsindt)
label(code)
label(return)

newmem:
  mov [rdi+00001A14],(float)10000
code:
  movss xmm1,[rdi+00001A14]
  jmp return

maxsindt:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(maxsindt)

[DISABLE]
maxsindt:
  db F3 0F 10 8F 14 1A 00 00
unregistersymbol(maxsindt)
dealloc(newmem)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>18310</ID>
                  <Description>"Quick SDT"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : DevilMayCry5.exe
  Version: 
  Date   : 2019-09-20
  Author : SSSiyan
}

[ENABLE]
//aobscanmodule(quicksdt2,DevilMayCry5.exe,F3 0F 11 97 24 11 00 00 48 8B 43 50 4C)
define(quicksdt2,DevilMayCry5.exe+B04177)
alloc(newmem,$100,quicksdt2)
label(code)
label(return)
alloc(sdtfloatalloc,16)
registersymbol(sdtfloatalloc)
sdtfloatalloc:
label(sdtfloat)
sdtfloat:
dd (float)1.05

newmem:
  mulss xmm2,[sdtfloat]

code:
  movss [rdi+00001124],xmm2
  jmp return

quicksdt2:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(quicksdt2)

[DISABLE]
quicksdt2:
  db F3 0F 11 97 24 11 00 00
unregistersymbol(quicksdt2)
dealloc(newmem)

unregistersymbol(sdtfloatalloc)

{
// ORIGINAL CODE - INJECTION POINT: "DevilMayCry5.exe"+D1B2C87

"DevilMayCry5.exe"+D1B2C57: 48 85 C9                       -  test rcx,rcx
"DevilMayCry5.exe"+D1B2C5A: 0F 85 EA FE FF FF              -  jne DevilMayCry5.exe+D1B2B4A
"DevilMayCry5.exe"+D1B2C60: 48 85 C9                       -  test rcx,rcx
"DevilMayCry5.exe"+D1B2C63: 0F 85 E1 FE FF FF              -  jne DevilMayCry5.exe+D1B2B4A
"DevilMayCry5.exe"+D1B2C69: F3 0F 10 8F 24 11 00 00        -  movss xmm1,[rdi+00001124]
"DevilMayCry5.exe"+D1B2C71: F3 0F 10 87 28 01 00 00        -  movss xmm0,[rdi+00000128]
"DevilMayCry5.exe"+D1B2C79: 0F 5A C9                       -  cvtps2pd xmm1,xmm1
"DevilMayCry5.exe"+D1B2C7C: 0F 5A C0                       -  cvtps2pd xmm0,xmm0
"DevilMayCry5.exe"+D1B2C7F: F2 0F 58 C8                    -  addsd xmm1,xmm0
"DevilMayCry5.exe"+D1B2C83: 66 0F 5A D1                    -  cvtpd2ps xmm2,xmm1
// ---------- INJECTING HERE ----------
"DevilMayCry5.exe"+D1B2C87: F3 0F 11 97 24 11 00 00        -  movss [rdi+00001124],xmm2
// ---------- DONE INJECTING  ----------
"DevilMayCry5.exe"+D1B2C8F: 48 8B 43 50                    -  mov rax,[rbx+50]
"DevilMayCry5.exe"+D1B2C93: 4C 39 70 18                    -  cmp [rax+18],r14
"DevilMayCry5.exe"+D1B2C97: 0F 85 AD FE FF FF              -  jne DevilMayCry5.exe+D1B2B4A
"DevilMayCry5.exe"+D1B2C9D: 0F 5A C2                       -  cvtps2pd xmm0,xmm2
"DevilMayCry5.exe"+D1B2CA0: 48 85 F6                       -  test rsi,rsi
"DevilMayCry5.exe"+D1B2CA3: 0F 84 53 01 00 00              -  je DevilMayCry5.exe+D1B2DFC
"DevilMayCry5.exe"+D1B2CA9: F3 0F 10 5E 48                 -  movss xmm3,[rsi+48]
"DevilMayCry5.exe"+D1B2CAE: 66 0F 5A C0                    -  cvtpd2ps xmm0,xmm0
"DevilMayCry5.exe"+D1B2CB2: 0F 5A CB                       -  cvtps2pd xmm1,xmm3
"DevilMayCry5.exe"+D1B2CB5: 0F 5A D0                       -  cvtps2pd xmm2,xmm0
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>12308</ID>
                  <Description>"Always Get 2 Tricks"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
//SSSiyan
//socks
//aobscanmodule(twotrick,DevilMayCry5.exe,80 BE 98 00 00 00 00 0F 95 ?? 48 85 C9 75 9D 8B 4F 44 84)
define(twotrick,DevilMayCry5.exe+57497A)
twotrick:
  nop
  nop
  nop
  nop
  nop
  nop
  nop
registersymbol(twotrick)

[DISABLE]
twotrick:
  db 80 BE 98 00 00 00 00
unregistersymbol(twotrick)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>12296</ID>
                  <Description>"DT Summoned Swords [SDT On, DT Off]"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : DevilMayCry5.exe
  Version: 
  Date   : 2019-09-09
  Author : SSSiyan
}
[ENABLE]
//aobscanmodule(DTSumSwords,DevilMayCry5.exe,44 88 B6 98 00 00 00) // should be unique
define(DTSumSwords,DevilMayCry5.exe+17520FB)
alloc(newmem,$1000,DTSumSwords)
label(code)
label(return)

newmem:

code:
  //mov [rsi+00000098],r14l
  mov [rsi+00000098],1
  jmp return

DTSumSwords:
  jmp newmem
  nop
  nop
return:
registersymbol(DTSumSwords)

[DISABLE]
DTSumSwords:
  db 44 88 B6 98 00 00 00
unregistersymbol(DTSumSwords)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "DevilMayCry5.exe"+1473D0FB

"DevilMayCry5.exe"+1473D0D2: 89 AF 74 03 00 00              -  mov [rdi+00000374],ebp
"DevilMayCry5.exe"+1473D0D8: 48 8B 43 50                    -  mov rax,[rbx+50]
"DevilMayCry5.exe"+1473D0DC: 4C 39 70 18                    -  cmp [rax+18],r14
"DevilMayCry5.exe"+1473D0E0: 75 4F                          -  jne DevilMayCry5.exe+1473D131
"DevilMayCry5.exe"+1473D0E2: 89 AF 70 03 00 00              -  mov [rdi+00000370],ebp
"DevilMayCry5.exe"+1473D0E8: 48 8B 43 50                    -  mov rax,[rbx+50]
"DevilMayCry5.exe"+1473D0EC: 4C 39 70 18                    -  cmp [rax+18],r14
"DevilMayCry5.exe"+1473D0F0: 75 3F                          -  jne DevilMayCry5.exe+1473D131
"DevilMayCry5.exe"+1473D0F2: 83 BE 90 00 00 00 04           -  cmp dword ptr [rsi+00000090],04
"DevilMayCry5.exe"+1473D0F9: 75 11                          -  jne DevilMayCry5.exe+1473D10C
// ---------- INJECTING HERE ----------
"DevilMayCry5.exe"+1473D0FB: 44 88 B6 98 00 00 00           -  mov [rsi+00000098],r14l
// ---------- DONE INJECTING  ----------
"DevilMayCry5.exe"+1473D102: 48 8B 43 50                    -  mov rax,[rbx+50]
"DevilMayCry5.exe"+1473D106: 4C 39 70 18                    -  cmp [rax+18],r14
"DevilMayCry5.exe"+1473D10A: 75 25                          -  jne DevilMayCry5.exe+1473D131
"DevilMayCry5.exe"+1473D10C: 48 8D 54 24 20                 -  lea rdx,[rsp+20]
"DevilMayCry5.exe"+1473D111: 48 89 D9                       -  mov rcx,rbx
"DevilMayCry5.exe"+1473D114: E8 67 E6 BD EB                 -  call DevilMayCry5.exe+31B780
"DevilMayCry5.exe"+1473D119: 0F B6 D0                       -  movzx edx,al
"DevilMayCry5.exe"+1473D11C: 48 8B 43 50                    -  mov rax,[rbx+50]
"DevilMayCry5.exe"+1473D120: 48 8B 48 18                    -  mov rcx,[rax+18]
"DevilMayCry5.exe"+1473D124: 48 85 C9                       -  test rcx,rcx
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>18312</ID>
                  <Description>"Always Overtop"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : DevilMayCry5.exe
  Version: 
  Date   : 2019-08-19
  Author : SSSiyan
}
[ENABLE]
//aobscanmodule(bikeexceed,DevilMayCry5.exe,89 B7 40 03 00 00 48 89 ** 4C 8B 05) // should be unique
define(bikeexceed,DevilMayCry5.exe+A0F334)
alloc(newmem,$100,bikeexceed)
label(code)
label(return)

newmem:

code:
  mov [rdi+00000340],2
  jmp return

bikeexceed:
  jmp newmem
  nop
return:
registersymbol(bikeexceed)

//aobscanmodule(bikeexceed2,DevilMayCry5.exe,89 86 BC 00 00 00 4C) // should be unique
define(bikeexceed2,DevilMayCry5.exe+114BCFC)
alloc(newmem1,$100,bikeexceed2)
label(code1)
label(return1)
newmem1:

code1:
  //mov [rsi+000000BC],eax
  mov [rsi+000000BC],15
  jmp return1

bikeexceed2:
  jmp newmem1
  nop
return1:
registersymbol(bikeexceed2)

[DISABLE]
bikeexceed:
  db 89 B7 40 03 00 00
unregistersymbol(bikeexceed)
dealloc(newmem)

bikeexceed2:
  db 89 86 BC 00 00 00
unregistersymbol(bikeexceed2)
dealloc(newmem1)

{
TU4:
// ORIGINAL CODE - INJECTION POINT: "DevilMayCry5.exe"+CE23D24

"DevilMayCry5.exe"+CE23CFD: 48 83 79 18 00        -  cmp qword ptr [rcx+18],00
"DevilMayCry5.exe"+CE23D02: 0F 85 06 01 00 00     -  jne DevilMayCry5.exe+CE23E0E
"DevilMayCry5.exe"+CE23D08: 48 85 C0              -  test rax,rax
"DevilMayCry5.exe"+CE23D0B: 74 C0                 -  je DevilMayCry5.exe+CE23CCD
"DevilMayCry5.exe"+CE23D0D: 80 78 5F 00           -  cmp byte ptr [rax+5F],00
"DevilMayCry5.exe"+CE23D11: 0F 84 F7 00 00 00     -  je DevilMayCry5.exe+CE23E0E
"DevilMayCry5.exe"+CE23D17: 48 89 74 24 70        -  mov [rsp+70],rsi
"DevilMayCry5.exe"+CE23D1C: 45 31 C9              -  xor r9d,r9d
"DevilMayCry5.exe"+CE23D1F: 31 F6                 -  xor esi,esi
"DevilMayCry5.exe"+CE23D21: 48 89 FA              -  mov rdx,rdi
// ---------- INJECTING HERE ----------
"DevilMayCry5.exe"+CE23D24: 89 B7 40 03 00 00     -  mov [rdi+00000340],esi
// ---------- DONE INJECTING  ----------
"DevilMayCry5.exe"+CE23D2A: 48 89 D9              -  mov rcx,rbx
"DevilMayCry5.exe"+CE23D2D: 4C 8B 05 14 52 C7 FA  -  mov r8,[DevilMayCry5.exe+7A98F48]
"DevilMayCry5.exe"+CE23D34: E8 27 94 69 F3        -  call DevilMayCry5.exe+4BD160
"DevilMayCry5.exe"+CE23D39: 48 8B 43 50           -  mov rax,[rbx+50]
"DevilMayCry5.exe"+CE23D3D: 48 39 70 18           -  cmp [rax+18],rsi
"DevilMayCry5.exe"+CE23D41: 0F 85 C2 00 00 00     -  jne DevilMayCry5.exe+CE23E09
"DevilMayCry5.exe"+CE23D47: 4C 8B 05 02 52 C7 FA  -  mov r8,[DevilMayCry5.exe+7A98F50]
"DevilMayCry5.exe"+CE23D4E: 45 31 C9              -  xor r9d,r9d
"DevilMayCry5.exe"+CE23D51: 48 89 FA              -  mov rdx,rdi
"DevilMayCry5.exe"+CE23D54: 48 89 D9              -  mov rcx,rbx

NoDenuvo:
// ORIGINAL CODE - INJECTION POINT: "DevilMayCry5.exe"+9FE2A4

"DevilMayCry5.exe"+9FE27D: 48 83 79 18 00        -  cmp qword ptr [rcx+18],00
"DevilMayCry5.exe"+9FE282: 0F 85 06 01 00 00     -  jne DevilMayCry5.exe+9FE38E
"DevilMayCry5.exe"+9FE288: 48 85 C0              -  test rax,rax
"DevilMayCry5.exe"+9FE28B: 74 C0                 -  je DevilMayCry5.exe+9FE24D
"DevilMayCry5.exe"+9FE28D: 80 78 5F 00           -  cmp byte ptr [rax+5F],00
"DevilMayCry5.exe"+9FE291: 0F 84 F7 00 00 00     -  je DevilMayCry5.exe+9FE38E
"DevilMayCry5.exe"+9FE297: 48 89 74 24 70        -  mov [rsp+70],rsi
"DevilMayCry5.exe"+9FE29C: 45 33 C9              -  xor r9d,r9d
"DevilMayCry5.exe"+9FE29F: 33 F6                 -  xor esi,esi
"DevilMayCry5.exe"+9FE2A1: 48 8B D7              -  mov rdx,rdi
// ---------- INJECTING HERE ----------
"DevilMayCry5.exe"+9FE2A4: 89 B7 40 03 00 00     -  mov [rdi+00000340],esi
// ---------- DONE INJECTING  ----------
"DevilMayCry5.exe"+9FE2AA: 48 8B CB              -  mov rcx,rbx
"DevilMayCry5.exe"+9FE2AD: 4C 8B 05 B4 4C 06 07  -  mov r8,[DevilMayCry5.exe+7A62F68]
"DevilMayCry5.exe"+9FE2B4: E8 C7 E8 C0 FF        -  call DevilMayCry5.exe+60CB80
"DevilMayCry5.exe"+9FE2B9: 48 8B 43 50           -  mov rax,[rbx+50]
"DevilMayCry5.exe"+9FE2BD: 48 39 70 18           -  cmp [rax+18],rsi
"DevilMayCry5.exe"+9FE2C1: 0F 85 C2 00 00 00     -  jne DevilMayCry5.exe+9FE389
"DevilMayCry5.exe"+9FE2C7: 4C 8B 05 A2 4C 06 07  -  mov r8,[DevilMayCry5.exe+7A62F70]
"DevilMayCry5.exe"+9FE2CE: 45 33 C9              -  xor r9d,r9d
"DevilMayCry5.exe"+9FE2D1: 48 8B D7              -  mov rdx,rdi
"DevilMayCry5.exe"+9FE2D4: 48 8B CB              -  mov rcx,rbx

Bike Exceed 2:
TU4:
// ORIGINAL CODE - INJECTION POINT: "DevilMayCry5.exe"+F40B38C

"DevilMayCry5.exe"+F40B365: 0F 85 AF 00 00 00     -  jne DevilMayCry5.exe+F40B41A
"DevilMayCry5.exe"+F40B36B: 85 C9                 -  test ecx,ecx
"DevilMayCry5.exe"+F40B36D: 74 A1                 -  je DevilMayCry5.exe+F40B310
"DevilMayCry5.exe"+F40B36F: 48 8B 50 18           -  mov rdx,[rax+18]
"DevilMayCry5.exe"+F40B373: 48 8B 4E 78           -  mov rcx,[rsi+78]
"DevilMayCry5.exe"+F40B377: 48 85 D2              -  test rdx,rdx
"DevilMayCry5.exe"+F40B37A: 0F 85 9E 00 00 00     -  jne DevilMayCry5.exe+F40B41E
"DevilMayCry5.exe"+F40B380: 8B 86 BC 00 00 00     -  mov eax,[rsi+000000BC]
"DevilMayCry5.exe"+F40B386: 4C 8B 46 70           -  mov r8,[rsi+70]
"DevilMayCry5.exe"+F40B38A: FF C0                 -  inc eax
// ---------- INJECTING HERE ----------
"DevilMayCry5.exe"+F40B38C: 89 86 BC 00 00 00     -  mov [rsi+000000BC],eax
// ---------- DONE INJECTING  ----------
"DevilMayCry5.exe"+F40B392: 4C 8B 4B 50           -  mov r9,[rbx+50]
"DevilMayCry5.exe"+F40B396: 49 8B 51 18           -  mov rdx,[r9+18]
"DevilMayCry5.exe"+F40B39A: 48 85 D2              -  test rdx,rdx
"DevilMayCry5.exe"+F40B39D: 74 06                 -  je DevilMayCry5.exe+F40B3A5
"DevilMayCry5.exe"+F40B39F: 49 89 79 18           -  mov [r9+18],rdi
"DevilMayCry5.exe"+F40B3A3: EB 7D                 -  jmp DevilMayCry5.exe+F40B422
"DevilMayCry5.exe"+F40B3A5: 4D 85 C0              -  test r8,r8
"DevilMayCry5.exe"+F40B3A8: 75 14                 -  jne DevilMayCry5.exe+F40B3BE
"DevilMayCry5.exe"+F40B3AA: 45 31 C0              -  xor r8d,r8d
"DevilMayCry5.exe"+F40B3AD: 48 89 D9              -  mov rcx,rbx

NoDenuvo:
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>125</ID>
                  <Description>"Variable RG Meter"</Description>
                  <Options moHideChildren="1"/>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
//SSSiyan
//socks
//aobscanmodule(lilrgd,DevilMayCry5.exe,F3 0F 10 5A 28 0F 57)
define(lilrgd,DevilMayCry5.exe+6B47C9)
alloc(newmem,$1000,lilrgd)
alloc(rgvar,8)
registersymbol(rgv)
label(rgv)

rgvar:
rgv:
dd (float)3000

label(code)
label(return)

registersymbol(lilrgd)

newmem:

code:
  movss xmm1,[rgv]
  movss [rdx+28], xmm1
  movss xmm3,[rdx+28]
  jmp return

lilrgd:
  jmp newmem
return:

[DISABLE]
lilrgd:
  db F3 0F 10 5A 28
unregistersymbol(lilrgd)
dealloc(newmem)
dealloc(rgvar)
unregistersymbol(rgv)
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>126</ID>
                      <Description>"Minimum RG / 30k"</Description>
                      <VariableType>Float</VariableType>
                      <Address>rgv</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>10014</ID>
                  <Description>"Instant Red Hot Night"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>//by endneo
//for Millz
//Special thanks: SSSiyan

//ZL
[ENABLE]
//aobscanmodule(instantRHN,DevilMayCry5.exe,8B 40 1C 0F 57 C0 48 ?? ?? F2 48 0F ?? ?? 66 0F 5A C8 0F 5A F1)
define(instantRHN,DevilMayCry5.exe+1C3E9D7)
instantRHN:
  db 90 90 90
registersymbol(instantRHN)

[DISABLE]
instantRHN:
  db 8B 40 1C
unregistersymbol(instantRHN)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>11306</ID>
                  <Description>"Inf Summoned Swords"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : DevilMayCry5.exe
  Version: 
  Date   : 2019-08-20
  Author : SSSiyan
}
[ENABLE]
//aobscanmodule(infsumswords,DevilMayCry5.exe,F3 0F 11 52 5C 48) // should be unique
define(infsumswords,DevilMayCry5.exe+E02E23)
alloc(newmem,$1000,infsumswords)
label(code)
label(return)

newmem:

code:
  //movss [rdx+5C],xmm2
  mov [rdx+5C],(float)1790
  jmp return

infsumswords:
  jmp newmem
return:
registersymbol(infsumswords)

[DISABLE]
infsumswords:
  db F3 0F 11 52 5C
unregistersymbol(infsumswords)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "DevilMayCry5.exe"+DFB93A3

"DevilMayCry5.exe"+DFB9379: 83 F8 02              -  cmp eax,02
"DevilMayCry5.exe"+DFB937C: 0F 85 CF 00 00 00     -  jne DevilMayCry5.exe+DFB9451
"DevilMayCry5.exe"+DFB9382: 80 7A 14 00           -  cmp byte ptr [rdx+14],00
"DevilMayCry5.exe"+DFB9386: 0F 85 C5 00 00 00     -  jne DevilMayCry5.exe+DFB9451
"DevilMayCry5.exe"+DFB938C: F3 0F 10 4A 5C        -  movss xmm1,[rdx+5C]
"DevilMayCry5.exe"+DFB9391: 0F 57 C0              -  xorps xmm0,xmm0
"DevilMayCry5.exe"+DFB9394: 0F 5A C9              -  vcvtps2pd xmm1,xmm1
"DevilMayCry5.exe"+DFB9397: F3 0F 5A C6           -  cvtss2sd xmm0,xmm6
"DevilMayCry5.exe"+DFB939B: F2 0F 58 C8           -  addsd xmm1,xmm0
"DevilMayCry5.exe"+DFB939F: 66 0F 5A D1           -  cvtpd2ps xmm2,xmm1
// ---------- INJECTING HERE ----------
"DevilMayCry5.exe"+DFB93A3: F3 0F 11 52 5C        -  movss [rdx+5C],xmm2
// ---------- DONE INJECTING  ----------
"DevilMayCry5.exe"+DFB93A8: 48 83 79 18 00        -  cmp qword ptr [rcx+18],00
"DevilMayCry5.exe"+DFB93AD: 0F 85 9E 00 00 00     -  jne DevilMayCry5.exe+DFB9451
"DevilMayCry5.exe"+DFB93B3: 44 8B 42 58           -  mov r8d,[rdx+58]
"DevilMayCry5.exe"+DFB93B7: 31 F6                 -  xor esi,esi
"DevilMayCry5.exe"+DFB93B9: 8B 4A 18              -  mov ecx,[rdx+18]
"DevilMayCry5.exe"+DFB93BC: 44 89 C0              -  mov eax,r8d
"DevilMayCry5.exe"+DFB93BF: 41 39 C8              -  cmp r8d,ecx
"DevilMayCry5.exe"+DFB93C2: 0F 4E C6              -  cmovle eax,esi
"DevilMayCry5.exe"+DFB93C5: 85 C0                 -  test eax,eax
"DevilMayCry5.exe"+DFB93C7: 7E 63                 -  jle DevilMayCry5.exe+DFB942C
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>32</ID>
                  <Description>"Inf Sky Stars"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
//flarejune
//socks
//aobscanmodule(infskystar,DevilMayCry5.exe,FF 40 40 48 8B 74 24 70 0F 28 7C 24 50 48 83 C4 78)
define(infskystar,DevilMayCry5.exe+22E680B)
infskystar:
  db 90 90 90 48 8B 74 24 70
registersymbol(infskystar)

[DISABLE]
infskystar:
  db FF 40 40 48 8B 74 24 70
unregistersymbol(infskystar)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>10015</ID>
                  <Description>"SDT Only Cancels"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>//SSSiyan
//socks
[ENABLE]
//aobscanmodule(SDTcancelonly,DevilMayCry5.exe,0F 84 EB 00 00 00 48 85 C9 0F 85 8C)
define(SDTcancelonly,DevilMayCry5.exe+1752092)
SDTcancelonly:
  db 90 90 90 90 90 90
registersymbol(SDTcancelonly)

[DISABLE]
SDTcancelonly:
  db 0F 84 EB 00 00 00
unregistersymbol(SDTcancelonly)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>36</ID>
                  <Description>"Inf SDT Duration"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : DevilMayCry5.exe
  Version:
  Date   : 2019-03-10
  Author : Jessie Kazama
}
[ENABLE]
//aobscanmodule(infsdtd,DevilMayCry5.exe,F3 0F 11 A3 14 1A 00 00)
define(infsdtd,DevilMayCry5.exe+B03645)
registersymbol(infsdtd)
infsdtd:
  db 90 90 90 90 90 90 90 90

[DISABLE]
infsdtd:
  db F3 0F 11 A3 14 1A 00 00
unregistersymbol(infsdtd)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>10192</ID>
                  <Description>"Guard Flying WIP"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>//socks
//SSSiyan
[ENABLE]
//aobscanmodule(guardfly,DevilMayCry5.exe,0F 83 81 00 00 00 F3 0F 10 4B)
define(guardfly,DevilMayCry5.exe+5925D8)
guardfly:
db 0F 85
return:
registersymbol(guardfly)

[DISABLE]
guardfly:
  db 0F 83
unregistersymbol(guardfly)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>18313</ID>
                  <Description>"No DT Cooldown"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : DevilMayCry5.exe
  Version: 
  Date   : 2019-09-07
  Author : SSSiyan
}

[ENABLE]
//aobscanmodule(somedtcooldown,DevilMayCry5.exe,89 87 1C 11 00 00 48 8B 43 50 48 8B) // should be unique
define(somedtcooldown,DevilMayCry5.exe+B065F3)
alloc(newmem,$100,somedtcooldown)
label(code)
label(return)

newmem:

code:
  //mov [rdi+0000111C],eax
  mov [rdi+0000111C],(float)0
  jmp return

somedtcooldown:
  jmp newmem
  nop
return:
registersymbol(somedtcooldown)

[DISABLE]
somedtcooldown:
  db 89 87 1C 11 00 00
unregistersymbol(somedtcooldown)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "DevilMayCry5.exe"+D1B6763

"DevilMayCry5.exe"+D1B6739: 45 31 C9                 -  xor r9d,r9d
"DevilMayCry5.exe"+D1B673C: 48 89 FA                 -  mov rdx,rdi
"DevilMayCry5.exe"+D1B673F: 48 89 D9                 -  mov rcx,rbx
"DevilMayCry5.exe"+D1B6742: E8 19 60 30 F3           -  call DevilMayCry5.exe+4BC760
"DevilMayCry5.exe"+D1B6747: 48 8B 43 50              -  mov rax,[rbx+50]
"DevilMayCry5.exe"+D1B674B: 48 83 78 18 00           -  cmp qword ptr [rax+18],00
"DevilMayCry5.exe"+D1B6750: 0F 85 4D FD FF FF        -  jne DevilMayCry5.exe+D1B64A3
"DevilMayCry5.exe"+D1B6756: 4D 85 F6                 -  test r14,r14
"DevilMayCry5.exe"+D1B6759: 0F 84 33 09 00 00        -  je DevilMayCry5.exe+D1B7092
"DevilMayCry5.exe"+D1B675F: 41 8B 46 40              -  mov eax,[r14+40]
// ---------- INJECTING HERE ----------
"DevilMayCry5.exe"+D1B6763: 89 87 1C 11 00 00        -  mov [rdi+0000111C],eax
// ---------- DONE INJECTING  ----------
"DevilMayCry5.exe"+D1B6769: 48 8B 43 50              -  mov rax,[rbx+50]
"DevilMayCry5.exe"+D1B676D: 48 8B 48 18              -  mov rcx,[rax+18]
"DevilMayCry5.exe"+D1B6771: 48 85 C9                 -  test rcx,rcx
"DevilMayCry5.exe"+D1B6774: 0F 85 29 FD FF FF        -  jne DevilMayCry5.exe+D1B64A3
"DevilMayCry5.exe"+D1B677A: 0F B6 87 38 14 00 00     -  movzx eax,byte ptr [rdi+00001438]
"DevilMayCry5.exe"+D1B6781: C0 E8 04                 -  shr al,04
"DevilMayCry5.exe"+D1B6784: 44 20 F8                 -  and al,r15l
"DevilMayCry5.exe"+D1B6787: 0F 84 D7 07 00 00        -  je DevilMayCry5.exe+D1B6F64
"DevilMayCry5.exe"+D1B678D: 48 83 8F 40 14 00 00 10  -  or qword ptr [rdi+00001440],10
"DevilMayCry5.exe"+D1B6795: E9 B9 07 00 00           -  jmp DevilMayCry5.exe+D1B6F53
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>12045</ID>
                  <Description>"Magic Hat Stays Out"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : DevilMayCry5.exe
  Version:
  Date   : 2019-08-18
  Author : endneo/SSSiyan
}
[ENABLE]
//aobscanmodule(hatstaysout1,DevilMayCry5.exe,48 89 46 10 48 8B 47 50 48 8B 6C 24 38 48 83 78 18 00 0F) // should be unique
define(hatstaysout1,DevilMayCry5.exe+18680FE)
hatstaysout1:
  nop
  nop
  nop
  nop
registersymbol(hatstaysout1)

//aobscanmodule(hatstaysout2,DevilMayCry5.exe,48 83 78 18 00 0F 85 D2 02 00 00 C7) // should be unique
define(hatstaysout2,DevilMayCry5.exe+BBCF23)
alloc(newmem,$1000,hatstaysout2)
hatstaysout2:
  nop
  nop
  nop
  nop
  nop
registersymbol(hatstaysout2)

[DISABLE]
hatstaysout1:
  db 48 89 46 10 48 8B 47 50
unregistersymbol(hatstaysout1)
dealloc(newmem)

hatstaysout2:
  db 48 83 78 18 00
unregistersymbol(hatstaysout2)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>12108</ID>
                  <Description>"Never Hide Guns/Weapons HUD"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : DevilMayCry5.exe
  Version: 
  Date   : 2019-08-30
  Author : SSSiyan
}
[ENABLE]
//aobscanmodule(donthideweaponandgun,DevilMayCry5.exe,F3 0F 11 4F 40 77)
define(donthideweaponandgun,DevilMayCry5.exe+10DDF79)
donthideweaponandgun:
  nop
  nop
  nop
  nop
  nop
registersymbol(donthideweaponandgun)

[DISABLE]
donthideweaponandgun:
  db F3 0F 11 4F 40
unregistersymbol(donthideweaponandgun)

{
// ORIGINAL CODE - INJECTION POINT: "DevilMayCry5.exe"+F26AB59

"DevilMayCry5.exe"+F26AB30: 48 8B 05 69 4E 80 F8     -  mov rax,[DevilMayCry5.exe+7A6F9A0]
"DevilMayCry5.exe"+F26AB37: 0F 5A C9                 -  cvtps2pd xmm1,xmm1
"DevilMayCry5.exe"+F26AB3A: 4C 39 61 18              -  cmp [rcx+18],r12
"DevilMayCry5.exe"+F26AB3E: 75 BE                    -  jne DevilMayCry5.exe+F26AAFE
"DevilMayCry5.exe"+F26AB40: F3 0F 10 80 8C 03 00 00  -  movss xmm0,[rax+0000038C]
"DevilMayCry5.exe"+F26AB48: 0F 5A C0                 -  cvtps2pd xmm0,xmm0
"DevilMayCry5.exe"+F26AB4B: F2 0F 5C C8              -  subsd xmm1,xmm0
"DevilMayCry5.exe"+F26AB4F: 0F 57 C0                 -  xorps xmm0,xmm0
"DevilMayCry5.exe"+F26AB52: 66 0F 5A C9              -  cvtpd2ps xmm1,xmm1
"DevilMayCry5.exe"+F26AB56: 0F 2F C8                 -  comiss xmm1,xmm0
// ---------- INJECTING HERE ----------
"DevilMayCry5.exe"+F26AB59: F3 0F 11 4F 40           -  movss [rdi+40],xmm1
// ---------- DONE INJECTING  ----------
"DevilMayCry5.exe"+F26AB5E: 77 9E                    -  ja DevilMayCry5.exe+F26AAFE
"DevilMayCry5.exe"+F26AB60: 48 8B 4F 10              -  mov rcx,[rdi+10]
"DevilMayCry5.exe"+F26AB64: C7 47 28 03 00 00 00     -  mov [rdi+28],00000003
"DevilMayCry5.exe"+F26AB6B: 48 85 C9                 -  test rcx,rcx
"DevilMayCry5.exe"+F26AB6E: 74 8E                    -  je DevilMayCry5.exe+F26AAFE
"DevilMayCry5.exe"+F26AB70: 48 8B 05 F1 22 84 F8     -  mov rax,[DevilMayCry5.exe+7AACE68]
"DevilMayCry5.exe"+F26AB77: 48 8B 90 90 E1 00 00     -  mov rdx,[rax+0000E190]
"DevilMayCry5.exe"+F26AB7E: 48 85 D2                 -  test rdx,rdx
"DevilMayCry5.exe"+F26AB81: 75 14                    -  jne DevilMayCry5.exe+F26AB97
"DevilMayCry5.exe"+F26AB83: 45 31 C0                 -  xor r8d,r8d
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>12949</ID>
                  <Description>"No DT Stinger also don't SDT"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : DevilMayCry5.exe
  Version: 
  Date   : 2019-10-26
  Author : SSSiyan
}

[ENABLE]
//aobscanmodule(NoDtStinger,DevilMayCry5.exe,3B 88 B0 09 00 00 0F 94 D1) // should be unique
define(NoDtStinger,DevilMayCry5.exe+1BF4115)
alloc(newmem,$1000,NoDtStinger)
label(code)
label(return)

newmem:

code:
  //cmp ecx,[rax+000009B0]
  jmp return

NoDtStinger:
  jmp newmem
  nop
return:
registersymbol(NoDtStinger)

[DISABLE]
NoDtStinger:
  db 3B 88 B0 09 00 00
unregistersymbol(NoDtStinger)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "DevilMayCry5.exe"+15E20945

"DevilMayCry5.exe"+15E20928: 30 C9                    -  xor cl,cl
"DevilMayCry5.exe"+15E2092A: 48 8B 47 50              -  mov rax,[rdi+50]
"DevilMayCry5.exe"+15E2092E: 48 83 78 18 00           -  cmp qword ptr [rax+18],00
"DevilMayCry5.exe"+15E20933: 75 A6                    -  jne DevilMayCry5.exe+15E208DB
"DevilMayCry5.exe"+15E20935: 48 8B 5C 24 30           -  mov rbx,[rsp+30]
"DevilMayCry5.exe"+15E2093A: 84 C9                    -  test cl,cl
"DevilMayCry5.exe"+15E2093C: 0F 95 D0                 -  setne al
"DevilMayCry5.exe"+15E2093F: 48 83 C4 20              -  add rsp,20
"DevilMayCry5.exe"+15E20943: 5F                       -  pop rdi
"DevilMayCry5.exe"+15E20944: C3                       -  ret 
// ---------- INJECTING HERE ----------
"DevilMayCry5.exe"+15E20945: 3B 88 B0 09 00 00        -  cmp ecx,[rax+000009B0]
// ---------- DONE INJECTING  ----------
"DevilMayCry5.exe"+15E2094B: 0F 94 D1                 -  sete cl
"DevilMayCry5.exe"+15E2094E: EB DA                    -  jmp DevilMayCry5.exe+15E2092A
"DevilMayCry5.exe"+15E20950: 83 F8 01                 -  cmp eax,01
"DevilMayCry5.exe"+15E20953: 75 D3                    -  jne DevilMayCry5.exe+15E20928
"DevilMayCry5.exe"+15E20955: 48 8B 43 40              -  mov rax,[rbx+40]
"DevilMayCry5.exe"+15E20959: 8B 4B 48                 -  mov ecx,[rbx+48]
"DevilMayCry5.exe"+15E2095C: 48 85 C0                 -  test rax,rax
"DevilMayCry5.exe"+15E2095F: 74 B8                    -  je DevilMayCry5.exe+15E20919
"DevilMayCry5.exe"+15E20961: 3B 88 B0 09 00 00        -  cmp ecx,[rax+000009B0]
"DevilMayCry5.exe"+15E20967: 0F 95 D1                 -  setne cl
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>12950</ID>
                  <Description>"A few SDT moves outside of DT (buggy, only works when grounded)"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : DevilMayCry5.exe
  Version: 
  Date   : 2019-10-26
  Author : sssiy

  This script does blah blah blah
}

[ENABLE]
//aobscanmodule(SDTthings,DevilMayCry5.exe,83 BB B0 09 00 00 02 75) // should be unique
define(SDTthings,DevilMayCry5.exe+B3EFC8)
alloc(newmem,$1000,SDTthings)
label(code)
label(return)

newmem:

code:
  //cmp dword ptr [rbx+000009B0],02
  jmp return

SDTthings:
  jmp newmem
  nop
  nop
return:
registersymbol(SDTthings)

[DISABLE]
SDTthings:
  db 83 BB B0 09 00 00 02
unregistersymbol(SDTthings)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "DevilMayCry5.exe"+D2433C8

"DevilMayCry5.exe"+D24339D: 0F 85 DF 02 00 00     -  jne DevilMayCry5.exe+D243682
"DevilMayCry5.exe"+D2433A3: 48 89 DA              -  mov rdx,rbx
"DevilMayCry5.exe"+D2433A6: 48 89 F9              -  mov rcx,rdi
"DevilMayCry5.exe"+D2433A9: E8 32 20 8E F3        -  call DevilMayCry5.exe+B253E0
"DevilMayCry5.exe"+D2433AE: 0F B6 C8              -  movzx ecx,al
"DevilMayCry5.exe"+D2433B1: 48 8B 47 50           -  mov rax,[rdi+50]
"DevilMayCry5.exe"+D2433B5: 48 83 78 18 00        -  cmp qword ptr [rax+18],00
"DevilMayCry5.exe"+D2433BA: 0F 85 6C FB FF FF     -  jne DevilMayCry5.exe+D242F2C
"DevilMayCry5.exe"+D2433C0: 85 C9                 -  test ecx,ecx
"DevilMayCry5.exe"+D2433C2: 0F 85 BA 02 00 00     -  jne DevilMayCry5.exe+D243682
// ---------- INJECTING HERE ----------
"DevilMayCry5.exe"+D2433C8: 83 BB B0 09 00 00 02  -  cmp dword ptr [rbx+000009B0],02
// ---------- DONE INJECTING  ----------
"DevilMayCry5.exe"+D2433CF: 75 60                 -  jne DevilMayCry5.exe+D243431
"DevilMayCry5.exe"+D2433D1: 48 8B 03              -  mov rax,[rbx]
"DevilMayCry5.exe"+D2433D4: 48 89 DA              -  mov rdx,rbx
"DevilMayCry5.exe"+D2433D7: 48 8B 48 F0           -  mov rcx,[rax-10]
"DevilMayCry5.exe"+D2433DB: 48 8B 81 B0 0A 00 00  -  mov rax,[rcx+00000AB0]
"DevilMayCry5.exe"+D2433E2: 48 89 F9              -  mov rcx,rdi
"DevilMayCry5.exe"+D2433E5: FF D0                 -  call rax
"DevilMayCry5.exe"+D2433E7: 0F B6 C8              -  movzx ecx,al
"DevilMayCry5.exe"+D2433EA: 48 8B 47 50           -  mov rax,[rdi+50]
"DevilMayCry5.exe"+D2433EE: 48 83 78 18 00        -  cmp qword ptr [rax+18],00
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>12310</ID>
                  <Description>"No Target Switch"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : DevilMayCry5.exe
  Version: 
  Date   : 2019-06-14
  Author : SSSiyan
}

[ENABLE]
{$lua}
getAddressList().getMemoryRecordByDescription("Moving Target Switch").active=false
--getAddressList().getMemoryRecordByDescription("No Target Switch").active=false
{$asm}
//aobscanmodule(MovingTargetSwitch,DevilMayCry5.exe,0F 83 B0 01 00 00 48 83)
define(MovingTargetSwitch,DevilMayCry5.exe+7DDC6F)
registersymbol(MovingTargetSwitch)
MovingTargetSwitch:
jmp DevilMayCry5.exe+7DDE25

[DISABLE]
MovingTargetSwitch:
jae DevilMayCry5.exe+7DDE25
unregistersymbol(MovingTargetSwitch)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>18515</ID>
                  <Description>"Faster Million Stab Startup"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : DevilMayCry5.exe
  Version: 
  Date   : 2019-08-12
  Author : SSSiyan
}
[ENABLE]
define(playerspeedmult,DevilMayCry5.exe+1F60B44)
alloc(newmem,$1000,playerspeedmult)
registersymbol(playerspeedmult)
label(code)
label(mscheck)
label(speedup)
label(return)
alloc(playerspeed,$1000)
registersymbol(plspeed)
label(plspeed)
playerspeed:
plspeed:
dd (float)2.5

newmem:
cmp byte ptr [rcx-40],'play'
je mscheck
jmp code

mscheck:
cmp [moveid],00DC00C8 //million stab start reb
je speedup
cmp [moveid],00D200FA //million stab start sparda
je speedup
cmp [moveid],00DC00F0 //million stab start dsd
je speedup
jmp code

speedup:
mulss xmm0,[plspeed]

code:
  movss [rcx+4C],xmm0
  jmp return

playerspeedmult:
  jmp newmem
return:

[DISABLE]
playerspeedmult:
  db F3 0F 11 41 4C
unregistersymbol(playerspeedmult)
dealloc(newmem)

dealloc(playerspeed)
unregistersymbol(plspeed)
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>18319</ID>
              <Description>"V Specific"</Description>
              <Options moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
[DISABLE]
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>9958</ID>
                  <Description>"Inf Summon Powerup Duration"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript Async="1">{ Game   : DevilMayCry5.exe
  Version:
  Date   : 2019-03-10
  Author : Jessie Kazama
}
[ENABLE]
//aobscanmodule(infspud,DevilMayCry5.exe,F3 0F 11 87 6C 01 00 00 48 8B 43)
define(infspud,DevilMayCry5.exe+179A305)
registersymbol(infspud)
infspud:
  db 90 90 90 90 90 90 90 90
[DISABLE]
infspud:
  db F3 0F 11 87 6C 01 00 00
unregistersymbol(infspud)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>9959</ID>
                  <Description>"Inf Summon Vitality"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript Async="1">{ Game   : DevilMayCry5.exe
  Version:
  Date   : 2019-03-10
  Author : Jessie Kazama
}
[ENABLE]
//aobscanmodule(infsvv,DevilMayCry5.exe,34 F3 0F 10 48 14 F3 0F 10 40 10)
define(infsvv,DevilMayCry5.exe+1F770F7)
alloc(newmem,$1000,infsvv)
label(code)
label(return)
registersymbol(infsvv)

newmem:
  fld [rax+14]
  fstp [rax+10]

code:
  movss xmm0,[rax+10]
  jmp return

infsvv: //+06
  jmp newmem
return:

[DISABLE]
infsvv: //+06
  db F3 0F 10 40 10
unregistersymbol(infsvv)
dealloc(newmem)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>10172</ID>
                  <Description>"Infinite Empowered Cane"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript Async="1">{ Game   : DevilMayCry5.exe
  Version: 
  Date   : 2019-08-09
  Author : SSSiyan
}
[ENABLE]
//aobscanmodule(bettercane,DevilMayCry5.exe,77 5B 89 53 20)
define(bettercane,DevilMayCry5.exe+F74715)
bettercane:
  jmp DevilMayCry5.exe+F74772
  mov [rbx+20],edx
registersymbol(bettercane)

[DISABLE]
bettercane:
  db 77 5B 89 53 20
unregistersymbol(bettercane)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>10176</ID>
                  <Description>"No DT Cooldown"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript Async="1">{ Game   : DevilMayCry5.exe
  Version: 
  Date   : 2019-08-09
  Author : SSSiyan
}
[ENABLE]
//aobscanmodule(quickDTsummon,DevilMayCry5.exe,0F 87 A6 00 00 00 48 8B 15)
define(quickDTsummon,DevilMayCry5.exe+1736EC1)
label(return)

quickDTsummon:
  nop
  nop
  nop
  nop
  nop
  nop
return:
registersymbol(quickDTsummon)

[DISABLE]
quickDTsummon:
  db 0F 87 A6 00 00 00
unregistersymbol(quickDTsummon)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>10184</ID>
                  <Description>"Inf Gambits"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript Async="1">{ Game   : DevilMayCry5.exe
  Version: 
  Date   : 2019-08-09
  Author : SSSiyan
}
[ENABLE]
//aobscanmodule(infgambits,DevilMayCry5.exe,FF 87 20 18 00 00 48)
define(infgambits,DevilMayCry5.exe+126D05A)
infgambits:
  nop
  nop
  nop
  nop
  nop
  nop
return:
registersymbol(infgambits)

[DISABLE]
infgambits:
  db FF 87 20 18 00 00
unregistersymbol(infgambits)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>11180</ID>
                  <Description>"Faster Charges"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript Async="1">{ Game   : DevilMayCry5.exe
  Version: 
  Date   : 2019-08-14
  Author : SSSiyan
}
[ENABLE]
//aobscanmodule(catcharge,DevilMayCry5.exe,44 89 42 5C 48 8B 41 50)
define(catcharge,DevilMayCry5.exe+E04478)
alloc(newmem,$1000,catcharge)
label(code)
label(return)
label(fastchargecat)
label(fastchargebird)
label(originalcode)

newmem:
cmp [rdx+48],1
je fastchargecat
cmp [rdx+48],2
je fastchargebird
jmp code

fastchargecat:
mov [rdx+5C],(float)50 //0 is default
mov rax,[rcx+50]
jmp originalcode

fastchargebird:
mov [rdx+5C],(float)50 //0 is default
mov rax,[rcx+50]
jmp originalcode

code:
  mov [rdx+5C],r8d

originalcode:
  mov rax,[rcx+50]
  jmp return

catcharge:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(catcharge)

[DISABLE]
catcharge:
  db 44 89 42 5C 48 8B 41 50
unregistersymbol(catcharge)
dealloc(newmem)
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>12283</ID>
                      <Description>"Unsummon Pets With Dpad [WIP]"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{ Game   : DevilMayCry5.exe
  Version:
  Date   : 2019-09-08
  Author : SSSiyan/endneo
}
[ENABLE]
//aobscanmodule(unsummonpets,DevilMayCry5.exe,B1 01 00 00 F3 0F 11 87 90 00 00 00)
define(unsummonpets,DevilMayCry5.exe+179F575)
alloc(newmem,$1000,unsummonpets)
label(code)
label(return)
label(byecat)
label(byebird)
label(byeboth)

newmem:

code:
  movss [rdi+00000090],xmm0
  and byte ptr [inputpressed], F
  cmp byte ptr [inputpressed], 8
  je byecat
  //and byte ptr [inputpressed], F
  cmp byte ptr [inputpressed], 4
  je byebird
  //and byte ptr [inputpressed], F
  cmp byte ptr [inputpressed], 1
  je byeboth
  jmp return

byecat:
  cmp byte ptr [rdi+298],1
  jne return
  mov [rdi+64],00
  jmp return

byebird:
  cmp byte ptr [rdi+298],0
  jne return
  mov [rdi+64],00
  jmp return

byeboth:
  cmp byte ptr [rdi+298],1
  ja return
  mov [rdi+64],00
  jmp return

unsummonpets: //+04
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(unsummonpets)

[DISABLE]
unsummonpets: //+04
  db F3 0F 11 87 90 00 00 00
unregistersymbol(unsummonpets)
dealloc(newmem)
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>18320</ID>
              <Description>"Practice"</Description>
              <Options moDeactivateChildrenAsWell="1"/>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
[DISABLE]
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>18321</ID>
                  <Description>"Difficulty Select"</Description>
                  <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
[DISABLE]
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>18322</ID>
                      <Description>"Difficulty Mode"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Human
1:Devil Hunter
2:Son Of Sparda
3:Dante Must Die
4:Heaven Or Hell
5:Hell And Hell
</DropDownList>
                      <VariableType>4 Bytes</VariableType>
                      <Address>"DevilMayCry5.exe"+07A7D1C0</Address>
                      <Offsets>
                        <Offset>1A8</Offset>
                        <Offset>270</Offset>
                        <Offset>20</Offset>
                        <Offset>38</Offset>
                        <Offset>68</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>18323</ID>
                      <Description>"BP and Enemy Difficulty"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Human
1:Devil Hunter
2:Son Of Sparda
3:Dante Must Die
4:Heaven Or Hell
5:Hell And Hell
</DropDownList>
                      <VariableType>4 Bytes</VariableType>
                      <Address>"DevilMayCry5.exe"+07A7D1C0</Address>
                      <Offsets>
                        <Offset>1AC</Offset>
                        <Offset>2F0</Offset>
                        <Offset>20</Offset>
                        <Offset>38</Offset>
                        <Offset>68</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>18324</ID>
                  <Description>"Infinite DT"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : DevilMayCry5.exe
  Version:
  Date   : 2019-03-09
  Author : Jessie Kazama
}

[ENABLE]
//aobscanmodule(infdtv,DevilMayCry5.exe,F3 0F 10 8A 10 11 00 00 F3 0F 10 87)
define(infdtv,DevilMayCry5.exe+233B79C)
alloc(newmem,$1000,infdtv)
label(code)
label(return)
registersymbol(infdtv)

newmem:
  fld [rdx+00001114]
  fstp [rdx+00001110]

code:
  movss xmm1,[rdx+00001110]
  jmp return

infdtv:
  jmp newmem
  nop
  nop
  nop
return:

[DISABLE]
infdtv:
  db F3 0F 10 8A 10 11 00 00
unregistersymbol(infdtv)
dealloc(newmem)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>10017</ID>
                  <Description>"Must Style Mode"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>//SSSiyan
//socks
//nino

[ENABLE]
{$lua}
--getAddressList().getMemoryRecordByDescription("Must Style Mode").active=false
getAddressList().getMemoryRecordByDescription("SSS Must Style Mode").active=false
{$asm}
//aobscanmodule(mustStyle,DevilMayCry5.exe,44 89 82 B0 00 00 00 ?? ?? ?? 48)
define(mustStyle,DevilMayCry5.exe+113FFAA)
alloc(newmem,$1000,mustStyle)
alloc(stylemem,16)
label(returnhere1)
label(originalcode1)
label(stylestore)
registersymbol(stylestore)

stylemem:
stylestore:
db 0

newmem:
mov [stylestore],r8d

originalcode1:
  mov [rdx+000000B0],r8d
  jmp returnhere1

mustStyle:
  jmp newmem
  nop
  nop
returnhere1:
registersymbol(mustStyle)

//aobscanmodule(mustStyle2,DevilMayCry5.exe,F3 0F 11 4F 10 48 85)
define(mustStyle2,DevilMayCry5.exe+167EFE4)
alloc(newmem2,$1000,mustStyle2)
label(originalcode2)
label(exit2)

newmem2:
//Stylecheck
  cmp [stylestore],7
  jae originalcode2
  //continue
  cmp byte ptr [rdi+134],'Play'
  je originalcode2
  cmp byte ptr [rdi-18C],'L_B_Hand'
  je originalcode2
  jmp exit2

originalcode2:
  movss [rdi+10],xmm1

exit2:
jmp returnhere2

mustStyle2:
  jmp newmem2
returnhere2:
registersymbol(mustStyle2)

[DISABLE]
mustStyle:
  db 44 89 82 B0 00 00 00
mustStyle2:
  db F3 0F 11 4F 10
dealloc(newmem)
dealloc(newmem2)
dealloc(stylemem)
unregistersymbol(stylestore)
unregistersymbol(mustStyle)
unregistersymbol(mustStyle2)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>12963</ID>
                  <Description>"SSS Must Style Mode"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>//SSSiyan
//socks
//nino

[ENABLE]
{$lua}
getAddressList().getMemoryRecordByDescription("Must Style Mode").active=false
--getAddressList().getMemoryRecordByDescription("SSS Must Style Mode").active=false
{$asm}
//aobscanmodule(mustStyle,DevilMayCry5.exe,44 89 82 B0 00 00 00 ?? ?? ?? 48)
define(mustStyle,DevilMayCry5.exe+113FFAA)
alloc(newmem,$1000,mustStyle)
alloc(stylemem,16)
label(returnhere1)
label(originalcode1)
label(stylestore)
registersymbol(stylestore)

stylemem:
stylestore:
db 0

newmem:
mov [stylestore],r8d

originalcode1:
  mov [rdx+000000B0],r8d
  jmp returnhere1

mustStyle:
  jmp newmem
  nop
  nop
returnhere1:
registersymbol(mustStyle)
//aobscanmodule(mustStyle2,DevilMayCry5.exe,F3 0F 11 4F 10 48 85)
define(mustStyle2,DevilMayCry5.exe+167EFE4)
alloc(newmem2,$1000,mustStyle2)
label(originalcode2)
label(exit2)

newmem2:
//Stylecheck
  cmp [stylestore],7
  jae originalcode2
  //continue
  cmp byte ptr [rdi+134],'Play'
  je originalcode2
  cmp byte ptr [rdi-18C],'L_B_Hand'
  je originalcode2
  jmp exit2

originalcode2:
  movss [rdi+10],xmm1

exit2:
jmp returnhere2

mustStyle2:
  jmp newmem2
returnhere2:
registersymbol(mustStyle2)

[DISABLE]
mustStyle:
  db 44 89 82 B0 00 00 00
mustStyle2:
  db F3 0F 11 4F 10
dealloc(newmem)
dealloc(newmem2)
dealloc(stylemem)
unregistersymbol(stylestore)
unregistersymbol(mustStyle)
unregistersymbol(mustStyle2)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>10018</ID>
                  <Description>"Enemy Instant DT in DMD"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>//SSSiyan
//socks

[ENABLE]
//aobscanmodule(instantDT,DevilMayCry5.exe,F3 0F 10 48 10 0F 5A C0 0F 5A C9 66 41 0F 2E C0 7A 16 75 14 ?? ?? C0 48 ?? ?? 41 8D 50 39 E8 ?? ?? ?? ?? 0F 57 C0 EB 08 F2 0F 5E C8 66 0F 5A C1 48 8B 43 50 48 39)
define(instantDT,DevilMayCry5.exe+86F8E9)
instantDT:
  db 90 90 90 90 90
registersymbol(instantDT)

[DISABLE]
instantDT:
  db F3 0F 10 48 10
unregistersymbol(instantDT)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>10125</ID>
                  <Description>"No One Takes Damage"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>//nino
//socks
[ENABLE]
{$lua}
--getAddressList().getMemoryRecordByDescription("No One Takes Damage").active=false
getAddressList().getMemoryRecordByDescription("Player Damage Modifier").active=false
{$asm}
//aobscanmodule(nodamage,DevilMayCry5.exe,F3 0F 11 4F 10 48 85 ED)
define(nodamage,DevilMayCry5.exe+167EFE4)
alloc(newmem,$1000,nodamage)
label(code)
label(return)

newmem:

code:
  //movss [rdi+10],xmm1
  jmp return

nodamage:
  jmp newmem
return:
registersymbol(nodamage)

[DISABLE]
nodamage:
  db F3 0F 11 4F 10
unregistersymbol(nodamage)
dealloc(newmem)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>18325</ID>
                  <Description>"Player Damage Modifier"</Description>
                  <Options moHideChildren="1"/>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>//nino
//socks
//SSSiyan
[ENABLE]
{$lua}
getAddressList().getMemoryRecordByDescription("No One Takes Damage").active=false
--getAddressList().getMemoryRecordByDescription("Player Damage Modifier").active=false
{$asm}
//aobscanmodule(damagemod,DevilMayCry5.exe,F3 0F 11 4F 10 48 ?? ED 0F)
define(damagemod,DevilMayCry5.exe+167EFE4)
alloc(newmem,$1000,damagemod)
registersymbol(damagemod)
label(code)
label(return)
label(playerdamageoutput)
label(enemydamageoutput)
label(weaponcompare)
label(effectdamage)

alloc(hitmultiplier,$1000)
registersymbol(hitmultiplier)
  hitmultiplier:
registersymbol(overallhitmultiplier)
  label(overallhitmultiplier)
  overallhitmultiplier:
  dd (float)0.5
registersymbol(brogdamagemultiplier)
  label(brogdamagemultiplier)
  brogdamagemultiplier:
  dd (float)1
registersymbol(cavdamagemultiplier)
  label(cavdamagemultiplier)
  cavdamagemultiplier:
  dd (float)1
registersymbol(sdtdamagemultiplier)
  label(sdtdamagemultiplier)
  sdtdamagemultiplier:
  dd (float)1
registersymbol(enemydamagemultiplier)
  label(enemydamagemultiplier)
  enemydamagemultiplier:
  dd (float)1
registersymbol(enemyhpvalue)
  label(enemyhpvalue)
  enemyhpvalue:
  dd (float)0

newmem:
  cmp byte ptr [rdi+134],'Play'
  je enemydamageoutput
  cmp byte ptr [rdi-18C],'L_B_Hand'
  je enemydamageoutput

  cmp byte ptr [rdi-16C],'Miss'
  je BPcheck
  jmp playerdamageoutput

BPcheck:
  cmp [rdi+14],(float)20000
  je enemydamageoutput
  jmp playerdamageoutput

playerdamageoutput:
  movss xmm2,[rdi+10]
  subss xmm2,xmm1
  movss xmm1,[rdi+10]
  jmp weaponcompare

weaponcompare:
  cmp [weaponid],3
  je brogdamagemult
  cmp [weaponid],5
  je cavdamagemult
  cmp [weaponid],6
  je cavdamagemult
  cmp [gunid],00000000FFFFFFFF
  je sdtdamagemult
  jmp effectdamage

brogdamagemult:
  mulss xmm2,[brogdamagemultiplier]
  jmp effectdamage

cavdamagemult:
  mulss xmm2,[cavdamagemultiplier]
  jmp effectdamage

sdtdamagemult:
  mulss xmm2,[sdtdamagemultiplier]
  jmp effectdamage

effectdamage:
  mulss xmm2,[overallhitmultiplier]
  subss xmm1,xmm2
  movss [enemyhpvalue],xmm1
  jmp code

enemydamageoutput:
  movss xmm3,[rdi+10]
  subss xmm3,xmm1
  movss xmm1,[rdi+10]
  mulss xmm3,[enemydamagemultiplier]
  subss xmm1,xmm3
  jmp code

code:
  movss [rdi+10],xmm1
  jmp return

damagemod:
  jmp newmem
return:

[DISABLE]
damagemod:
  db F3 0F 11 4F 10
dealloc(newmem)
unregistersymbol(damagemod)

dealloc(hitmultiplier)
unregistersymbol(hitmultiplier)
unregistersymbol(overallhitmultiplier)

unregistersymbol(brogdamagemultiplier)
unregistersymbol(cavdamagemultiplier)
unregistersymbol(sdtdamagemultiplier)
unregistersymbol(enemydamagemultiplier)
unregistersymbol(enemyhpvalue)
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>18326</ID>
                      <Description>"Player Damage Dealt Multiplier"</Description>
                      <VariableType>Float</VariableType>
                      <Address>hitmultiplier</Address>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>18327</ID>
                          <Description>"Balrog Multiplier"</Description>
                          <VariableType>Float</VariableType>
                          <Address>brogdamagemultiplier</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>18328</ID>
                          <Description>"Cavaliere Multiplier"</Description>
                          <VariableType>Float</VariableType>
                          <Address>cavdamagemultiplier</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>18329</ID>
                          <Description>"SDT Multiplier"</Description>
                          <VariableType>Float</VariableType>
                          <Address>sdtdamagemultiplier</Address>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>18330</ID>
                      <Description>"Enemy Damage Dealt Multiplier"</Description>
                      <VariableType>Float</VariableType>
                      <Address>enemydamagemultiplier</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>18331</ID>
                      <Description>"Display Enemy HP in Orbs"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{ Game   : DevilMayCry5.exe
  Version: 
  Date   : 2019-10-01
  Author : SSSiyan
}

[ENABLE]
//aobscanmodule(orbdisplay,DevilMayCry5.exe,8B 6A 78 EB 02)
define(orbdisplay,"DevilMayCry5.exe"+B2ACF85)
alloc(newmem,$1000,orbdisplay)
label(code)
label(return)

newmem:

code:
  //mov ebp,[rdx+78]
  //mov ebp,45
  //mov ebp,138D5
  cmp [enemyhpvalue],(float)-0
  ja write0
  CVTTSS2SI ebp,[enemyhpvalue]
  jmp DevilMayCry5.exe+B2ACF8C
  jmp return

write0:
  mov ebp,[rdx+78]
  jmp DevilMayCry5.exe+B2ACF8C
  jmp return

orbdisplay:
  jmp newmem
return:
registersymbol(orbdisplay)

[DISABLE]
orbdisplay:
  db 8B 6A 78 EB 02
unregistersymbol(orbdisplay)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "DevilMayCry5.exe"+B2ACF85

"DevilMayCry5.exe"+B2ACF5B: E8 C0 01 7E F6        -  call DevilMayCry5.exe+1A8D120
"DevilMayCry5.exe"+B2ACF60: 0F B6 C8              -  movzx ecx,al
"DevilMayCry5.exe"+B2ACF63: 48 8B 43 50           -  mov rax,[rbx+50]
"DevilMayCry5.exe"+B2ACF67: 48 39 70 18           -  cmp [rax+18],rsi
"DevilMayCry5.exe"+B2ACF6B: 0F 85 E8 0D 00 00     -  jne DevilMayCry5.exe+B2ADD59
"DevilMayCry5.exe"+B2ACF71: 48 8B 15 E0 D8 7E FC  -  mov rdx,[DevilMayCry5.exe+7A9A858]
"DevilMayCry5.exe"+B2ACF78: 85 C9                 -  test ecx,ecx
"DevilMayCry5.exe"+B2ACF7A: 74 0E                 -  je DevilMayCry5.exe+B2ACF8A
"DevilMayCry5.exe"+B2ACF7C: 48 85 D2              -  test rdx,rdx
"DevilMayCry5.exe"+B2ACF7F: 0F 84 A2 0F 00 00     -  je DevilMayCry5.exe+B2ADF27
// ---------- INJECTING HERE ----------
"DevilMayCry5.exe"+B2ACF85: 8B 6A 78              -  mov ebp,[rdx+78]
"DevilMayCry5.exe"+B2ACF88: EB 02                 -  jmp DevilMayCry5.exe+B2ACF8C
// ---------- DONE INJECTING  ----------
"DevilMayCry5.exe"+B2ACF8A: 89 F5                 -  mov ebp,esi
"DevilMayCry5.exe"+B2ACF8C: 44 8B 05 65 2E 7C FC  -  mov r8d,[DevilMayCry5.exe+7A6FDF8]
"DevilMayCry5.exe"+B2ACF93: 48 63 CD              -  movsxd  rcx,ebp
"DevilMayCry5.exe"+B2ACF96: 4C 39 C1              -  cmp rcx,r8
"DevilMayCry5.exe"+B2ACF99: 41 0F 4F E8           -  cmovg ebp,r8d
"DevilMayCry5.exe"+B2ACF9D: 39 B7 B4 01 00 00     -  cmp [rdi+000001B4],esi
"DevilMayCry5.exe"+B2ACFA3: 75 7D                 -  jne DevilMayCry5.exe+B2AD022
"DevilMayCry5.exe"+B2ACFA5: 40 38 B7 18 01 00 00  -  cmp [rdi+00000118],sil
"DevilMayCry5.exe"+B2ACFAC: 75 74                 -  jne DevilMayCry5.exe+B2AD022
"DevilMayCry5.exe"+B2ACFAE: 45 31 C0              -  xor r8d,r8d
}
</AssemblerScript>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>18332</ID>
                          <Description>"Enemy HP Value"</Description>
                          <VariableType>Float</VariableType>
                          <Address>enemyhpvalue</Address>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>18333</ID>
              <Description>"Other"</Description>
              <Options moDeactivateChildrenAsWell="1"/>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
[DISABLE]
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>12156</ID>
                  <Description>"Character Swapper (COOP trainer allows more stages)"</Description>
                  <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">1:Dante
0:Nero
2:V
3:Vergil
</DropDownList>
                  <VariableType>4 Bytes</VariableType>
                  <Address>DevilMayCry5.exe+7A7AEE8</Address>
                  <Offsets>
                    <Offset>B0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>18507</ID>
                  <Description>"Temporary Platforms while holding LS (has problems with Guard Flying WIP)"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : DevilMayCry5.exe
  Version:
  Date   : 2019-09-08
  Author : SSSiyan
}
[ENABLE]
//aobscanmodule(TemporaryPlatforms,DevilMayCry5.exe,48 89 41 18 48 8B 43 50 48 83 78 18 00 0F 85 A4) // should be unique
define(TemporaryPlatforms,DevilMayCry5.exe+16030DD)
alloc(newmem,$1000,TemporaryPlatforms)
label(code)
label(return)
label(platformset)
label(platformremove)
label(cont)
label(exit)
label(remove3)

newmem:
  push r10
  mov r10,[inputpressed]
  test r10 ,20 //left stick
  jna platformremove
  ja platformset
  jmp code

platformset:
  mov r10, [groundedmem]
  cmp r10, 0
  je code
  mov byte ptr [r10],11
  jmp code

platformremove:
  mov r10, [groundedmem]
  cmp r10, 0
  je code
  cmp [r10+8],1
  je code
  mov [r10],00
  jmp remove3

remove3:
  cmp [r10+8],401
  je code
  mov [r10],400
  jmp code

code:
  mov [rcx+18],rax

cont:
  mov rax,[rbx+50]

exit:
pop r10
jmp return

TemporaryPlatforms:
  jmp newmem
  nop
  nop
  nop
return:

registersymbol(TemporaryPlatforms)

[DISABLE]
TemporaryPlatforms:
  db 48 89 41 18 48 8B 43 50
unregistersymbol(TemporaryPlatforms)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "DevilMayCry5.exe"+14211B6D

"DevilMayCry5.exe"+14211B47: 0F 85 D7 00 00 00     -  jne DevilMayCry5.exe+14211C24
"DevilMayCry5.exe"+14211B4D: 48 8B 8E B0 03 00 00  -  mov rcx,[rsi+000003B0]
"DevilMayCry5.exe"+14211B54: 48 85 C9              -  test rcx,rcx
"DevilMayCry5.exe"+14211B57: 75 10                 -  jne DevilMayCry5.exe+14211B69
"DevilMayCry5.exe"+14211B59: 8D 51 38              -  lea edx,[rcx+38]
"DevilMayCry5.exe"+14211B5C: 45 31 C0              -  xor r8d,r8d
"DevilMayCry5.exe"+14211B5F: 48 89 D9              -  mov rcx,rbx
"DevilMayCry5.exe"+14211B62: E8 29 54 1D EE        -  call DevilMayCry5.exe+23E6F90
"DevilMayCry5.exe"+14211B67: EB 08                 -  jmp DevilMayCry5.exe+14211B71
"DevilMayCry5.exe"+14211B69: 48 8B 41 10           -  mov rax,[rcx+10]
// ---------- INJECTING HERE ----------
"DevilMayCry5.exe"+14211B6D: 48 89 41 18           -  mov [rcx+18],rax
"DevilMayCry5.exe"+14211B71: 48 8B 43 50           -  mov rax,[rbx+50]
// ---------- DONE INJECTING  ----------
"DevilMayCry5.exe"+14211B75: 48 83 78 18 00        -  cmp qword ptr [rax+18],00
"DevilMayCry5.exe"+14211B7A: 0F 85 A4 00 00 00     -  jne DevilMayCry5.exe+14211C24
"DevilMayCry5.exe"+14211B80: 48 8B 06              -  mov rax,[rsi]
"DevilMayCry5.exe"+14211B83: 48 89 F2              -  mov rdx,rsi
"DevilMayCry5.exe"+14211B86: 48 89 D9              -  mov rcx,rbx
"DevilMayCry5.exe"+14211B89: 4C 8B 40 F0           -  mov r8,[rax-10]
"DevilMayCry5.exe"+14211B8D: 41 FF 90 48 06 00 00  -  call qword ptr [r8+00000648]
"DevilMayCry5.exe"+14211B94: EB 50                 -  jmp DevilMayCry5.exe+14211BE6
"DevilMayCry5.exe"+14211B96: 49 8B 7E 58           -  mov rdi,[r14+58]
"DevilMayCry5.exe"+14211B9A: 48 85 FF              -  test rdi,rdi
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>18368</ID>
                  <Description>"BP Stage Jump"</Description>
                  <Options moHideChildren="1"/>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : DevilMayCry5.exe
  Version: 
  Date   : 2019-10-19
  Author : SSSiyan
}

[ENABLE]
{$lua}
--getAddressList().getMemoryRecordByDescription("BP Stage Jump").active=false
getAddressList().getMemoryRecordByDescription("BP Boss Rush").active=false
{$asm}
//aobscanmodule(BPjumps,DevilMayCry5.exe,FF 43 68 48 8B 47 50) // should be unique
define(BPjumps,DevilMayCry5.exe+150F47D)
alloc(newmem,$1000,BPjumps)
label(code)
label(return)

alloc(bpstage,1)
registersymbol(bpstage)
bpstage:
db 1

newmem:

code:
  //inc [rbx+68]
  push rax
  mov eax,[bpstage]
  mov [rbx+68],eax
  mov rax,[rdi+50]
  pop rax
  jmp return

BPjumps:
  jmp newmem
  nop
  nop
return:
registersymbol(BPjumps)

[DISABLE]
BPjumps:
  db FF 43 68 48 8B 47 50
unregistersymbol(BPjumps)
dealloc(newmem)

dealloc(bpstage)
unregistersymbol(bpstage)

{
// ORIGINAL CODE - INJECTION POINT: "DevilMayCry5.exe"+13C97A5D

"DevilMayCry5.exe"+13C97A36: 45 31 C0                    -  xor r8d,r8d
"DevilMayCry5.exe"+13C97A39: E8 C2 54 DF ED              -  call DevilMayCry5.exe+1A8CF00
"DevilMayCry5.exe"+13C97A3E: 0F B6 C8                    -  movzx ecx,al
"DevilMayCry5.exe"+13C97A41: 48 8B 47 50                 -  mov rax,[rdi+50]
"DevilMayCry5.exe"+13C97A45: 48 83 78 18 00              -  cmp qword ptr [rax+18],00
"DevilMayCry5.exe"+13C97A4A: 0F 85 6F 04 00 00           -  jne DevilMayCry5.exe+13C97EBF
"DevilMayCry5.exe"+13C97A50: 85 C9                       -  test ecx,ecx
"DevilMayCry5.exe"+13C97A52: 0F 85 67 04 00 00           -  jne DevilMayCry5.exe+13C97EBF
"DevilMayCry5.exe"+13C97A58: 38 4B 79                    -  cmp [rbx+79],cl
"DevilMayCry5.exe"+13C97A5B: 75 03                       -  jne DevilMayCry5.exe+13C97A60
// ---------- INJECTING HERE ----------
"DevilMayCry5.exe"+13C97A5D: FF 43 68                    -  inc [rbx+68]
"DevilMayCry5.exe"+13C97A60: 48 8B 47 50                 -  mov rax,[rdi+50]
// ---------- DONE INJECTING  ----------
"DevilMayCry5.exe"+13C97A64: 48 83 78 18 00              -  cmp qword ptr [rax+18],00
"DevilMayCry5.exe"+13C97A69: 0F 85 50 04 00 00           -  jne DevilMayCry5.exe+13C97EBF
"DevilMayCry5.exe"+13C97A6F: 80 7B 64 00                 -  cmp byte ptr [rbx+64],00
"DevilMayCry5.exe"+13C97A73: 74 06                       -  je DevilMayCry5.exe+13C97A7B
"DevilMayCry5.exe"+13C97A75: 8B 43 70                    -  mov eax,[rbx+70]
"DevilMayCry5.exe"+13C97A78: 89 43 68                    -  mov [rbx+68],eax
"DevilMayCry5.exe"+13C97A7B: 48 8B 8B 30 01 00 00        -  mov rcx,[rbx+00000130]
"DevilMayCry5.exe"+13C97A82: 48 85 C9                    -  test rcx,rcx
"DevilMayCry5.exe"+13C97A85: 74 17                       -  je DevilMayCry5.exe+13C97A9E
"DevilMayCry5.exe"+13C97A87: 8B 53 68                    -  mov edx,[rbx+68]
}
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>18369</ID>
                      <Description>"Bp Stage"</Description>
                      <VariableType>Byte</VariableType>
                      <Address>bpstage</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>18367</ID>
                  <Description>"BP Boss Rush"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : DevilMayCry5.exe
  Version: 
  Date   : 2019-10-19
  Author : SSSiyan
}

[ENABLE]
{$lua}
getAddressList().getMemoryRecordByDescription("BP Stage Jump").active=false
--getAddressList().getMemoryRecordByDescription("BP Boss Rush").active=false
{$asm}
//aobscanmodule(BPjumps,DevilMayCry5.exe,FF 43 68 48 8B 47 50) // should be unique
define(BPjumps,DevilMayCry5.exe+150F47D)
alloc(newmem,$1000,BPjumps)
label(code)
label(return)

alloc(bpstage,1)
registersymbol(bpstage)
bpstage:
db 0

newmem:
  cmp [rbx+68],#00 //00
  je stage20
  cmp [rbx+68],#20 //14
  je stage40
  cmp [rbx+68],#40 //28
  je stage60
  cmp [rbx+68],#60 //3C
  je stage80
  cmp [rbx+68],#80 //50
  je stage90
  cmp [rbx+68],#90 //5A
  je stage98

code:
  inc [rbx+68]
cont:
  mov rax,[rdi+50]
  jmp return

stage20:
  mov [rbx+68],#20 //14
  jmp cont

stage40:
  mov [rbx+68],#40 //28
  jmp cont

stage60:
  mov [rbx+68],#60 //3C
  jmp cont

stage80:
  mov [rbx+68],#80 //50
  jmp cont

stage90:
  mov [rbx+68],#90 //5A
  jmp cont

stage98:
  mov [rbx+68],#98 //62
  jmp cont

BPjumps:
  jmp newmem
  nop
  nop
return:
registersymbol(BPjumps)

[DISABLE]
BPjumps:
  db FF 43 68 48 8B 47 50
unregistersymbol(BPjumps)
dealloc(newmem)

dealloc(bpstage)
unregistersymbol(bpstage)

{
// ORIGINAL CODE - INJECTION POINT: "DevilMayCry5.exe"+13C97A5D

"DevilMayCry5.exe"+13C97A36: 45 31 C0                    -  xor r8d,r8d
"DevilMayCry5.exe"+13C97A39: E8 C2 54 DF ED              -  call DevilMayCry5.exe+1A8CF00
"DevilMayCry5.exe"+13C97A3E: 0F B6 C8                    -  movzx ecx,al
"DevilMayCry5.exe"+13C97A41: 48 8B 47 50                 -  mov rax,[rdi+50]
"DevilMayCry5.exe"+13C97A45: 48 83 78 18 00              -  cmp qword ptr [rax+18],00
"DevilMayCry5.exe"+13C97A4A: 0F 85 6F 04 00 00           -  jne DevilMayCry5.exe+13C97EBF
"DevilMayCry5.exe"+13C97A50: 85 C9                       -  test ecx,ecx
"DevilMayCry5.exe"+13C97A52: 0F 85 67 04 00 00           -  jne DevilMayCry5.exe+13C97EBF
"DevilMayCry5.exe"+13C97A58: 38 4B 79                    -  cmp [rbx+79],cl
"DevilMayCry5.exe"+13C97A5B: 75 03                       -  jne DevilMayCry5.exe+13C97A60
// ---------- INJECTING HERE ----------
"DevilMayCry5.exe"+13C97A5D: FF 43 68                    -  inc [rbx+68]
"DevilMayCry5.exe"+13C97A60: 48 8B 47 50                 -  mov rax,[rdi+50]
// ---------- DONE INJECTING  ----------
"DevilMayCry5.exe"+13C97A64: 48 83 78 18 00              -  cmp qword ptr [rax+18],00
"DevilMayCry5.exe"+13C97A69: 0F 85 50 04 00 00           -  jne DevilMayCry5.exe+13C97EBF
"DevilMayCry5.exe"+13C97A6F: 80 7B 64 00                 -  cmp byte ptr [rbx+64],00
"DevilMayCry5.exe"+13C97A73: 74 06                       -  je DevilMayCry5.exe+13C97A7B
"DevilMayCry5.exe"+13C97A75: 8B 43 70                    -  mov eax,[rbx+70]
"DevilMayCry5.exe"+13C97A78: 89 43 68                    -  mov [rbx+68],eax
"DevilMayCry5.exe"+13C97A7B: 48 8B 8B 30 01 00 00        -  mov rcx,[rbx+00000130]
"DevilMayCry5.exe"+13C97A82: 48 85 C9                    -  test rcx,rcx
"DevilMayCry5.exe"+13C97A85: 74 17                       -  je DevilMayCry5.exe+13C97A9E
"DevilMayCry5.exe"+13C97A87: 8B 53 68                    -  mov edx,[rbx+68]
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>11056</ID>
                  <Description>"Free JC"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>//nino

[ENABLE]
{$lua}
getAddressList().getMemoryRecordByDescription("JC walls").active=false
--getAddressList().getMemoryRecordByDescription("Free JC").active=false
{$asm}
//aobscanmodule(FreeJC,DevilMayCry5.exe,0F 84 AA 00 00 00 F3 0F 10 8B) // should be unique
define(FreeJC,DevilMayCry5.exe+7E7DFD)

FreeJC:
  jb DevilMayCry5.exe+7E7EAD
registersymbol(FreeJC)

[DISABLE]
FreeJC:
  db 0F 84 AA 00 00 00
unregistersymbol(FreeJC)

{
// ORIGINAL CODE - INJECTION POINT: "DevilMayCry5.exe"+C40504D

"DevilMayCry5.exe"+C405026: 48 89 DA                 -  mov rdx,rbx
"DevilMayCry5.exe"+C405029: 48 8B 48 F0              -  mov rcx,[rax-10]
"DevilMayCry5.exe"+C40502D: 48 8B 81 E8 09 00 00     -  mov rax,[rcx+000009E8]
"DevilMayCry5.exe"+C405034: 48 89 F1                 -  mov rcx,rsi
"DevilMayCry5.exe"+C405037: FF D0                    -  call rax
"DevilMayCry5.exe"+C405039: 0F B6 C8                 -  movzx ecx,al
"DevilMayCry5.exe"+C40503C: 48 8B 46 50              -  mov rax,[rsi+50]
"DevilMayCry5.exe"+C405040: 48 83 78 18 00           -  cmp qword ptr [rax+18],00
"DevilMayCry5.exe"+C405045: 0F 85 E8 01 00 00        -  jne DevilMayCry5.exe+C405233
"DevilMayCry5.exe"+C40504B: 85 C9                    -  test ecx,ecx
// ---------- INJECTING HERE ----------
"DevilMayCry5.exe"+C40504D: 0F 84 AA 00 00 00        -  je DevilMayCry5.exe+C4050FD
// ---------- DONE INJECTING  ----------
"DevilMayCry5.exe"+C405053: F3 0F 10 8B 34 13 00 00  -  movss xmm1,[rbx+00001334]
"DevilMayCry5.exe"+C40505B: 0F 57 C0                 -  xorps xmm0,xmm0
"DevilMayCry5.exe"+C40505E: 0F 2F C8                 -  comiss xmm1,xmm0
"DevilMayCry5.exe"+C405061: 0F 87 96 00 00 00        -  ja DevilMayCry5.exe+C4050FD
"DevilMayCry5.exe"+C405067: 48 8B 8B F0 01 00 00     -  mov rcx,[rbx+000001F0]
"DevilMayCry5.exe"+C40506E: 48 85 C9                 -  test rcx,rcx
"DevilMayCry5.exe"+C405071: 0F 84 CD FE FF FF        -  je DevilMayCry5.exe+C404F44
"DevilMayCry5.exe"+C405077: 48 8D 54 24 50           -  lea rdx,[rsp+50]
"DevilMayCry5.exe"+C40507C: E8 CF 61 FD F5           -  call DevilMayCry5.exe+23DB250
"DevilMayCry5.exe"+C405081: 48 8B 46 50              -  mov rax,[rsi+50]
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>134</ID>
                  <Description>"No Slowmo"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>//cheburrat0r
//socks
[ENABLE]

//aobscanmodule(noslowmo,DevilMayCry5.exe,F3 0F 11 52 64 48 8B 41 50 48 83 78)
define(noslowmo,DevilMayCry5.exe+1F602C2)
alloc(newmem,$1000,noslowmo)

label(return)

newmem:
  mov [rdx+64],(float)1
  jmp return

noslowmo:
  jmp newmem
return:
registersymbol(noslowmo)

[DISABLE]
noslowmo:
  db F3 0F 11 52 64
unregistersymbol(noslowmo)
dealloc(newmem)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>10019</ID>
                  <Description>"Bufferless Reversals"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>//Nekupaska
//cheburrat0r
//socks

{$lua}
--getAddressList().getMemoryRecordByDescription("Bufferless Reversals").active=false
getAddressList().getMemoryRecordByDescription("Buffered Reversals").active=false
{$asm}
[ENABLE]
//aobscanmodule(reversal,DevilMayCry5.exe,48 89 87 38 17 00 00 48 8B 43 50 48 39 48 18 0F 85 08 02 00 00)
define(reversal,DevilMayCry5.exe+7DCF9F)
reversal:
  db 90 90 90 90 90 90 90
registersymbol(reversal)

[DISABLE]
reversal:
  db 48 89 87 38 17 00 00
unregistersymbol(reversal)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>41</ID>
                  <Description>"Invulnerable"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
//aobscanmodule(aobinvulnerable,DevilMayCry5.exe,83 BB B0 02 00 00 FF 0F 85 * * * * 80 BB * * 00 00 00 0F 85 * * * * 80 BB * * 00 00 00)
define(aobinvulnerable,DevilMayCry5.exe+1EF1EED)
alloc(newmem,$1000,aobinvulnerable)
label(code)
label(return)
label(skipcode)

newmem:
  push rax
  push rcx
  mov rax,[rbx+A8]
  test rax,rax
  je short code
  mov rax,[rax+10]
  test rax,rax
  je short code
  mov rcx,0061006C0050002F //'/Pla'
  cmp [rax+20],rcx
  jne short code
  mov rcx,002F007200650079 //'yer/'
  cmp [rax+28],rcx
  jne short code
  cmp rsp,0
  jmp short skipcode

code:
  cmp dword ptr [rbx+000002B0],-01
skipcode:
  pop rcx
  pop rax
  jmp return

aobinvulnerable:
  jmp newmem
  nop
  nop
return:
registersymbol(aobinvulnerable)

[DISABLE]
aobinvulnerable:
  db 83 BB B0 02 00 00 FF
dealloc(newmem)
unregistersymbol(aobinvulnerable)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>49</ID>
                  <Description>"Inf Air Hikes"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
//Jessie Kazama
//socks
//aobscanmodule(infairh1,DevilMayCry5.exe,FF 87 2C 11 00 00 48 8B 43 50 48 83 78 18)
define(infairh1,DevilMayCry5.exe+7EBE0A)
  infairh1:
    db 90 90 90 90 90 90
  registersymbol(infairh1)

//aobscanmodule(infairh2,DevilMayCry5.exe,FF C0 89 87 2C 11 00 00 EB)
define(infairh2,DevilMayCry5.exe+7EAF1A)
  infairh2:
    db 90 90
  registersymbol(infairh2)

//aobscanmodule(infairh3,DevilMayCry5.exe,FF 87 2C 11 00 00 40 B6 01 48)
define(infairh3,DevilMayCry5.exe+7EAF40)
  infairh3:
    db 90 90 90 90 90 90
  registersymbol(infairh3)

[DISABLE]
infairh1:
  db FF 87 2C 11 00 00
unregistersymbol(infairh1)

infairh2:
  db FF C0
unregistersymbol(infairh2)

infairh3:
  db FF 87 2C 11 00 00
unregistersymbol(infairh3)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>11119</ID>
                  <Description>"No Lockon Camera"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : DevilMayCry5.exe
  Version: 
  Date   : 2019-08-12
  Author : SSSiyan
}
[ENABLE]
//aobscanmodule(nolockoncam,DevilMayCry5.exe,38 48 3C 74 40)
define(nolockoncam,DevilMayCry5.exe+1FF4DF6)
nolockoncam:
  nop
  nop
  nop
registersymbol(nolockoncam)

[DISABLE]
nolockoncam:
  db 38 48 3C
unregistersymbol(nolockoncam)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>19</ID>
                  <Description>"Hide HUD"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>//SSSiyan
[ENABLE]
//aobscanmodule(hidehud2,DevilMayCry5.exe,89 83 C4 00 00 00 F3)
define(hidehud2,DevilMayCry5.exe+113CADA)
alloc(newmem,$1000,hidehud2)
label(code)
label(return)

newmem:
  cmp [rbx+08],#10 //Dante HP
  je return
  cmp [rbx+08],#17 //Nero HP
  je return
  cmp [rbx+08],#5 //Orbs
  je return
  cmp [rbx+08],#18 //Style Meter
  je return

code:
  mov [rbx+000000C4],eax
  jmp return

hidehud2:
  jmp newmem
  nop
return:
registersymbol(hidehud2)

[DISABLE]
hidehud2:
  db 89 83 C4 00 00 00
unregistersymbol(hidehud2)
dealloc(newmem)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>101</ID>
                  <Description>"Style Multiplier"</Description>
                  <Options moHideChildren="1"/>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : DevilMayCry5.exe
  Version:
  Date   : 2019-03-08
  Author : Jessie Kazama
}
[ENABLE]
//aobscanmodule(stylemult,DevilMayCry5.exe,C2 F3 0F 2A C8 0F 5A D0 0F 5A D9 F2 0F 58 DA 66 0F 5A CB)
define(stylemult,DevilMayCry5.exe+1142710)
alloc(newmem,$1000,stylemult)
label(code)
label(return)
label(stylemultv)
registersymbol(stylemult)
registersymbol(stylemultv)

newmem:
  mulsd xmm2,[stylemultv]

code:
  addsd xmm3,xmm2
  cvtpd2ps xmm1,xmm3
  jmp return

stylemultv:
  dq (double)2

stylemult: //+0B
  jmp newmem
  nop
  nop
  nop
return:

[DISABLE]
stylemult: //+0B
  db F2 0F 58 DA 66 0F 5A CB
unregistersymbol(stylemult)
unregistersymbol(stylemultv)
dealloc(newmem)
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>102</ID>
                      <Description>"Mulitiplier"</Description>
                      <VariableType>Double</VariableType>
                      <Address>stylemultv</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>127</ID>
                  <Description>"No Style Loss"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : DevilMayCry5.exe
  Version:
  Date   : 2019-03-08
  Author : Jessie Kazama
}
[ENABLE]
//aobscanmodule(esbu,DevilMayCry5.exe,F3 0F 11 87 B4 00 00 00 48 8B 43 50 48 8B 50)
define(esbu,DevilMayCry5.exe+1147B8E)
registersymbol(esbu)
esbu:
  db 90 90 90 90 90 90 90 90

//aobscanmodule(esbu2,DevilMayCry5.exe,89 BD B4 00 00 00 48 8B 43)
define(esbu2,DevilMayCry5.exe+1143BF2)
registersymbol(esbu2)
esbu2:
  db 90 90 90 90 90 90

[DISABLE]
esbu:
  db F3 0F 11 87 B4 00 00 00
unregistersymbol(esbu)

esbu2:
  db 89 BD B4 00 00 00
unregistersymbol(esbu2)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>106</ID>
                  <Description>"No Attack Latency"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
//flarejune
//SSSiyan
//socks
//aobscanmodule(noattacklatency,DevilMayCry5.exe,75 56 48 8B 07 48 ?? ?? 48 8B 48)
define(noattacklatency,DevilMayCry5.exe+7F7AAC)
noattacklatency:
  db EB
registersymbol(noattacklatency)

[DISABLE]
noattacklatency:
  db 75
unregistersymbol(noattacklatency)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>128</ID>
                  <Description>"Freeze Secret Mission Timer"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : DevilMayCry5.exe
  Version:
  Date   : 2019-03-08
  Author : Jessie Kazama
}
[ENABLE]
//aobscanmodule(ismt,DevilMayCry5.exe,F3 0F 11 4B 5C F3 0F 10 53 60)
define(ismt,DevilMayCry5.exe+208F492)
registersymbol(ismt)
ismt:
  db 90 90 90 90 90

[DISABLE]
ismt:
  db F3 0F 11 4B 5C
unregistersymbol(ismt)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>10121</ID>
                  <Description>"Always S+ Taunts"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>//SSSiyan
//socks

[ENABLE]

//aobscanmodule(sPlusTaunt,DevilMayCry5.exe,8B 88 B0 00 00 00 48 8B 15)
define(sPlusTaunt,DevilMayCry5.exe+7E9930)
alloc(newmem,$1000,sPlusTaunt)
label(code)
label(return)

newmem:
  mov ecx,7
code:
  //mov ecx,[rax+000000B0]
  jmp return

sPlusTaunt:
  jmp newmem
  nop
return:
registersymbol(sPlusTaunt)

[DISABLE]
sPlusTaunt:
  db 8B 88 B0 00 00 00
unregistersymbol(sPlusTaunt)
dealloc(newmem)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>11227</ID>
                  <Description>"Player Weight Modifier"</Description>
                  <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : DevilMayCry5.exe
  Version: 
  Date   : 2019-08-16
  Author : SSSiyan
}
[ENABLE]
//aobscanmodule(weightmod,DevilMayCry5.exe,F3 0F 11 8E C4 02 00 00 EB)
define(weightmod,DevilMayCry5.exe+592778)
alloc(newmem,$1000,weightmod)
label(code)
label(return)
alloc(weightmultalloc,64)
registersymbol(weightmult)
weightmultalloc:
weightmult:
dd (float)1
alloc(weightdisplayalloc,64)
registersymbol(weightdisplay)
weightdisplayalloc:
weightdisplay:
dd (float)0

newmem:
mulss xmm1,[weightmult]

code:
  movss [weightdisplay],xmm1
  movss [rsi+000002C4],xmm1
  jmp return

weightmod:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(weightmod)

//aobscanmodule(weightreset,DevilMayCry5.exe,89 BA C4 02 00 00)
define(weightreset,DevilMayCry5.exe+7ED5C5)
alloc(newmem1,$1000,weightreset)
label(code1)
label(return1)

newmem1:

code1:
  mov [rdx+000002C4],edi
  mov [weightdisplay],edi
  jmp return1

weightreset:
  jmp newmem1
  nop
return1:
registersymbol(weightreset)

[DISABLE]
weightmod:
  db F3 0F 11 8E C4 02 00 00
unregistersymbol(weightmod)
dealloc(newmem)
unregistersymbol(weightmult)
dealloc(weightmultalloc)
dealloc(weightdisplayalloc)
unregistersymbol(weightdisplay)

weightreset:
  db 89 BA C4 02 00 00
unregistersymbol(weightreset)
dealloc(newmem1)
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>11226</ID>
                      <Description>"Weight Mult"</Description>
                      <VariableType>Float</VariableType>
                      <Address>weightmult</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>11232</ID>
                      <Description>"Weight Display"</Description>
                      <VariableType>Float</VariableType>
                      <Address>weightdisplay</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>12961</ID>
                  <Description>"Replace auto mode with AI mode"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : DevilMayCry5.exe
  Version: 
  Date   : 2019-10-28
  Author : SSSiyan
}

[ENABLE]
//aobscanmodule(aiscript,DevilMayCry5.exe,44 89 82 28 12 00 00 48) // should be unique
define(aiscript,DevilMayCry5.exe+76484C)
alloc(newmem,$1000,aiscript)

label(code)
label(return)

newmem:

code:
  //mov [rdx+00001228],r8d
  mov [rdx+00001228],2
  jmp return

aiscript:
  jmp newmem
  nop
  nop
return:
registersymbol(aiscript)

[DISABLE]
aiscript:
  db 44 89 82 28 12 00 00
unregistersymbol(aiscript)
dealloc(newmem)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>18351</ID>
                  <Description>"120fps cap"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : DevilMayCry5.exe
  Version: 
  Date   : 2020-02-07
  Author : sssiy
}

[ENABLE]
//aobscanmodule(OneTwentyFpsCap,DevilMayCry5.exe,89 88 9C 03 00 00) // should be unique
define(OneTwentyFpsCap,"DevilMayCry5.exe"+18A665E)
alloc(newmem,$1000,OneTwentyFpsCap)
label(code)
label(return)

newmem:

code:
  mov [rax+0000039C],(float)120 //ecx
  jmp return

OneTwentyFpsCap:
  jmp newmem
  nop
return:
registersymbol(OneTwentyFpsCap)

[DISABLE]
OneTwentyFpsCap:
  db 89 88 9C 03 00 00
unregistersymbol(OneTwentyFpsCap)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "DevilMayCry5.exe"+18A665E

"DevilMayCry5.exe"+18A6624: 48 83 78 18 00        -  cmp qword ptr [rax+18],00
"DevilMayCry5.exe"+18A6629: 0F 85 2C 01 00 00     -  jne DevilMayCry5.exe+18A675B
"DevilMayCry5.exe"+18A662F: 48 8B 05 6A 93 1C 06  -  mov rax,[DevilMayCry5.exe+7A6F9A0]
"DevilMayCry5.exe"+18A6636: 8B 8D CC 00 00 00     -  mov ecx,[rbp+000000CC]
"DevilMayCry5.exe"+18A663C: 89 88 98 03 00 00     -  mov [rax+00000398],ecx
"DevilMayCry5.exe"+18A6642: 48 8B 43 50           -  mov rax,[rbx+50]
"DevilMayCry5.exe"+18A6646: 48 83 78 18 00        -  cmp qword ptr [rax+18],00
"DevilMayCry5.exe"+18A664B: 0F 85 0A 01 00 00     -  jne DevilMayCry5.exe+18A675B
"DevilMayCry5.exe"+18A6651: 48 8B 05 48 93 1C 06  -  mov rax,[DevilMayCry5.exe+7A6F9A0]
"DevilMayCry5.exe"+18A6658: 8B 8D D0 00 00 00     -  mov ecx,[rbp+000000D0]
// ---------- INJECTING HERE ----------
"DevilMayCry5.exe"+18A665E: 89 88 9C 03 00 00     -  mov [rax+0000039C],ecx
// ---------- DONE INJECTING  ----------
"DevilMayCry5.exe"+18A6664: 48 8B 43 50           -  mov rax,[rbx+50]
"DevilMayCry5.exe"+18A6668: 48 83 78 18 00        -  cmp qword ptr [rax+18],00
"DevilMayCry5.exe"+18A666D: 0F 85 E8 00 00 00     -  jne DevilMayCry5.exe+18A675B
"DevilMayCry5.exe"+18A6673: 48 8B 15 D6 C6 1C 06  -  mov rdx,[DevilMayCry5.exe+7A72D50]
"DevilMayCry5.exe"+18A667A: 45 33 C0              -  xor r8d,r8d
"DevilMayCry5.exe"+18A667D: 48 8B CB              -  mov rcx,rbx
"DevilMayCry5.exe"+18A6680: E8 9B 6A 1E 00        -  call DevilMayCry5.exe+1A8D120
"DevilMayCry5.exe"+18A6685: 0F B6 D0              -  movzx edx,al
"DevilMayCry5.exe"+18A6688: 48 8B 43 50           -  mov rax,[rbx+50]
"DevilMayCry5.exe"+18A668C: 48 8B 48 18           -  mov rcx,[rax+18]
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>11148</ID>
                  <Description>"Animation Properties (tick one from each category)"</Description>
                  <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
[DISABLE]
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>12030</ID>
                      <Description>"---------------------------------------"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>12164</ID>
                      <Description>"Selective Cancels"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{ Game   : DevilMayCry5.exe
  Version:
  Date   : 2019-08-13
  Author : SSSiyan
}
[ENABLE]
//aobscanmodule(cancelcertainthings,DevilMayCry5.exe,66 C7 47 58 00 00)
define(cancelcertainthings,DevilMayCry5.exe+18DDFC0)
alloc(newmem,$1000,cancelcertainthings)
label(cancellable)
label(uncancellable)
label(return)

newmem:
  cmp [moveid],1F4100DD // Pole Spin
  je cancellable
  cmp [moveid],1BEE00E6 //dt bike stinger
  je cancellable
  cmp [moveid],1B9F0136 //cut-in jump
  je cancellable
  cmp [moveid],C800D4 //break spiral p1
  je cancellable
  cmp [moveid],D200D4 //break spiral p2
  je cancellable
  cmp [moveid],DC00D4 //break spiral p3
  je cancellable
  cmp [moveid],12C00D4 //heat up
  je cancellable
  cmp [moveid],13600D4 //heat up 2
  je cancellable
  cmp [moveid],13880136 //fireworks (grounded)
  je cancellable
  cmp [moveid],1F400E6 //slipstream p1
  je cancellable
  cmp [moveid],1F4000DF //Electric Balls
  je cancellable
  cmp [moveid],03E800E6 //Back Cav
  je cancellable
  cmp [moveid],1B6200E6 //Cavaliere Full Throttle
  je cancellable
  cmp [moveid],177000E6 //Cavaliere Wheelie Jump
  je cancellable
  cmp [moveid],7800F0 //2nd hit of DSD Combo A
  je cancellable
  cmp [moveid],6E00FA //2nd hit of Sparda Combo A
  je cancellable
  cmp [moveid],7800C8 //2nd hit of Rebellion Combo A
  je cancellable
  cmp [moveid],138800E6 // Cavaliere Combo B first hit
  je cancellable
  cmp [moveid],0FA200E6 // Cavaliere Idling
  je cancellable
  cmp [moveid],139C00E6 // Cavaliere Doughnut
  je cancellable
  cmp [moveid],139E00E6 // Cavaliere Doughnut 2
  je cancellable
  cmp [moveid],01F500E6 // Cavaliere Slipstream 2
  je cancellable
  jmp uncancellable

uncancellable:
  mov word ptr [rdi+58],0000
  jmp return

cancellable:
  mov word ptr [rdi+58],0100
  jmp return

cancelcertainthings:
  jmp newmem
  nop
return:
registersymbol(cancelcertainthings)

[DISABLE]
cancelcertainthings:
  db 66 C7 47 58 00 00
unregistersymbol(cancelcertainthings)
dealloc(newmem)
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>11759</ID>
                      <Description>"Cancel Out Of Nero's DT Activation With jump"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{ Game   : DevilMayCry5.exe
  Version: 
  Date   : 2019-08-13
  Author : SSSiyan
}
[ENABLE]
//aobscanmodule(cancelcertainthings,DevilMayCry5.exe,66 C7 47 58 00 00)
define(cancelcertainthings,DevilMayCry5.exe+18DDFC0)
alloc(newmem,$1000,cancelcertainthings)
label(cancellable)
label(uncancellable)
label(return)

newmem:
  cmp [moveid],A //Nero Ground DT
  je cancellable
  cmp [moveid],64000A //Nero Air DT
  je cancellable
  jmp uncancellable

uncancellable:
  mov word ptr [rdi+58],0000
  jmp return

cancellable:
  mov word ptr [rdi+58],0100
  jmp return

cancelcertainthings:
  jmp newmem
  nop
return:
registersymbol(cancelcertainthings)

[DISABLE]
cancelcertainthings:
  db 66 C7 47 58 00 00
unregistersymbol(cancelcertainthings)
dealloc(newmem)
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>11156</ID>
                      <Description>"Cancel Out Of Anything"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{ Game   : DevilMayCry5.exe
  Version: 
  Date   : 2019-08-13
  Author : SSSiyan
}
[ENABLE]
//aobscanmodule(cancelanything,DevilMayCry5.exe,66 C7 47 58 00 00)
define(cancelanything,DevilMayCry5.exe+18DDFC0)
cancelanything:
nop
nop
nop
nop
nop
nop
registersymbol(cancelanything)

[DISABLE]
cancelanything:
  db 66 C7 47 58 00 00
unregistersymbol(cancelanything)
dealloc(newmem)
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>12095</ID>
                      <Description>"Guard Cancel Out Of Anything BROKE"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{ Game   : DevilMayCry5.exe
  Version:
  Date   : 2019-08-13
  Author : SSSiyan
}
[ENABLE]
//aobscanmodule(cancelcertainthings,DevilMayCry5.exe,66 C7 47 58 00 00)
define(cancelcertainthings,DevilMayCry5.exe+18DDFC0)
alloc(newmem,$1000,cancelcertainthings)
label(cancellable)
label(uncancellable)
label(return)
label(guard)

newmem:

guard:
  cmp [styleid],3
  jne uncancellable
  cmp [inputpressed],40080 //guard
  je cancellable
  cmp [inputpressed],40480 //guard + lockon
  je cancellable
  jmp uncancellable

uncancellable:
  mov word ptr [rdi+58],0000
  jmp return

cancellable:
  mov word ptr [rdi+58],0100
  jmp return

cancelcertainthings:
  jmp newmem
  nop
return:
registersymbol(cancelcertainthings)

[DISABLE]
cancelcertainthings:
  db 66 C7 47 58 00 00
unregistersymbol(cancelcertainthings)
dealloc(newmem)
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>11152</ID>
                      <Description>"---------------------------------------"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>11153</ID>
                      <Description>"Skip Anims 2"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{ Game   : DevilMayCry5.exe
  Version: 
  Date   : 2019-08-13
  Author : SSSiyan
}
[ENABLE]
//aobscanmodule(skipanythingwithanything,DevilMayCry5.exe,66 C7 47 5E 00 00)
define(skipanythingwithanything,DevilMayCry5.exe+18DDFC6)
alloc(newmem,$1000,skipanythingwithanything)
label(cancellable)
label(uncancellable)
label(return)

newmem:
  //cmp [moveid],03F2
  jmp cancellable

uncancellable:
  mov word ptr [rdi+5E],0000
  jmp return

cancellable:
  mov word ptr [rdi+5E],0100
  jmp return

skipanythingwithanything:
  jmp newmem
  nop
return:
registersymbol(skipanythingwithanything)

[DISABLE]
skipanythingwithanything:
  db 66 C7 47 5E 00 00
unregistersymbol(skipanythingwithanything)
dealloc(newmem)
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>12182</ID>
                      <Description>"JC and Stinger Jump cancels"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{ Game   : DevilMayCry5.exe
  Version: 
  Date   : 2019-08-13
  Author : SSSiyan
}
[ENABLE]
//aobscanmodule(skipanythingwithanything,DevilMayCry5.exe,66 C7 47 5E 00 00)
define(skipanythingwithanything,DevilMayCry5.exe+18DDFC6)
alloc(newmem,$1000,skipanythingwithanything)
label(cancellable)
label(uncancellable)
label(return)
label(cavcheck)
label(JCcheck)

newmem:
  cmp [moveid],5280000 //Stinger jump
  je cancellable
  jmp cavcheck

cavcheck:
  cmp [weaponid],6
  jne JCcheck
  jmp uncancellable

JCcheck:
  cmp [moveid],53C0000 //Dante JC
  je cancellable
  jmp uncancellable

uncancellable:
  mov word ptr [rdi+5E],0000
  jmp return

cancellable:
  mov word ptr [rdi+5E],0100
  jmp return

skipanythingwithanything:
  jmp newmem
  nop
return:
registersymbol(skipanythingwithanything)

[DISABLE]
skipanythingwithanything:
  db 66 C7 47 5E 00 00
unregistersymbol(skipanythingwithanything)
dealloc(newmem)
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>11174</ID>
                      <Description>"---------------------------------------"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>11149</ID>
                      <Description>"Skip Anims 1"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{ Game   : DevilMayCry5.exe
  Version: 
  Date   : 2019-08-13
  Author : SSSiyan
}
[ENABLE]
//aobscanmodule(skipanythingwithanotherattack,DevilMayCry5.exe,48 C7 47 50 00 00 00 00 48 89)
define(skipanythingwithanotherattack,DevilMayCry5.exe+18DDFA2)
alloc(newmem,$1000,skipanythingwithanotherattack)
label(cancellable)
label(uncancellable)
label(return)

newmem:
  //cmp [moveid],
  jmp uncancellable

uncancellable:
  mov qword ptr [rdi+50],00000000
  jmp return

cancellable:
  mov qword ptr [rdi+50],00000100
  jmp return

skipanythingwithanotherattack:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(skipanythingwithanotherattack)

[DISABLE]
skipanythingwithanotherattack:
  db 48 C7 47 50 00 00 00 00
unregistersymbol(skipanythingwithanotherattack)
dealloc(newmem)
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>11151</ID>
                      <Description>"Nero JC Cancel (only works into RQ, but now you can use other cheats at the same time)"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{ Game   : DevilMayCry5.exe
  Version: 
  Date   : 2019-08-13
  Author : SSSiyan
}
[ENABLE]
//aobscanmodule(skipanythingwithanotherattack,DevilMayCry5.exe,48 C7 47 50 00 00 00 00 48 89)
define(skipanythingwithanotherattack,DevilMayCry5.exe+18DDFA2)
alloc(newmem,$1000,skipanythingwithanotherattack)
label(cancellable)
label(uncancellable)
label(return)

newmem:
  cmp [moveid],53C0000 //Nero JC
  je cancellable

uncancellable:
  mov qword ptr [rdi+50],00000000
  jmp return

cancellable:
  mov qword ptr [rdi+50],00000100
  jmp return

skipanythingwithanotherattack:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(skipanythingwithanotherattack)

[DISABLE]
skipanythingwithanotherattack:
  db 48 C7 47 50 00 00 00 00
unregistersymbol(skipanythingwithanotherattack)
dealloc(newmem)
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>11158</ID>
                      <Description>"---------------------------------------"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>12039</ID>
                      <Description>"Jump+Shotgun height edit"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{ Game   : DevilMayCry5.exe
  Version: 
  Date   : 2019-08-15
  Author : SSSiyan
}
[ENABLE]
//guncancelling
//aobscanmodule(guncancelling,DevilMayCry5.exe,C7 47 5A 00 00 00 00)
define(guncancelling,DevilMayCry5.exe+18DDFB9)
alloc(newmem,$1000,guncancelling)
label(moveidcheck)
label(cancellable)
label(uncancellable)
label(return)

newmem:
  cmp [gunid],1
  je moveidcheck
  jmp uncancellable

moveidcheck:
  cmp [moveid],3E80000
  je cancellable
  cmp [moveid],6400D2
  je cancellable
  jmp uncancellable

uncancellable:
  mov [rdi+5A],00000000
  jmp return


cancellable:
  mov [rdi+5A],01000100
  jmp return

guncancelling:
  jmp newmem
  nop
  nop
return:
registersymbol(guncancelling)

[DISABLE]
//guncancelling
guncancelling:
  db C7 47 5A 00 00 00 00
unregistersymbol(guncancelling)
dealloc(newmem)
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>12098</ID>
                      <Description>"Cancel some things with some guns also KA is scary"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{ Game   : DevilMayCry5.exe
  Version: 
  Date   : 2019-08-15
  Author : SSSiyan
}
[ENABLE]
//guncancelling
//aobscanmodule(guncancelling,DevilMayCry5.exe,C7 47 5A 00 00 00 00)
define(guncancelling,DevilMayCry5.exe+18DDFB9)
alloc(newmem,$1000,guncancelling)
label(moveidcheck)
label(cancellable)
label(uncancellable)
label(return)

newmem:
jmp cancellable

moveidcheck:
  cmp [moveid],3E80000
  je cancellable
  cmp [moveid],6400D2
  je cancellable
  jmp uncancellable

uncancellable:
  mov [rdi+5A],00000000
  jmp return


cancellable:
  mov [rdi+5A],01000100
  jmp return

guncancelling:
  jmp newmem
  nop
  nop
return:
registersymbol(guncancelling)

[DISABLE]
//guncancelling
guncancelling:
  db C7 47 5A 00 00 00 00
unregistersymbol(guncancelling)
dealloc(newmem)
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>11183</ID>
                      <Description>"---------------------------------------"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>12099</ID>
                      <Description>"Cancel into swordmaster things"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{ Game   : DevilMayCry5.exe
  Version: 
  Date   : 2019-08-29
  Author :Mstislav Capusta/SSSiyan
}

[ENABLE]
//aobscanmodule(swordmastercancel,DevilMayCry5.exe,48 89 87 88 00 00 00 66 89 87 90 00 00 00 48)
define(swordmastercancel,DevilMayCry5.exe+1A1AB79)
alloc(newmem,$1000,swordmastercancel)
label(cancellable)
label(uncancellable)
label(return)

newmem:
  jmp return

cancellable:
  mov [rdi+00000088],0
  jmp return

uncancellable:
  mov [rdi+00000088],rax
  jmp return

swordmastercancel:
  jmp newmem
  nop
  nop
return:
registersymbol(swordmastercancel)

[DISABLE]
swordmastercancel:
  db 48 89 87 88 00 00 00
unregistersymbol(swordmastercancel)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "DevilMayCry5.exe"+1585F4C9

"DevilMayCry5.exe"+1585F4A5: 57                                            -  push rdi
"DevilMayCry5.exe"+1585F4A6: 48 83 EC 20                                   -  sub rsp,20
"DevilMayCry5.exe"+1585F4AA: 48 89 D7                                      -  mov rdi,rdx
"DevilMayCry5.exe"+1585F4AD: 48 89 CB                                      -  mov rbx,rcx
"DevilMayCry5.exe"+1585F4B0: E8 CB EA 07 EC                                -  call DevilMayCry5.exe+18DDF80
"DevilMayCry5.exe"+1585F4B5: 48 8B 43 50                                   -  mov rax,[rbx+50]
"DevilMayCry5.exe"+1585F4B9: 48 83 78 18 00                                -  cmp qword ptr [rax+18],00
"DevilMayCry5.exe"+1585F4BE: 75 17                                         -  jne DevilMayCry5.exe+1585F4D7
"DevilMayCry5.exe"+1585F4C0: 31 C0                                         -  xor eax,eax
"DevilMayCry5.exe"+1585F4C2: 48 89 87 80 00 00 00                          -  mov [rdi+00000080],rax
// ---------- INJECTING HERE ----------
"DevilMayCry5.exe"+1585F4C9: 48 89 87 88 00 00 00                          -  mov [rdi+00000088],rax
// ---------- DONE INJECTING  ----------
"DevilMayCry5.exe"+1585F4D0: 66 89 87 90 00 00 00                          -  mov [rdi+00000090],ax
"DevilMayCry5.exe"+1585F4D7: 48 8B 5C 24 30                                -  mov rbx,[rsp+30]
"DevilMayCry5.exe"+1585F4DC: 48 83 C4 20                                   -  add rsp,20
"DevilMayCry5.exe"+1585F4E0: 5F                                            -  pop rdi
"DevilMayCry5.exe"+1585F4E1: C3                                            -  ret 
"DevilMayCry5.exe"+1585F4E2: CC                                            -  int 3 
"DevilMayCry5.exe"+1585F4E3: F8                                            -  clc 
"DevilMayCry5.exe"+1585F4E4: 2B A8 4C 01 00 00                             -  sub ebp,[rax+0000014C]
"DevilMayCry5.exe"+1585F4EA: 00 3E                                         -  add [rsi],bh
"DevilMayCry5.exe"+1585F4EC: C7                                            -  db -39
}
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>12100</ID>
                      <Description>"---------------------------------------"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>11175</ID>
                      <Description>"Petbreaker (breaks V's summons)"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{ Game   : DevilMayCry5.exe
  Version: 
  Date   : 2019-08-13
  Author : SSSiyan
}
[ENABLE]
//aobscanmodule(petbreaker,DevilMayCry5.exe,66 C7 47 5F 00 00)
define(petbreaker,DevilMayCry5.exe+7D1355)
alloc(newmem,$1000,petbreaker)
label(code)
label(return)

newmem:

code:
  mov word ptr [rdi+5F],0100
  jmp return

petbreaker:
  jmp newmem
  nop
return:
registersymbol(petbreaker)

[DISABLE]
petbreaker:
  db 66 C7 47 5F 00 00
unregistersymbol(petbreaker)
dealloc(newmem)
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>12031</ID>
                      <Description>"---------------------------------------"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>11112</ID>
                  <Description>"Speed Properties (tick one category at a time, they use the same address)"</Description>
                  <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
[DISABLE]
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>11110</ID>
                      <Description>"All Speed"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{ Game   : DevilMayCry5.exe
  Version: 
  Date   : 2019-08-12
  Author : SSSiyan
}
[ENABLE]
//aobscanmodule(allentspeedmult,DevilMayCry5.exe,F3 0F 11 41 4C 48 8B 5C)
define(allentspeedmult,DevilMayCry5.exe+1F60B44)
alloc(newmem,$1000,allentspeedmult)
registersymbol(allentspeedmult)
label(code)
label(return)
alloc(allentspeed,$1000)
registersymbol(allespeed)
label(allespeed)
allentspeed:
allespeed:
dd (float)1.2

newmem:
mulss xmm0,[allespeed]

code:
  movss [rcx+4C],xmm0
  jmp return

allentspeedmult:
  jmp newmem
return:

[DISABLE]

allentspeedmult:
  db F3 0F 11 41 4C

unregistersymbol(allentspeedmult)
dealloc(newmem)

dealloc(allentspeed)
unregistersymbol(allespeed)

{
// ORIGINAL CODE - INJECTION POINT: "DevilMayCry5.exe"+16C441C4

"DevilMayCry5.exe"+16C441A0: 48 83 79 18 00           -  cmp qword ptr [rcx+18],00
"DevilMayCry5.exe"+16C441A5: 75 19                    -  jne DevilMayCry5.exe+16C441C0
"DevilMayCry5.exe"+16C441A7: 45 31 C0                 -  xor r8d,r8d
"DevilMayCry5.exe"+16C441AA: 48 89 D9                 -  mov rcx,rbx
"DevilMayCry5.exe"+16C441AD: 41 8D 50 46              -  lea edx,[r8+46]
"DevilMayCry5.exe"+16C441B1: 48 8B 5C 24 30           -  mov rbx,[rsp+30]
"DevilMayCry5.exe"+16C441B6: 48 83 C4 20              -  add rsp,20
"DevilMayCry5.exe"+16C441BA: 5F                       -  pop rdi
"DevilMayCry5.exe"+16C441BB: E9 D0 2D 7A EB           -  jmp DevilMayCry5.exe+23E6F90
"DevilMayCry5.exe"+16C441C0: 66 0F 5A C0              -  cvtpd2ps xmm0,xmm0
// ---------- INJECTING HERE ----------
"DevilMayCry5.exe"+16C441C4: F3 0F 11 41 4C           -  movss [rcx+4C],xmm0
// ---------- DONE INJECTING  ----------
"DevilMayCry5.exe"+16C441C9: 48 8B 5C 24 30           -  mov rbx,[rsp+30]
"DevilMayCry5.exe"+16C441CE: 48 83 C4 20              -  add rsp,20
"DevilMayCry5.exe"+16C441D2: 5F                       -  pop rdi
"DevilMayCry5.exe"+16C441D3: C3                       -  ret 
"DevilMayCry5.exe"+16C441D4: CC                       -  int 3 
"DevilMayCry5.exe"+16C441D5: 41 52                    -  push r10
"DevilMayCry5.exe"+16C441D7: 48 8D 64 24 F8           -  lea rsp,[rsp-08]
"DevilMayCry5.exe"+16C441DC: C7 04 24 FF FF FF FF     -  mov [rsp],FFFFFFFF
"DevilMayCry5.exe"+16C441E3: 44 29 14 24              -  sub [rsp],r10d
"DevilMayCry5.exe"+16C441E7: 44 87 14 24              -  xchg [rsp],r10d
}
</AssemblerScript>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>11111</ID>
                          <Description>"All Speed Mult"</Description>
                          <VariableType>Float</VariableType>
                          <Address>allespeed</Address>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>11107</ID>
                      <Description>"Player Speed"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{ Game   : DevilMayCry5.exe
  Version: 
  Date   : 2019-08-12
  Author : SSSiyan
}
[ENABLE]
define(playerspeedmult,DevilMayCry5.exe+1F60B44)
alloc(newmem,$1000,playerspeedmult)
registersymbol(playerspeedmult)
label(code)
label(speedup)
label(return)
alloc(playerspeed,$1000)
registersymbol(plspeed)
label(plspeed)
playerspeed:
plspeed:
dd (float)1.2

newmem:
cmp byte ptr [rcx-40],'play'
je speedup
jmp code

speedup:
mulss xmm0,[plspeed]

code:
  movss [rcx+4C],xmm0
  jmp return

playerspeedmult:
  jmp newmem
return:

[DISABLE]
playerspeedmult:
  db F3 0F 11 41 4C
unregistersymbol(playerspeedmult)
dealloc(newmem)

dealloc(playerspeed)
unregistersymbol(plspeed)
</AssemblerScript>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>11108</ID>
                          <Description>"Player Speed Mult"</Description>
                          <VariableType>Float</VariableType>
                          <Address>plspeed</Address>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>12190</ID>
                      <Description>"Faster Million Stab Startup"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{ Game   : DevilMayCry5.exe
  Version: 
  Date   : 2019-08-12
  Author : SSSiyan
}
[ENABLE]
define(playerspeedmult,DevilMayCry5.exe+1F60B44)
alloc(newmem,$1000,playerspeedmult)
registersymbol(playerspeedmult)
label(code)
label(mscheck)
label(speedup)
label(return)
alloc(playerspeed,$1000)
registersymbol(plspeed)
label(plspeed)
playerspeed:
plspeed:
dd (float)2.5

newmem:
cmp byte ptr [rcx-40],'play'
je mscheck
jmp code

mscheck:
cmp [moveid],00DC00C8 //million stab start reb
je speedup
cmp [moveid],00D200FA //million stab start sparda
je speedup
cmp [moveid],00DC00F0 //million stab start dsd
je speedup
jmp code

speedup:
mulss xmm0,[plspeed]

code:
  movss [rcx+4C],xmm0
  jmp return

playerspeedmult:
  jmp newmem
return:

[DISABLE]
playerspeedmult:
  db F3 0F 11 41 4C
unregistersymbol(playerspeedmult)
dealloc(newmem)

dealloc(playerspeed)
unregistersymbol(plspeed)
</AssemblerScript>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>12191</ID>
                          <Description>"Million Stab Speed Mult"</Description>
                          <VariableType>Float</VariableType>
                          <Address>plspeed</Address>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>12309</ID>
                      <Description>"Faster Million Stab Startup + Quicksilver When LS held BROKE"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{ Game   : DevilMayCry5.exe
  Version: 
  Date   : 2019-08-12
  Author : SSSiyan
}
[ENABLE]
define(playerspeedmult,DevilMayCry5.exe+1F60B44)
alloc(newmem,$1000,playerspeedmult)
registersymbol(playerspeedmult)
label(code)
label(mscheck)
label(speedup)
label(slowdowncheck)
label(slowdown)
label(return)
alloc(playerspeed,$1000)
registersymbol(plspeed)
registersymbol(plslow)
playerspeed:
plspeed:
dd (float)2.5
plslow:
dd (float)0.3

newmem:
cmp byte ptr [rcx-40],'play'
//je mscheck
jne slowdowncheck
je mscheck
//cmp byte ptr [rcx-342],'Blood'
//je mscheck
jmp slowdowncheck

mscheck:
cmp [moveid],00DC00C8 //million stab start reb
je speedup
cmp [moveid],00D200FA //million stab start sparda
je speedup
cmp [moveid],00DC00F0 //million stab start dsd
je speedup
jmp code

slowdowncheck:
cmp byte ptr [rcx+1A0],'empe'
je code
cmp byte ptr [inputpressed+1],10
je slowdown
cmp byte ptr [inputpressed+1],14
je slowdown
cmp byte ptr [inputpressed+1],54
je slowdown
cmp byte ptr [inputpressed+1],50
je slowdown
jmp code

slowdown:
mulss xmm0,[plslow]
jmp code

speedup:
mulss xmm0,[plspeed]
jmp code

code:
  movss [rcx+4C],xmm0
  jmp return

playerspeedmult:
  jmp newmem
return:

[DISABLE]
playerspeedmult:
  db F3 0F 11 41 4C
unregistersymbol(playerspeedmult)
dealloc(newmem)

dealloc(playerspeed)
unregistersymbol(plspeed)
unregistersymbol(plslow)
</AssemblerScript>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>12315</ID>
                          <Description>"Quicksilver Speed Mult"</Description>
                          <VariableType>Float</VariableType>
                          <Address>plslow</Address>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>11181</ID>
                      <Description>"Sky Star Speed"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{ Game   : DevilMayCry5.exe
  Version: 
  Date   : 2019-08-12
  Author : SSSiyan
}
[ENABLE]
//aobscanmodule(playerspeedmult,DevilMayCry5.exe,F3 0F 11 41 4C 48 8B 5C)
define(playerspeedmult,DevilMayCry5.exe+1F60B44)
alloc(newmem,$1000,playerspeedmult)
registersymbol(playerspeedmult)
label(code)
label(skystar)
label(return)
alloc(playerspeed,$1000)
label(skystarspeed)
label(skystarcheck)
playerspeed:
skystarspeed:
  dd (float)2.5

newmem:
  cmp byte ptr [rcx-40],'play'
  je skystarcheck
  jmp code

skystarcheck:
  cmp [moveid],157C01F4 //sky star
  je skystar
  jmp code

skystar:
  mulss xmm0,[skystarspeed]

code:
  movss [rcx+4C],xmm0
  jmp return

playerspeedmult:
  jmp newmem
return:

[DISABLE]
playerspeedmult:
  db F3 0F 11 41 4C
unregistersymbol(playerspeedmult)
dealloc(newmem)
dealloc(playerspeed)
</AssemblerScript>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>11182</ID>
                          <Description>"Sky Star Speed Mult"</Description>
                          <VariableType>Float</VariableType>
                          <Address>plspeed</Address>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>11168</ID>
                      <Description>"V Summons Speed"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{ Game   : DevilMayCry5.exe
  Version: 
  Date   : 2019-08-12
  Author : SSSiyan
}
[ENABLE]
//aobscanmodule(vsummonspeedmult,DevilMayCry5.exe,F3 0F 11 41 4C 48 8B 5C)
define(vsummonspeedmult,DevilMayCry5.exe+1F60B44)
alloc(newmem,$1000,vsummonspeedmult)
registersymbol(vsummonspeedmult)
label(code)
label(return)
alloc(vsummonspeed,$1000)
registersymbol(vsspeed)
label(vsspeed)
label(pets)
label(speedup)
vsummonspeed:
vsspeed:
dd (float)1.4

newmem:
cmp byte ptr [rcx-6E],'Enem'
je code

pets:
cmp [rcx+40],D //Shadow
je speedup

cmp [rcx+40],E //Griffon
je speedup

cmp [rcx+40],10 //Nightmare
je speedup

jmp code

speedup:
mulss xmm0,[vsspeed]

code:
  movss [rcx+4C],xmm0
  jmp return

vsummonspeedmult:
  jmp newmem
return:

[DISABLE]

vsummonspeedmult:
  db F3 0F 11 41 4C

unregistersymbol(vsummonspeedmult)
dealloc(newmem)

dealloc(vsummonspeed)
unregistersymbol(vsspeed)
</AssemblerScript>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>11169</ID>
                          <Description>"V Summons Speed Mult"</Description>
                          <VariableType>Float</VariableType>
                          <Address>vsspeed</Address>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>11103</ID>
                      <Description>"Enemy Speed"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{ Game   : DevilMayCry5.exe
  Version: 
  Date   : 2019-08-12
  Author : SSSiyan
}
[ENABLE]
//aobscanmodule(enemyspeedmult,DevilMayCry5.exe,F3 0F 11 41 4C 48 8B 5C)
define(enemyspeedmult,DevilMayCry5.exe+1F60B44)
alloc(newmem,$1000,enemyspeedmult)
registersymbol(enemyspeedmult)
label(code)
label(return)
alloc(enemyspeed,$1000)
registersymbol(emspeed)
label(emspeed)
enemyspeed:
emspeed:
dd (float)0.001

newmem:
cmp byte ptr [rcx-40],'play'
je code
mulss xmm0,[emspeed]

code:
  movss [rcx+4C],xmm0
  jmp return

enemyspeedmult:
  jmp newmem
return:

[DISABLE]

enemyspeedmult:
  db F3 0F 11 41 4C

unregistersymbol(enemyspeedmult)
dealloc(newmem)

dealloc(enemyspeed)
unregistersymbol(emspeed)

{
// ORIGINAL CODE - INJECTION POINT: "DevilMayCry5.exe"+16C441C4

"DevilMayCry5.exe"+16C441A0: 48 83 79 18 00           -  cmp qword ptr [rcx+18],00
"DevilMayCry5.exe"+16C441A5: 75 19                    -  jne DevilMayCry5.exe+16C441C0
"DevilMayCry5.exe"+16C441A7: 45 31 C0                 -  xor r8d,r8d
"DevilMayCry5.exe"+16C441AA: 48 89 D9                 -  mov rcx,rbx
"DevilMayCry5.exe"+16C441AD: 41 8D 50 46              -  lea edx,[r8+46]
"DevilMayCry5.exe"+16C441B1: 48 8B 5C 24 30           -  mov rbx,[rsp+30]
"DevilMayCry5.exe"+16C441B6: 48 83 C4 20              -  add rsp,20
"DevilMayCry5.exe"+16C441BA: 5F                       -  pop rdi
"DevilMayCry5.exe"+16C441BB: E9 D0 2D 7A EB           -  jmp DevilMayCry5.exe+23E6F90
"DevilMayCry5.exe"+16C441C0: 66 0F 5A C0              -  cvtpd2ps xmm0,xmm0
// ---------- INJECTING HERE ----------
"DevilMayCry5.exe"+16C441C4: F3 0F 11 41 4C           -  movss [rcx+4C],xmm0
// ---------- DONE INJECTING  ----------
"DevilMayCry5.exe"+16C441C9: 48 8B 5C 24 30           -  mov rbx,[rsp+30]
"DevilMayCry5.exe"+16C441CE: 48 83 C4 20              -  add rsp,20
"DevilMayCry5.exe"+16C441D2: 5F                       -  pop rdi
"DevilMayCry5.exe"+16C441D3: C3                       -  ret 
"DevilMayCry5.exe"+16C441D4: CC                       -  int 3 
"DevilMayCry5.exe"+16C441D5: 41 52                    -  push r10
"DevilMayCry5.exe"+16C441D7: 48 8D 64 24 F8           -  lea rsp,[rsp-08]
"DevilMayCry5.exe"+16C441DC: C7 04 24 FF FF FF FF     -  mov [rsp],FFFFFFFF
"DevilMayCry5.exe"+16C441E3: 44 29 14 24              -  sub [rsp],r10d
"DevilMayCry5.exe"+16C441E7: 44 87 14 24              -  xchg [rsp],r10d
}
</AssemblerScript>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>11104</ID>
                          <Description>"Enemy Speed Mult"</Description>
                          <VariableType>Float</VariableType>
                          <Address>emspeed</Address>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>11105</ID>
                      <Description>"Effect Speed"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{ Game   : DevilMayCry5.exe
  Version: 
  Date   : 2019-08-12
  Author : SSSiyan
}
[ENABLE]
//aobscanmodule(effectspeedmult,DevilMayCry5.exe,F3 0F 11 41 4C 48 8B 5C)
define(effectspeedmult,DevilMayCry5.exe+1F60B44)
alloc(newmem,$1000,effectspeedmult)
registersymbol(effectspeedmult)
label(code)
label(return)
alloc(effectspeed,$1000)
registersymbol(fxspeed)
label(fxspeed)
effectspeed:
fxspeed:
dd (float)0.5

newmem:
cmp byte ptr [rcx+180],'effect'
jne code
mulss xmm0,[fxspeed]

code:
  movss [rcx+4C],xmm0
  jmp return

effectspeedmult:
  jmp newmem
return:

[DISABLE]

effectspeedmult:
  db F3 0F 11 41 4C

unregistersymbol(effectspeedmult)
dealloc(newmem)

dealloc(effectspeed)
unregistersymbol(fxspeed)

{
// ORIGINAL CODE - INJECTION POINT: "DevilMayCry5.exe"+16C441C4

"DevilMayCry5.exe"+16C441A0: 48 83 79 18 00           -  cmp qword ptr [rcx+18],00
"DevilMayCry5.exe"+16C441A5: 75 19                    -  jne DevilMayCry5.exe+16C441C0
"DevilMayCry5.exe"+16C441A7: 45 31 C0                 -  xor r8d,r8d
"DevilMayCry5.exe"+16C441AA: 48 89 D9                 -  mov rcx,rbx
"DevilMayCry5.exe"+16C441AD: 41 8D 50 46              -  lea edx,[r8+46]
"DevilMayCry5.exe"+16C441B1: 48 8B 5C 24 30           -  mov rbx,[rsp+30]
"DevilMayCry5.exe"+16C441B6: 48 83 C4 20              -  add rsp,20
"DevilMayCry5.exe"+16C441BA: 5F                       -  pop rdi
"DevilMayCry5.exe"+16C441BB: E9 D0 2D 7A EB           -  jmp DevilMayCry5.exe+23E6F90
"DevilMayCry5.exe"+16C441C0: 66 0F 5A C0              -  cvtpd2ps xmm0,xmm0
// ---------- INJECTING HERE ----------
"DevilMayCry5.exe"+16C441C4: F3 0F 11 41 4C           -  movss [rcx+4C],xmm0
// ---------- DONE INJECTING  ----------
"DevilMayCry5.exe"+16C441C9: 48 8B 5C 24 30           -  mov rbx,[rsp+30]
"DevilMayCry5.exe"+16C441CE: 48 83 C4 20              -  add rsp,20
"DevilMayCry5.exe"+16C441D2: 5F                       -  pop rdi
"DevilMayCry5.exe"+16C441D3: C3                       -  ret 
"DevilMayCry5.exe"+16C441D4: CC                       -  int 3 
"DevilMayCry5.exe"+16C441D5: 41 52                    -  push r10
"DevilMayCry5.exe"+16C441D7: 48 8D 64 24 F8           -  lea rsp,[rsp-08]
"DevilMayCry5.exe"+16C441DC: C7 04 24 FF FF FF FF     -  mov [rsp],FFFFFFFF
"DevilMayCry5.exe"+16C441E3: 44 29 14 24              -  sub [rsp],r10d
"DevilMayCry5.exe"+16C441E7: 44 87 14 24              -  xchg [rsp],r10d
}
</AssemblerScript>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>11106</ID>
                          <Description>"Effect Speed Mult"</Description>
                          <VariableType>Float</VariableType>
                          <Address>fxspeed</Address>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>12263</ID>
                      <Description>"Faster Snatch"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{ Game   : DevilMayCry5.exe
  Version: 
  Date   : 2019-09-08
  Author : SSSiyan
}
[ENABLE]
define(playerspeedmult,DevilMayCry5.exe+1F60B44)
alloc(newmem,$1000,playerspeedmult)
registersymbol(playerspeedmult)
label(code)
label(return)

label(snatchcheck)
label(snatchp1)
label(snatchp2)

alloc(playerspeed,$1000)
registersymbol(snatchspeed)
registersymbol(snatchpullspeed)
playerspeed:
snatchspeed:
dd (float)1.5
snatchpullspeed:
dd (float)2

newmem:
cmp byte ptr [rcx-40],'play'
je snatchcheck
jmp code

snatchcheck:
cmp [moveid],1F410064 //Ground Snatch (Mid)
je snatchp1
cmp [moveid],1F450064 //Ground Snatch (Low)
je snatchp1
cmp [moveid],1F460064 //Ground Snatch (High)
je snatchp1
cmp [moveid],0BB80046 //Air Snatch (Mid)
je snatchp1
cmp [moveid],0BBA0046 //Air Snatch (Low)
je snatchp1
cmp [moveid],0BB90046 //Air Snatch (High)
je snatchp1

cmp [moveid],0BC20046 //Air Pull (Mid)
je snatchp2
cmp [moveid],0BC40046 //Air Pull (Low)
je snatchp2
cmp [moveid],0BC30046 //Air Pull (High)
je snatchp2
cmp [moveid],07DA0046 //Ground Pull (Mid)
je snatchp2
cmp [moveid],07DC0046 //Ground Pull (Low)
je snatchp2
cmp [moveid],07DB0046 //Ground Pull (High)
je snatchp2
jmp code

snatchp1:
mulss xmm0,[snatchspeed]
jmp code

snatchp2:
mulss xmm0,[snatchpullspeed]
jmp code

code:
  movss [rcx+4C],xmm0
  jmp return

playerspeedmult:
  jmp newmem
return:

[DISABLE]
playerspeedmult:
  db F3 0F 11 41 4C
unregistersymbol(playerspeedmult)
dealloc(newmem)

dealloc(playerspeed)
unregistersymbol(snatchspeed)
unregistersymbol(snatchpullspeed)
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>18334</ID>
          <Description>"Your Preset"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
[DISABLE]
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>18358</ID>
              <Description>"Common"</Description>
              <Options moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
[DISABLE]
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>18359</ID>
                  <Description>"Select this, then paste content from above with ctrl V!"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
[DISABLE]
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>18335</ID>
              <Description>"Nero"</Description>
              <Options moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
[DISABLE]
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>18338</ID>
                  <Description>"Select this, then paste content from above with ctrl V!"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
[DISABLE]
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>18336</ID>
              <Description>"Dante"</Description>
              <Options moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
[DISABLE]
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>18339</ID>
                  <Description>"Select this, then paste content from above with ctrl V!"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
[DISABLE]
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>18337</ID>
              <Description>"V"</Description>
              <Options moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
[DISABLE]
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>18340</ID>
                  <Description>"Select this, then paste content from above with ctrl V!"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
[DISABLE]
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>18360</ID>
              <Description>"Practice"</Description>
              <Options moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
[DISABLE]
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>18361</ID>
                  <Description>"Select this, then paste content from above with ctrl V!"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
[DISABLE]
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>18362</ID>
              <Description>"Other"</Description>
              <Options moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
[DISABLE]
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>18363</ID>
                  <Description>"Select this, then paste content from above with ctrl V!"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
[DISABLE]
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>10925</ID>
      <Description>"Special Thanks (Double click &lt;script&gt;) --&gt;"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>/*

Thank you all so much for your work.
Doing my best not to take any undue credit,
I'd like to thank everyone who helped make this happen.
Please tweet me at @SSSiyan or add me on Discord at SSSiyan#1827 to help me fill in or correct credits.
If you have any mods you have ready to be added to this list, let me know!
If you have any requests, feel free to ask. I can't guarantee success, but I'll do my best to make them happen.
This list can be found at
https://docs.google.com/spreadsheets/d/16Ltm25tnfn0Dxps-HLwV4igdNUf21gOkgDH5PH599xs/edit?usp=sharing
To access the requests list, click the tab located at the bottom of the page.
To add something to the request list, @ me on twitter at @SSSiyan

DINPUT8.DLL/DMC5_JC.DLL/DMC5.DLL/TURBO.INI
Mstislav Capusta

AUTOMATION HELP
Whitelion
nino

Common Changes
TURBO
cheburrat0r
Mstislav Capusta
socks
CHARACTER SWAPPER
OleMagne
BUFFERED REVERSALS
socks
Nekupaska
cheburrat0r
RESET WEIGHT ON AIR HIKE
SSSiyan
NO SCREEN SHAKE
socks
Mstislav Capusta
NO JC COOLDOWN
Nekupaska
ENEMY STEP INERTIA
ProfessorFrog
cheburrat0r
NO SLOWMO
cheburrat0r
socks
SIYAN'S CAMERA FIX 1.0
SSSiyan
MOVING TARGET SWITCH
SSSiyan
FREEZE BP TIMER
SSSiyan
BP STAGE JUMP
Flemia
flarejune
SSSiyan
BP BOSS RUSH
Flemia
flarejune
SSSiyan
ALLOW KEYBOARD CAMERA MOVEMENT WHILE LOCKED ON
SSSiyan
ALLOW WALKING WITH KEYBOARD
SSSiyan

Dante Specific
BYPASS BP CAVALIERE R RESTRICTION
nino
BALROG PASSIVE SWITCH (V1.0 - DARKSLAYER STYLE)
nino
-BALROG SELECTED ONLY VER.
Edited by Whitelion
INFINITE IGNITION
SSSiyan
ALWAYS QUAD4SDT
SSSiyan
INFINITE Q4SDT EXIT WINDOW
SSSiyan
MAX SDT
Jessie Kazama
QUICK SDT
SSSiyan
ALWAYS GET 2 TRICKS
SSSiyan
ALWAYS GET 2 SKY STARS
SSSiyan
DT SUMMONED SWORDS [SDT ON, DT OFF]
SSSiyan
ALWAYS OVERTOP
SSSiyan
VARIALBLE ROYAL GUARD METER
SSSiyan
Jessie Kazama
socks
INSTANT RED HOT NIGHT
endneo
INF SUMMONED SWORDS
SSSiyan
INF ROYAL GUARD
Jessie Kazama
INF SKY STARS
flarejune
SDT ONLY CANCELS
SSSiyan
INF SDT DURATION
Jessie Kazama
GUARD FLYING WIP
socks
NO DT COOLDOWN
SSSiyan
MAGIC HAT STAYS OUT
endneo
SSSiyan
NEVER HIDE GUNS/WEAPONS HUD
SSSiyan
NO DT STINGER
SSSiyan
A FEW SDT MOVES OUTSIDE OF DT
SSSiyan
NO TARGET SWITCH
SSSiyan
TEMPORARY PLATFORMS
SSSiyan
GROUND MUSTANG IN THE AIR
SSSiyan

Nero Specific
DEVIL BREAKER SWITCHER
nino
Whitelion
INFINITE DEVIL BREAKERS
Mstislav Capusta
DISABLE WIRESNATCH 1.0
SSSiyan
socks
-NO EXCEPTIONS VER.
SSSiyan
socks
REPLACE GP GERBERA WITH GP01
SSSiyan
INF PUNCHLINE DURATION
SSSiyan
INF BLUE ROSE AMMO
Jessie Kazama
NERO WINGS ONLY DT
SSSiyan
MANUAL REV GIVES MAX EXCEED
Jessie Kazama
MAX EXCEED
Jessie Kazama
NO DT COOLDOWN
SSSiyan
INSTANT LEVEL 3 CHARGE SHOT
SSSiyan
FASTER CHARGE SHOT
SSSiyan
SKIP CHARGE SHOT 2
SSSiyan
NOTHING CANCELS BUBBLE
SSSiyan
FAST SLOW WORLD
SSSiyan
SHOWDOWN OUTSIDE OF DT
SSSiyan
MAXIMUM BET OUTSIDE OF DT
SSSiyan

V Specific
INF SUMMON POWERUP DURATION
Jessie Kazama
INF SUMMON VITALITY
Jessie Kazama
INFININITE EMPOWERED CANE
SSSiyan
NO DT COOLDOWN
SSSiyan
INF GAMBITS
SSSiyan
FASTER CHARGES
SSSiyan
UNSUMMON PETS WITH DPAD
SSSiyan

Practice
DIFFICULTY SELECT
Garuda
SSSiyan
INFINITE DT
Jessie Kazama
SIYAN MUST DIE
SSSiyan
socks
MUST STYLE MODE
SSSiyan
SSS MUST STYLE MODE
SSSiyan
ENEMY INSTANT DT IN DMD
SSSiyan
NO ONE TAKES DAMAGE
nino
PLAYER DAMAGE MODIFIER
nino
SSSiyan

Other
FREE JC
nino
BUFFERLESS REVERSALS
Nekupaska
cheburrat0r
INVULNERABLE
----
INF AIR HIKES
Jessie Kazama
NO LOCKON CAMERA
SSSiyan
HIDE HUD
socks
STYLE MULTIPLIER
Jessie Kazama
NO STYLE LOSS
Jessie Kazama
NO ATTACK LATENCY
flarejune
SSSiyan
FREEZE SECRET MISSION TIMER
Jessie Kazama
ALWAYS S+ TAUNTS
SSSiyan
PLAYER WEIGHT MODIFIER
SSSiyan
cheburrat0r
Mstislav Capusta
REPLACE AUTO MODE WITH AI MODE
SSSiyan
ANIMATION PROPERTIES
SSSiyan
DHMalice
Rex Prime
SPEED PROPERTIES
SSSiyan
Garuda

SPECIAL THANKS
SSSiyan

CHANGELOG
SSSiyan

*/
[ENABLE]
[DISABLE]
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>18341</ID>
      <Description>"Changelog (Double click &lt;script&gt;) --&gt;"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>/*
TU3 Changelog:
0.1
Added loads of stuff.
0.2
Jessie Kazama's "1 Hit Kill" entry (half of "Inf HP") was broken and has been removed.
-Keep this in mind looking forward as this script can really be cleaned up.
-The original cheat for reference can be found in "DMC5_Denuvo_Reversals_Inertia_Cheats.CT". (FIXED AS OF 0.5)
0.3
Added Credits.
0.4
Added more difficulties.
Added Devil Breaker Switcher: Gamepad Mode 2.
Various text corrections.
0.5
Added Damage Modifier Multiplier.
Added Enemies Inf Health.
Added One Hit Kill.
Added Infinite Ignition
Replaced Player Inf Health.
Various text corrections.
BUG:Bufferless Reversals can not be disabled once enabled. (Works on Denuvoless?) (FIXED AS OF 0.6)
BUG:One Hit Kill checkbox will put the player on 1HP if stunned. (Like Mission 2 tentacles) (FIXED AS OF 0.6)
0.6
Fixed filesize.
Added Always Q4DT.
Added Hide HUD.
Added Inf Punchline Duration.
Removed newmem from reversals fix, so it disables correctly now.
Replaced health mods to iron out problems. Only one can be activated at a time with this method -
-These mods include: No One Dies, Player Inf Health, Enemy Inf Health, Enemy One Hit Kill, Enemy Damage Modifier Multiplier.
BUG:Enemy One Hit Kill doesn't seem to work on all enemy types.
Added table automation to prevent crashes when certain things are ticked at once.
Rearranged mods.
Added Player Presets.
-Added Player Preset: DHMalice, SSSiyan.
Various text corrections.
0.7
Added Player Weight Modifier.
Added Always Get 2 Tricks.
Added Infinite Q4SDT Exit Window.
Added Player Preset: Whitelion.
Added turbo PSA.
Replaced Enemy Step Inertia
-No longer prevents 0 velocity on the Y axis
-You can adjust the inertia value.
-Default can now also be easily adjusted.
-Adjusted Player Presets to account for this new option.
Fixed Always Q4SDT - Worked on every style but SSS.
Replaced Max Sin Devil Trigger with non AoB version.
Added hidden settings.
-Added Current Known Bugs (hidden under Changelog).
-Added old Health options (hidden under Changelog).
-Added Work In Progress (hidden under Special Thanks).
--Includes speed, rose pin idea.
Rearranged mods.
Edited automation.
-Mods that interfere with Devil Breaker Switcher are auto disabled.
Various text corrections.
1.0
Released to Twitter.
1.01
Added Player Preset: Millz.
1.02
Added speedhack cheats.
1.03
Added hidden Balrog Mode Change (Darkslayer style).
-Hidden because it seems to work for barely anyone.
Added Quick SDT.
You can now access Main Table while using Player Presets.
Removed Inf  Devil Breaker Uses.
-Moved to Work In Progress.
1.04
I lost this release and actually have no idea what I added, nodenuvo stuff was created.
1.05
Replaced Turbo, now won't affect cutscenes (disable in pause screen to ensure it returns to 1.0).
Added Disable Wiresnatch.
Added Replace GB Gerbera with GP01.
Added Variable Royal Guard Meter.
Added Siyan Must Die.
-Added Must Style Mode.
-Added Enemy Instant DT In DMD.
Added Siyan's Camera Fix.
Added No Slowmo (almost).
Added Disable Lockon Camera.
Added Nero Wings Only DT
Added to WIP.
-Enemies Always Think They're Offscreen (Breaks Movement).
Renamed a few labels within scripts to prevent problems.
Added Player Preset: Whirling.
Added Player Preset: Bloodyrains.
Replaced most aob scripts for quicker load times.
-Commented out aobs for future use.
Fixed memory leaks.
-Player Weight Modifier.
-Quick SDT.
Various text corrections.
1.06
Added Buffered Reversals.
Added Instant Red Hot Night.
Added SDT Only Cancels.
Added Guardfly Test.
Added Always S+ Taunt.
Replaced a few more AoBs
Added Animation Edits.
-guard_start.
-guard_loop.
-guard_end.
-rainstorm_start.
Added Player Preset: DelusionaryKiller
Added Player Preset: Rex Prime
Added Player Preset: ZeroMayCry9.
Added Player Preset: Naχ
Various text corrections.
1.07
Updated Disable Wiresnatch.
Various text corrections.
Added Nothing Cancels Bubble.
Added Charge Shot Testing:
-insant lv3 charge shot.
-faster charge shot.
-multiplier on charge.
-set start of each charge to 50.
-set start of each charge to 75.
-SkipChargeShot1&amp;2.
-SkipChargeShot2.
Removed Animation Edits.
-These can and should be installed through Fluffy. Found on Nexus or InfernalWorks.
Updated Player Presets
Various text corrections.

TU4 Changelog:
1.0
Ported almost everything to TU4. Thanks nino for support and porting the db switcher.
Added No DT Cooldown for every character.
Added Nero Specific Tweaks:
-Instant Level 3 Charge Shot.
-Faster Charge Shot.
-Skip Charge Shot 2.
-Nothing Cancels Bubble.
Added V Specific Tweaks:
-Infinite Empowered Cane.
-Inf Gambits.
Added Player Preset: ChaserTech.
Various text corrections.
1.1
Removed execute asynchronous from player presets.
Fixed Inf Q4SDT Exit Window.
1.2
Updated db switcher.
Added speed mults, hidden under WIP.
Updated Player Presets.
1.3
Added Character Swapper.
Added Animation Properties:
-Cancel Anything.
-Pole Dance Cancels.
-Skip Anims 1.
-Skip Anims 2.
-Cancel Out Of Nero's DT Activation and Payline with jump.
-JC Cancel.
-Bird Cancelling V.
-Cancel Out Or Nero's Payline With RQ.
-JC Cancel (Only into RQ).
-Petbreaker.
Added Speed Properties:
-All Speed.
-Player Speed.
-V Summons Speed.
-Enemy Speed.
-Effect Speed.
1.4
Replaced all AoB scans.
Added Inf Summoned Swords.
Added Always Overtop.
Edited Damage Mult.
-Now includes separate multipliers for SDT and Cavaliere. These are then filtered through your main multiplier.
1.5
Added Fast Slow World.
Added Magic Hat Stays Out.
Added Balrog Passive Switch (V1.0 - Darkslayer Style)
Replaced Infinite Ignition.
Added global allocs that let me use move IDs etc throughout the table.
Fixed Free JC, now works for both characters.
Fixed Sky Star speed.
Fixed Damage Multiplier.
1.6
Added Never Hide Guns/Weapons HUD
Added DT Summoned Swords [SDT On, DT Off]
Added Faster Snatch
Added BP Stage Jump [WIP]
Added Unsummon Pets With Dpad [WIP]
Added No Target Switch to allow:
-Added Temporary Platform (very buggy and has problems with Guard Flying WIP)
-Added Ground Mustang in the air with LS held or no lockon (same as above)
Added Always Get 2 Sky Stars
Added Reset Height On Air Hike
Fixed Always Get 2 Tricks
1.7
Added Infinite Devil Breakers
Added Showdown Outside of DT
Added Maximum Bet Outside of DT
Added A few SDT moves Outside of DT
Added No DT Stinger
Added Allow Keyboard Camera Movement While Locked On
Added Allow Walking With Keyboard
Updated BP Stage Jump
Added BP Boss Rush
Added Deep's Turbo
Added Replace Auto Mode With AI Mode
Added SSS Must Style Mode
Edited Automation

1.8
Added a bunch

1.9b
Ported most to NoDenuvo, some things have problems THANK YOU CAPCOM

*/
[ENABLE]
[DISABLE]
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>18343</ID>
          <Description>"Weapon ID"</Description>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>4 Bytes</VariableType>
          <Address>weaponid</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>11928</ID>
          <Description>"Move ID"</Description>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>4 Bytes</VariableType>
          <Address>moveid</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>18342</ID>
          <Description>"Style ID"</Description>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>4 Bytes</VariableType>
          <Address>styleid</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>18344</ID>
          <Description>"Gun ID"</Description>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>4 Bytes</VariableType>
          <Address>gunid</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>18345</ID>
          <Description>"Input Pressed"</Description>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>4 Bytes</VariableType>
          <Address>inputpressed</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>18346</ID>
          <Description>"Devil Breaker ID"</Description>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>4 Bytes</VariableType>
          <Address>dbid</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>18414</ID>
          <Description>"Grounded"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>groundedmem</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <Structures StructVersion="2">
    <Structure Name="unnamed structure" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="1" DoNotSaveLocal="1" RLECompression="1" AutoCreateStructsize="4096">
      <Elements>
        <Element Offset="0" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="8" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="16" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="28" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="32" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="40" Vartype="4 Bytes" Bytesize="4" RLECount="6" DisplayMethod="Unsigned Integer"/>
        <Element Offset="64" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="72" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="80" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="88" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="92" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="96" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="104" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="112" Vartype="Pointer" Bytesize="8" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="136" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="144" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="152" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="160" Vartype="Pointer" Bytesize="8" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="184" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="192" Vartype="Pointer" Bytesize="8" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="208" Vartype="4 Bytes" Bytesize="4" RLECount="6" DisplayMethod="Unsigned Integer"/>
        <Element Offset="232" Vartype="Pointer" Bytesize="8" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="264" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="268" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="272" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="280" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="284" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
        <Element Offset="292" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="304" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="312" Vartype="4 Bytes" Bytesize="4" RLECount="6" DisplayMethod="Unsigned Integer"/>
        <Element Offset="336" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="344" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="352" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="360" Vartype="4 Bytes" Bytesize="4" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="376" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="384" Vartype="Pointer" Bytesize="8" RLECount="5" DisplayMethod="Unsigned Integer"/>
        <Element Offset="424" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="432" Vartype="Pointer" Bytesize="8" RLECount="6" DisplayMethod="Unsigned Integer"/>
        <Element Offset="480" Vartype="4 Bytes" Bytesize="4" RLECount="6" DisplayMethod="Unsigned Integer"/>
        <Element Offset="504" Vartype="Pointer" Bytesize="8" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="536" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="540" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="544" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="552" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="556" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="560" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="572" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="576" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="584" Vartype="4 Bytes" Bytesize="4" RLECount="6" DisplayMethod="Unsigned Integer"/>
        <Element Offset="608" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="616" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="624" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="632" Vartype="4 Bytes" Bytesize="4" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="648" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="656" Vartype="Pointer" Bytesize="8" RLECount="19" DisplayMethod="Unsigned Integer"/>
        <Element Offset="808" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="812" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="816" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="824" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="828" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="832" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="844" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="848" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="856" Vartype="4 Bytes" Bytesize="4" RLECount="6" DisplayMethod="Unsigned Integer"/>
        <Element Offset="880" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="888" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="896" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="904" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="912" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="916" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="920" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="928" Vartype="4 Bytes" Bytesize="4" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="944" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="952" Vartype="4 Bytes" Bytesize="4" RLECount="10" DisplayMethod="Unsigned Integer"/>
        <Element Offset="992" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1000" Vartype="4 Bytes" Bytesize="4" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1016" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1024" Vartype="4 Bytes" Bytesize="4" RLECount="6" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1048" Vartype="Pointer" Bytesize="8" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1080" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1084" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="1088" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1096" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
        <Element Offset="1104" Vartype="Unicode String" Bytesize="48" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1152" Vartype="Unicode String" Bytesize="24" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1176" Vartype="Unicode String" Bytesize="12" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1188" Vartype="Unicode String" Bytesize="6" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1194" Vartype="Byte" Bytesize="1" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1195" Vartype="2 Bytes" Bytesize="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1197" Vartype="Byte" Bytesize="1" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1200" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1208" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
        <Element Offset="1216" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1224" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1232" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="1236" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1240" Vartype="Pointer" Bytesize="8" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1256" Vartype="Unicode String" Bytesize="12" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1268" Vartype="Unicode String" Bytesize="6" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1274" Vartype="Byte" Bytesize="1" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1276" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1288" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1296" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1304" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
        <Element Offset="1312" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1320" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1328" Vartype="Pointer" Bytesize="8" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1360" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1364" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1368" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1372" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1376" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="1380" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1384" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1392" Vartype="Float" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1404" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1408" Vartype="Pointer" Bytesize="8" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1440" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1444" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1448" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1452" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1456" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1464" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="1468" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1472" Vartype="Byte" Bytesize="1" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1476" Vartype="Double" Bytesize="8" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1492" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1496" Vartype="Float" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1504" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1512" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1516" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
        <Element Offset="1524" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1528" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1536" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1544" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1552" Vartype="4 Bytes" Bytesize="4" RLECount="10" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1592" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
        <Element Offset="1600" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1608" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1616" Vartype="Pointer" Bytesize="8" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1648" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="1652" Vartype="4 Bytes" Bytesize="4" RLECount="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1684" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1692" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1696" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1704" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1708" Vartype="String" Bytesize="5" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1713" Vartype="Byte" Bytesize="1" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1716" Vartype="Float" Bytesize="4" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1732" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1736" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1744" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1752" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1760" Vartype="Float" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1768" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1776" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1780" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="1784" Vartype="Pointer" Bytesize="8" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1816" Vartype="4 Bytes" Bytesize="4" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1832" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1840" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1844" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1856" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1864" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1876" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1884" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1896" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1904" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1912" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="1916" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1924" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1928" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1932" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1940" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1944" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1948" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1956" Vartype="Float" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1964" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1972" Vartype="Float" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1980" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1984" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1988" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1992" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2000" Vartype="Float" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2012" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2020" Vartype="Float" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2028" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2032" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2036" Vartype="4 Bytes" Bytesize="4" RLECount="13" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2088" Vartype="Pointer" Bytesize="8" RLECount="5" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2128" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2136" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2144" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2152" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2160" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2168" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
        <Element Offset="2176" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2184" Vartype="4 Bytes" Bytesize="4" RLECount="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2216" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2224" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2232" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
        <Element Offset="2240" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2248" Vartype="4 Bytes" Bytesize="4" RLECount="10" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2288" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2296" Vartype="4 Bytes" Bytesize="4" RLECount="6" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2320" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2328" Vartype="4 Bytes" Bytesize="4" RLECount="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2360" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2368" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2376" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
        <Element Offset="2384" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2392" Vartype="4 Bytes" Bytesize="4" RLECount="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2424" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
        <Element Offset="2432" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2440" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
        <Element Offset="2448" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2456" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2460" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2468" Vartype="Float" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2476" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2484" Vartype="Float" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2492" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2496" Vartype="Pointer" Bytesize="8" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2512" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2520" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
        <Element Offset="2528" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2536" Vartype="4 Bytes" Bytesize="4" RLECount="12" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2584" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
        <Element Offset="2592" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2600" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2608" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2616" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2624" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2632" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2640" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2648" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2656" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2664" Vartype="4 Bytes" Bytesize="4" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2680" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
        <Element Offset="2688" Vartype="Pointer" Bytesize="8" RLECount="26" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2896" Vartype="4 Bytes" Bytesize="4" RLECount="10" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2936" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
        <Element Offset="2944" Vartype="Pointer" Bytesize="8" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2960" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2968" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
        <Element Offset="2976" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2984" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2992" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="2996" Vartype="4 Bytes" Bytesize="4" RLECount="5" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3016" Vartype="Pointer" Bytesize="8" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3048" Vartype="4 Bytes" Bytesize="4" RLECount="26" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3152" Vartype="Pointer" Bytesize="8" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3168" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3176" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
        <Element Offset="3184" Vartype="Pointer" Bytesize="8" RLECount="28" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3408" Vartype="4 Bytes" Bytesize="4" RLECount="10" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3448" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
        <Element Offset="3456" Vartype="Pointer" Bytesize="8" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3472" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3480" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
        <Element Offset="3488" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3496" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3504" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="3508" Vartype="4 Bytes" Bytesize="4" RLECount="5" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3528" Vartype="Pointer" Bytesize="8" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3560" Vartype="4 Bytes" Bytesize="4" RLECount="26" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3664" Vartype="Pointer" Bytesize="8" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3680" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3688" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
        <Element Offset="3696" Vartype="Pointer" Bytesize="8" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3728" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="3732" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3736" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3744" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3752" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
        <Element Offset="3760" Vartype="Pointer" Bytesize="8" RLECount="28" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3984" Vartype="4 Bytes" Bytesize="4" RLECount="10" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4024" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
        <Element Offset="4032" Vartype="Pointer" Bytesize="8" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4048" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4056" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
        <Element Offset="4064" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4072" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4080" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="4084" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
      </Elements>
    </Structure>
  </Structures>
  <LuaScript>controlMainForm = getMainForm()
AddressList = getAddressList()

if getCEVersion == nil or getCEVersion() &lt; 6.5 then
  messageDialog('It is recommended to use at least Cheat Engine 6.7! (Your Version: '..getCEVersion()..')', mtError, mbOK)
end

errorOnLookupFailure(false)
setGlobalDelayBetweenHotkeyActivation(200)
DefaultProccessName = "DevilMayCry5.exe"
strings_add(getAutoAttachList(), DefaultProccessName)

PRIVATETABLE, SWITCHSUPPORT = true, false

function cycleFullCompact(sender,force)
  local state = not(compactmenuitem.Caption == 'Compact View Mode')
  if force~=nil then state = not force end
  compactmenuitem.Caption = state and 'Compact View Mode' or 'Full View Mode'
  getMainForm().Splitter1.Visible = state
  getMainForm().Panel4.Visible    = state
  getMainForm().Panel5.Visible    = state
end

function addCompactMenu()
  if compactmenualreadyexists then return end
  local parent = getMainForm().Menu.Items
  compactmenuitem = createMenuItem(parent); parent.add(compactmenuitem)
  compactmenuitem.Caption = 'Compact View Mode'
  compactmenuitem.OnClick = cycleFullCompact
  compactmenualreadyexists = 'yes'
end
addCompactMenu()
cycleFullCompact(nil, true)

PROCESS_NAME = 'DevilMayCry5.exe'
--------
-------- Auto Attach
--------
local autoAttachTimer = nil ---- variable to hold timer object
local autoAttachTimerInterval = 100 ---- Timer intervals are in milliseconds
local autoAttachTimerTicks = 0 ---- variable to count number of times the timer has run
local autoAttachTimerTickMax = 5000 ---- Set to zero to disable ticks max
local function autoAttachTimer_tick(timer) ---- Timer tick call back
        ---- Destroy timer if max ticks is reached
	if autoAttachTimerTickMax &gt; 0 and autoAttachTimerTicks &gt;= autoAttachTimerTickMax then
		timer.destroy()
	end
        ---- Check if process is running
	if getProcessIDFromProcessName(PROCESS_NAME) ~= nil then
		timer.destroy() ---- Destroy timer
		openProcess(PROCESS_NAME) ---- Open the process
        --getAddressList().getMemoryRecordByDescription("Activate Table").active=true
        --getAddressList().getMemoryRecordByDescription("Your Preset").active=true
        --getAddressList().getMemoryRecordByDescription("SSSiyan").active=true
        --getAddressList().getMemoryRecordByDescription("SSSiyan:Dante").active=true
	end
	autoAttachTimerTicks = autoAttachTimerTicks + 1 ---- Increase ticks
end
autoAttachTimer = createTimer(getMainForm()) ---- Create timer with the main form as it's parent
autoAttachTimer.Interval = autoAttachTimerInterval ---- Set timer interval
autoAttachTimer.OnTimer = autoAttachTimer_tick ---- Set timer tick call back

</LuaScript>
  <DisassemblerComments>
    <DisassemblerComment>
      <Address>"DevilMayCry5.exe"+C24FFA5</Address>
      <Comment>reads from inertia
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DevilMayCry5.exe"+C25008E</Address>
      <Comment>reads from inertia Y
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DevilMayCry5.exe"+C2500BE</Address>
      <Comment>reads from inertia
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DevilMayCry5.exe"+C250170</Address>
      <Comment>reads from inertia Y
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DevilMayCry5.exe"+D246A0E</Address>
      <Comment>crash
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DevilMayCry5.exe"+D6CDFF0</Address>
      <Comment>CHANGE BALROG MODE
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DevilMayCry5.exe"+121530B5</Address>
      <Comment>the part
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DevilMayCry5.exe"+12156273</Address>
      <Comment>bookmark 2
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DevilMayCry5.exe"+15C26E0D</Address>
      <Comment>(0.00) RG reading inertia0  pt1
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DevilMayCry5.exe"+15C26E38</Address>
      <Comment>(0.00) RG reading inertia 0 pt2
</Comment>
    </DisassemblerComment>
  </DisassemblerComments>
</CheatTable>
